{"id":495,"date":"2013-05-29T22:21:17","date_gmt":"2013-05-30T05:21:17","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=495"},"modified":"2020-04-29T18:23:36","modified_gmt":"2020-04-30T01:23:36","slug":"postgresql-data-types","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-data-types\/","title":{"rendered":"PostgreSQL Data Types"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about <strong>PostgreSQL data types<\/strong> including Boolean, character, numeric, temporal, array, json, uuid, and special types.<\/p>\n\n\n\n<h2><figure><img loading=\"lazy\" class=\"alignright wp-image-2539 size-medium\" title=\"PostgreSQL Data Types\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2013\/05\/PostgreSQL-Data-Types-300x254.png\" alt=\"PostgreSQL Data Types\" width=\"300\" height=\"254\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2013\/05\/PostgreSQL-Data-Types-300x254.png 300w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2013\/05\/PostgreSQL-Data-Types.png 506w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/figure>Overview of PostgreSQL data types<\/h2>\n\n\n\n<p>PostgreSQL supports the following data types:<\/p>\n\n\n\n<ul><li><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-boolean\/\">Boolean<\/a><\/li><li><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-char-varchar-text\/\">Character<\/a>&nbsp;types such as <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-char-varchar-text\/\"><code>char<\/code>, <code>varchar<\/code>, and <code>text<\/code><\/a>.<\/li><li>Numeric types such as integer and floating-point number.<\/li><li>Temporal types such as&nbsp;<a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-date\/\">date<\/a>, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-time\/\">time<\/a>, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-timestamp\/\">timestamp<\/a>, and&nbsp;<a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-interval\/\">interval<\/a><\/li><li><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/\">UUID<\/a> for storing Universally Unique Identifiers<\/li><li><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-array\/\">Array<\/a>&nbsp;for storing array strings, numbers, etc.<\/li><li><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-json\/\">JSON<\/a>&nbsp;stores JSON data<\/li><li><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/\">hstore<\/a>&nbsp;stores key-value pair<\/li><li>Special types such as network address and geometric data.<\/li><\/ul>\n\n\n\n<h2>Boolean<\/h2>\n\n\n\n<p>A <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-boolean\/\">Boolean<\/a> data type can hold one of three possible values: true, false or null. You use <code>boolean<\/code> or <code>bool<\/code> keyword to&nbsp;declare a column with the Boolean data type.<\/p>\n\n\n\n<p>When you <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-insert\/\">insert data<\/a> into a Boolean column, PostgreSQL converts it to a Boolean value <\/p>\n\n\n\n<ul><li><code>1<\/code>, <code>yes<\/code>, <code>y<\/code>, <code>t<\/code>, <code>true<\/code> values are converted to <code>true<\/code><\/li><li><code>0<\/code>, <code>no<\/code>, <code>false<\/code>, <code>f<\/code> values are converted to <code>false<\/code>.<\/li><\/ul>\n\n\n\n<p>When you <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-select\/\">select data<\/a> from a Boolean column, PostgreSQL converts the values back e.g.,\u00a0<code>t<\/code> to true, <code>f<\/code> to <code>false<\/code> and <code>space<\/code> to <code>null<\/code>.<\/p>\n\n\n\n<h2>Character<\/h2>\n\n\n\n<p>PostgreSQL provides three <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-char-varchar-text\/\">character data types<\/a>: <code>CHAR(n)<\/code>, <code>VARCHAR(n)<\/code>, and <code>TEXT<\/code><\/p>\n\n\n\n<ul><li><code>CHAR(n)<\/code> is the fixed-length character with space padded. If you insert a string that is shorter than the length of the column, PostgreSQL pads spaces. If you insert a string that is longer than the length of the column, PostgreSQL will issue an error.<\/li><li>&nbsp;<code>VARCHAR(n)<\/code> is the variable-length character string. &nbsp;With <code>VARCHAR(n)<\/code>, &nbsp;you can store up to <code> n<\/code> characters. PostgreSQL does not pad spaces when the stored string is shorter than the length of the column.<\/li><li>&nbsp;<code>TEXT<\/code>&nbsp;is the variable-length character string. Theoretically, text data is a character string with unlimited length.<\/li><\/ul>\n\n\n\n<h2>Numeric<\/h2>\n\n\n\n<p>PostgreSQL provides two distinct types of numbers:<\/p>\n\n\n\n<ul><li><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/\">integers<\/a><\/li><li>floating-point numbers<\/li><\/ul>\n\n\n\n<h3>Integer<\/h3>\n\n\n\n<p>There are three kinds of integers in PostgreSQL:<\/p>\n\n\n\n<ul><li>Small integer ( <code>SMALLINT<\/code>) is 2-byte signed integer that has a range from -32,768 to 32,767.<\/li><li>Integer ( <code>INT<\/code>) is a 4-byte integer that has a range from -2,147,483,648 to 2,147,483,647.<\/li><li><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-serial\/\">Serial<\/a>&nbsp;is the same as integer except that PostgreSQL will automatically generate and populate values into the <code>SERIAL<\/code> column. This is similar to <code><a href=\"http:\/\/www.mysqltutorial.org\/mysql-sequence\/\">AUTO_INCREMENT<\/a><\/code>&nbsp;column in MySQL or <code><a href=\"http:\/\/www.sqlitetutorial.net\/sqlite-autoincrement\/\">AUTOINCREMENT<\/a><\/code>&nbsp;column in SQLite.<\/li><\/ul>\n\n\n\n<h3>Floating-point number<\/h3>\n\n\n\n<p>There three main types of floating-point numbers:<\/p>\n\n\n\n<ul><li><code>float(n)<\/code>&nbsp; is a floating-point number whose precision, at least, n, up to a maximum of 8 bytes.<\/li><li><code>real<\/code>or <code>float8<\/code>is a 4-byte floating-point number.<\/li><li><code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-numeric\/\">numeric<\/a>&nbsp;<\/code>or <code>numeric(p,s)<\/code>&nbsp;is a&nbsp;real number with p digits with s number after the decimal point. The <code>numeric(p,s)<\/code> is the exact number.<\/li><\/ul>\n\n\n\n<h2>Temporal data types<\/h2>\n\n\n\n<p>The temporal data types allow you to store date and \/or &nbsp;time data. PostgreSQL has five main temporal data types:<\/p>\n\n\n\n<ul><li><code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-date\/\">DATE<\/a><\/code>stores the dates only.<\/li><li><code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-time\/\">TIME<\/a><\/code>stores the time&nbsp;of day values.<\/li><li><code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-timestamp\/\">TIMESTAMP<\/a><\/code>stores both date and time values.<\/li><li><code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-timestamp\/\">TIMESTAMPTZ<\/a><\/code> is a timezone-aware timestamp data type. It is the abbreviation for <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-timestamp\/\">timestamp<\/a> with the time zone.<\/li><li><code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-interval\/\">INTERVAL<\/a><\/code> stores periods of time.<\/li><\/ul>\n\n\n\n<p>The <code>TIMESTAMPTZ<\/code> is the PostgreSQL&#8217;s extension to the SQL standard&#8217;s temporal data types.<\/p>\n\n\n\n<h2>Arrays<\/h2>\n\n\n\n<p>In PostgreSQL, you can store an <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-array\/\">array<\/a> of strings, an array of integers, etc., in array columns. The array comes in handy in some situations e.g., storing days of the week, months of the year.<\/p>\n\n\n\n<h2>JSON<\/h2>\n\n\n\n<p>PostgreSQL provides two JSON data types: <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-json\/\">JSON<\/a><\/code> and <code>JSONB<\/code> for storing JSON data.<\/p>\n\n\n\n<p>The <code>JSON<\/code> data type stores plain JSON data that requires reparsing for each processing, while <code>JSONB<\/code> data type stores <code>JSON<\/code> data in a binary format which is faster to process but slower to insert. In addition, <code>JSONB<\/code> supports indexing, which can be an advantage.<\/p>\n\n\n\n<h2>UUID<\/h2>\n\n\n\n<p>The <code>UUID<\/code> data type allows you to store&nbsp;Universal Unique Identifiers defined by&nbsp;<a title=\"UUID\" href=\"https:\/\/tools.ietf.org\/html\/rfc4122\">RFC 4122<\/a>&nbsp;. The <code>UUID<\/code> values guarantee a better uniqueness than <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-serial\/\">SERIAL<\/a><\/code> and can be used to hide sensitive data exposed to the public such as values of <code>id<\/code> in URL.<\/p>\n\n\n\n<h2>Special data types<\/h2>\n\n\n\n<p>Besides the primitive data types, PostgreSQL also provides several special data types related to geometric and network.<\/p>\n\n\n\n<ul><li><code>box<\/code>&#8211; a rectangular box.<\/li><li><code>line&nbsp;<\/code>&#8211; a set of points.<\/li><li><code>point<\/code>&#8211; a geometric pair of numbers.<\/li><li><code>lseg<\/code>&#8211; a line segment.<\/li><li><code>polygon<\/code>&#8211; a closed geometric.<\/li><li><code>inet<\/code>&#8211; an IP4 address.<\/li><li><code>macaddr<\/code>&#8211; a&nbsp;MAC address.<\/li><\/ul>\n\n\n\n<p>In this tutorial, we have introduced you to the PostgreSQL data types so that you can use them to create tables in the next tutorial.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"495\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-data-types\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Data Types\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"495\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-data-types\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Data Types\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn about PostgreSQL data types including Boolean, character, number, temporal, special types and array.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":45,"comment_status":"open","ping_status":"open","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Getting Started with PostgreSQL Data Types<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn about PostgreSQL data types including Boolean, character, number, temporal, special types, and array.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2013\/05\/PostgreSQL-Data-Types.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2013\/05\/PostgreSQL-Data-Types.png\",\"width\":506,\"height\":429},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/\",\"name\":\"Getting Started with PostgreSQL Data Types\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/#primaryimage\"},\"datePublished\":\"2013-05-30T05:21:17+00:00\",\"dateModified\":\"2020-04-30T01:23:36+00:00\",\"description\":\"In this tutorial, you will learn about PostgreSQL data types including Boolean, character, number, temporal, special types, and array.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL Data Types\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Getting Started with PostgreSQL Data Types","description":"In this tutorial, you will learn about PostgreSQL data types including Boolean, character, number, temporal, special types, and array.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2013\/05\/PostgreSQL-Data-Types.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2013\/05\/PostgreSQL-Data-Types.png","width":506,"height":429},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/","name":"Getting Started with PostgreSQL Data Types","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/#primaryimage"},"datePublished":"2013-05-30T05:21:17+00:00","dateModified":"2020-04-30T01:23:36+00:00","description":"In this tutorial, you will learn about PostgreSQL data types including Boolean, character, number, temporal, special types, and array.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL Data Types"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/495"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=495"}],"version-history":[{"count":1,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/495\/revisions"}],"predecessor-version":[{"id":4756,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/495\/revisions\/4756"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=495"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}