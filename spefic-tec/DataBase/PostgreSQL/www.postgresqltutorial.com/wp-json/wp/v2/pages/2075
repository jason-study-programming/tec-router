{"id":2075,"date":"2016-06-15T19:27:11","date_gmt":"2016-06-16T02:27:11","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=2075"},"modified":"2020-08-02T19:28:18","modified_gmt":"2020-08-03T02:28:18","slug":"connect","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/","title":{"rendered":"PostgreSQL Python: Connect To PostgreSQL Database Server"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to connect to the PostgreSQL database server in the Python program using the\u00a0<code>psycopg<\/code> database adapter.<\/p>\n\n\n\n<h2>Install the psycopg2 module<\/h2>\n\n\n\n<p>First, visit the <a aria-label=\"undefined (opens in a new tab)\" href=\"https:\/\/pypi.org\/project\/psycopg2\/\" target=\"_blank\" rel=\"noreferrer noopener\">psycopg2 package here<\/a>.<\/p>\n\n\n\n<p>Second, use the following command line from the terminal:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">pip install psycopg2<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you have downloaded the source package into your computer, you can use the setup.py as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">python setup.py build\nsudo python setup.py install<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Create a new database<\/h2>\n\n\n\n<p>First, log in to the PostgreSQL database server using any client tool such as pgAdmin or psql.<\/p>\n\n\n\n<p>Second, use the following statement to <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-database\/\">create a new database<\/a> named <code>suppliers<\/code> in the PostgreSQL database server.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">DATABASE<\/span> suppliers;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Connect to the PostgreSQL database using the psycopg2<\/h2>\n\n\n\n<p>To connect to the <code>suppliers<\/code> database, you use the <code>connect()<\/code> function of the <code>psycopg2<\/code> module.<\/p>\n\n\n\n<p>The <code>connect()<\/code> function creates a new database session and returns a new instance of the <code>connection<\/code> class. By using the <code>connection<\/code> object, you can create a new <code>cursor<\/code> to execute any SQL statements.<\/p>\n\n\n\n<p>To call the <code>connect()<\/code> function, you specify the PostgreSQL database parameters as a connection string and pass it to the function like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">conn = psycopg2.connect(\"dbname=suppliers user=postgres password=postgres\")<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Or you can use a list of keyword arguments:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\">conn = psycopg2.connect(\n    host=<span class=\"hljs-string\">\"localhost\"<\/span>,\n    database=<span class=\"hljs-string\">\"suppliers\"<\/span>,\n    user=<span class=\"hljs-string\">\"postgres\"<\/span>,\n    password=<span class=\"hljs-string\">\"Abcd1234\"<\/span>)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following is the list of the connection parameters:<\/p>\n\n\n\n<ul><li><code>database<\/code>:\u00a0the name of the database that you want to connect.<\/li><li><code>user<\/code>:\u00a0the username used to authenticate.<\/li><li><code>password<\/code>: password used to authenticate.<\/li><li><code>host<\/code>:\u00a0database server address e.g., localhost or an IP address.<\/li><li><code>port<\/code>: the port number that defaults to 5432 if\u00a0it is not provided.<\/li><\/ul>\n\n\n\n<p>To make it more convenient, you can use a configuration file to store all connection parameters. <\/p>\n\n\n\n<p>The following shows the contents of the <code>database.ini<\/code> file:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">[postgresql]\nhost=localhost\ndatabase=suppliers\nuser=postgres\npassword=SecurePas$1<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>By using the <code>database.ini<\/code>, you can change the PostgreSQL connection parameters when you move the code to the production environment without modifying the code.<\/p>\n\n\n\n<p>Notice that if you git, you need to add the <code>database.ini<\/code> to the <code>.gitignore<\/code> file to not committing the sensitive information to the public repo like github. The <code>.gitignore<\/code> file will be like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><div><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">database<\/span><span class=\"hljs-selector-class\">.ini<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following <code>config()<\/code> function read the <code>database.ini<\/code> file and returns connection parameters. The <code>config()<\/code> function is placed in the <code>config.py<\/code> file:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\"><span class=\"hljs-comment\">#!\/usr\/bin\/python<\/span>\n<span class=\"hljs-keyword\">from<\/span> configparser <span class=\"hljs-keyword\">import<\/span> ConfigParser\n\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">config<\/span><span class=\"hljs-params\">(filename=<span class=\"hljs-string\">'database.ini'<\/span>, section=<span class=\"hljs-string\">'postgresql'<\/span>)<\/span>:<\/span>\n    <span class=\"hljs-comment\"># create a parser<\/span>\n    parser = ConfigParser()\n    <span class=\"hljs-comment\"># read config file<\/span>\n    parser.read(filename)\n\n    <span class=\"hljs-comment\"># get section, default to postgresql<\/span>\n    db = {}\n    <span class=\"hljs-keyword\">if<\/span> parser.has_section(section):\n        params = parser.items(section)\n        <span class=\"hljs-keyword\">for<\/span> param <span class=\"hljs-keyword\">in<\/span> params:\n            db[param[<span class=\"hljs-number\">0<\/span>]] = param[<span class=\"hljs-number\">1<\/span>]\n    <span class=\"hljs-keyword\">else<\/span>:\n        <span class=\"hljs-keyword\">raise<\/span> Exception(<span class=\"hljs-string\">'Section {0} not found in the {1} file'<\/span>.format(section, filename))\n\n    <span class=\"hljs-keyword\">return<\/span> db<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following <code>connect()<\/code> function connects to the <code>suppliers<\/code> database and prints out the PostgreSQL database version.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\"><span class=\"hljs-comment\">#!\/usr\/bin\/python<\/span>\n<span class=\"hljs-keyword\">import<\/span> psycopg2\n<span class=\"hljs-keyword\">from<\/span> config <span class=\"hljs-keyword\">import<\/span> config\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">connect<\/span><span class=\"hljs-params\">()<\/span>:<\/span>\n    <span class=\"hljs-string\">\"\"\" Connect to the PostgreSQL database server \"\"\"<\/span>\n    conn = <span class=\"hljs-literal\">None<\/span>\n    <span class=\"hljs-keyword\">try<\/span>:\n        <span class=\"hljs-comment\"># read connection parameters<\/span>\n        params = config()\n\n        <span class=\"hljs-comment\"># connect to the PostgreSQL server<\/span>\n        print(<span class=\"hljs-string\">'Connecting to the PostgreSQL database...'<\/span>)\n        conn = psycopg2.connect(**params)\n\t\t\n        <span class=\"hljs-comment\"># create a cursor<\/span>\n        cur = conn.cursor()\n        \n\t<span class=\"hljs-comment\"># execute a statement<\/span>\n        print(<span class=\"hljs-string\">'PostgreSQL database version:'<\/span>)\n        cur.execute(<span class=\"hljs-string\">'SELECT version()'<\/span>)\n\n        <span class=\"hljs-comment\"># display the PostgreSQL database server version<\/span>\n        db_version = cur.fetchone()\n        print(db_version)\n       \n\t<span class=\"hljs-comment\"># close the communication with the PostgreSQL<\/span>\n        cur.close()\n    <span class=\"hljs-keyword\">except<\/span> (Exception, psycopg2.DatabaseError) <span class=\"hljs-keyword\">as<\/span> error:\n        print(error)\n    <span class=\"hljs-keyword\">finally<\/span>:\n        <span class=\"hljs-keyword\">if<\/span> conn <span class=\"hljs-keyword\">is<\/span> <span class=\"hljs-keyword\">not<\/span> <span class=\"hljs-literal\">None<\/span>:\n            conn.close()\n            print(<span class=\"hljs-string\">'Database connection closed.'<\/span>)\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    connect()\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>First, read database connection parameters from the <code>database.ini<\/code> file.<\/li><li>Next, create a new database connection by calling the <code>connect()<\/code> function.<\/li><li>Then, create a new <code>cursor<\/code> and execute an SQL statement to get the PostgreSQL database version.<\/li><li>After that, read the result set by calling the &nbsp;<code>fetchone()<\/code> method of the cursor object.<\/li><li>Finally, close the communication with the database server by calling the <code>close()<\/code> method of the <code>cursor<\/code> and <code>connection<\/code> objects.<\/li><\/ul>\n\n\n\n<h3>Execute the connect.py file<\/h3>\n\n\n\n<p>To execute the <code>connect.py<\/code> file, you use the following command:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">python connect.py<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>You will see the following output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">Connecting to the PostgreSQL database...\nPostgreSQL database version:\n('PostgreSQL 12.3, compiled by Visual C++ build 1914, 64-bit',)\nDatabase connection closed.<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>It means that you have successfully connected to the PostgreSQL database server.<\/p>\n\n\n\n<h3>Troubleshooting<\/h3>\n\n\n\n<p>The <code>connect()<\/code> function raises the\u00a0<code>DatabaseError<\/code> exception if an error occurred. To see how it works, you can change the connection parameters in the <code>database.ini<\/code> file.<\/p>\n\n\n\n<p>For example, if you change the host to\u00a0<code>localhosts<\/code>, the program will output the following message:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">Connecting to the PostgreSQL database...\ncould not translate host name \"localhosts\" to address: Unknown host<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following displays error message when you change the database\u00a0to a database that does not exist e.g., <code>supplier<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">Connecting to the PostgreSQL database...\nFATAL: database \"supplier\" does not exist<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you change the user to \u00a0<code>postgress<\/code>, it will not be authenticated successfully as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">Connecting to the PostgreSQL database...\nFATAL: password authentication failed for user \"postgress\"<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned how to connect to the PostgreSQL database server from Python programs.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2075\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Python: Connect To PostgreSQL Database Server\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2075\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Python: Connect To PostgreSQL Database Server\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to connect to the PostgreSQL database server in the Python program using psycopg database adapter.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":2071,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL Python: Connect To PostgreSQL Database Server<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to connect to the PostgreSQL database server in Python using the psycopg 2 database adapter.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/\",\"name\":\"PostgreSQL Python: Connect To PostgreSQL Database Server\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"datePublished\":\"2016-06-16T02:27:11+00:00\",\"dateModified\":\"2020-08-03T02:28:18+00:00\",\"description\":\"In this tutorial, you will learn how to connect to the PostgreSQL database server in Python using the psycopg 2 database adapter.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Python\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL Python: Connect To PostgreSQL Database Server\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL Python: Connect To PostgreSQL Database Server","description":"In this tutorial, you will learn how to connect to the PostgreSQL database server in Python using the psycopg 2 database adapter.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/","name":"PostgreSQL Python: Connect To PostgreSQL Database Server","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"datePublished":"2016-06-16T02:27:11+00:00","dateModified":"2020-08-03T02:28:18+00:00","description":"In this tutorial, you will learn how to connect to the PostgreSQL database server in Python using the psycopg 2 database adapter.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Python","item":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL Python: Connect To PostgreSQL Database Server"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2075"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=2075"}],"version-history":[{"count":5,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2075\/revisions"}],"predecessor-version":[{"id":5797,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2075\/revisions\/5797"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2071"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=2075"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}