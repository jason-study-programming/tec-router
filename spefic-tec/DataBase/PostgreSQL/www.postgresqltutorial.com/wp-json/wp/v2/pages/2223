{"id":2223,"date":"2016-06-19T02:05:46","date_gmt":"2016-06-19T09:05:46","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=2223"},"modified":"2020-07-16T20:09:17","modified_gmt":"2020-07-17T03:09:17","slug":"postgresql-full-outer-join","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-full-outer-join\/","title":{"rendered":"PostgreSQL FULL OUTER JOIN"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PostgreSQL <code>FULL OUTER JOIN<\/code> to query data from two or more tables.<\/p>\n\n\n\n<h2>Introduction to the PostgreSQL <code>FULL OUTER JOIN<\/code><\/h2>\n\n\n\n<p>Suppose that you want to perform a full outer join of two tables: A and B. The following illustrates the syntax of the <code>FULL OUTER JOIN<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> * <span class=\"hljs-keyword\">FROM<\/span> A\n<span class=\"hljs-keyword\">FULL<\/span> [<span class=\"hljs-keyword\">OUTER<\/span>] <span class=\"hljs-keyword\">JOIN<\/span> B <span class=\"hljs-keyword\">on<\/span> A.id = B.id;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax, the <code>OUTER<\/code> keyword is optional.<\/p>\n\n\n\n<p>The full outer join combines the results of both <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-left-join\/\">left join<\/a> and right join. <\/p>\n\n\n\n<p>If the rows in the joined table do not match, the full outer join sets NULL values for every column of the table that does not have the matching row. <\/p>\n\n\n\n<p>If a row from one table matches a row in another table, the result row will contain columns populated from columns of rows from both tables.<\/p>\n\n\n\n<p>The following Venn diagram illustrates the <code>FULL OUTER JOIN<\/code> operation:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"370\" height=\"265\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/12\/PostgreSQL-Join-Full-Outer-Join.png\" alt=\"PostgreSQL Join - Full Outer Join\" class=\"wp-image-3680\"\/><\/figure>\n\n\n\n<p>The result includes the matching rows from both tables, and also the rows that do not match.<\/p>\n\n\n\n<h2>PostgreSQL <code>FULL OUTER JOIN<\/code> example<\/h2>\n\n\n\n<p>First, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-table\/\">create two new tables<\/a> for the demonstration: <code>employees<\/code> and <code>departments<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">TABLE<\/span> <span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">EXISTS<\/span> departments;\n<span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">TABLE<\/span> <span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">EXISTS<\/span> employees;\n\n<span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> departments (\n\tdepartment_id <span class=\"hljs-built_in\">serial<\/span> PRIMARY <span class=\"hljs-keyword\">KEY<\/span>,\n\tdepartment_name <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">255<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>\n);\n\n<span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> employees (\n\temployee_id <span class=\"hljs-built_in\">serial<\/span> PRIMARY <span class=\"hljs-keyword\">KEY<\/span>,\n\temployee_name <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">255<\/span>),\n\tdepartment_id <span class=\"hljs-built_in\">INTEGER<\/span>\n);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Each department has zero or many employees and each employee belongs to zero or one department.<\/p>\n\n\n\n<p>Second, insert some sample data into the <code>departments<\/code> and <code>employees<\/code> tables.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> departments (department_name)\n<span class=\"hljs-keyword\">VALUES<\/span>\n\t(<span class=\"hljs-string\">'Sales'<\/span>),\n\t(<span class=\"hljs-string\">'Marketing'<\/span>),\n\t(<span class=\"hljs-string\">'HR'<\/span>),\n\t(<span class=\"hljs-string\">'IT'<\/span>),\n\t(<span class=\"hljs-string\">'Production'<\/span>);\n\n<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> employees (\n\temployee_name,\n\tdepartment_id\n)\n<span class=\"hljs-keyword\">VALUES<\/span>\n\t(<span class=\"hljs-string\">'Bette Nicholson'<\/span>, <span class=\"hljs-number\">1<\/span>),\n\t(<span class=\"hljs-string\">'Christian Gable'<\/span>, <span class=\"hljs-number\">1<\/span>),\n\t(<span class=\"hljs-string\">'Joe Swank'<\/span>, <span class=\"hljs-number\">2<\/span>),\n\t(<span class=\"hljs-string\">'Fred Costner'<\/span>, <span class=\"hljs-number\">3<\/span>),\n\t(<span class=\"hljs-string\">'Sandra Kilmer'<\/span>, <span class=\"hljs-number\">4<\/span>),\n\t(<span class=\"hljs-string\">'Julia Mcqueen'<\/span>, <span class=\"hljs-literal\">NULL<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, query data from the <code>departments<\/code> and <code>employees<\/code> tables:<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">SELECT * FROM departments;<\/code><\/div><\/pre>\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"301\" height=\"164\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Full-Outer-Join-Departments-Table.png\" alt=\"PostgreSQL Full Outer Join - Departments Table\" class=\"wp-image-5017\"\/><\/figure>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">SELECT * FROM employees;<\/code><\/div><\/pre>\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"407\" height=\"184\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Full-Outer-Join-Employees-Table.png\" alt=\"PostgreSQL Full Outer Join - Employees Table\" class=\"wp-image-5018\"\/><\/figure>\n\n\n\n<p>Fourth, use the <code>FULL OUTER JOIN<\/code> to query data from both <code>employees<\/code> and <code>departments<\/code> tables.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\temployee_name,\n\tdepartment_name\n<span class=\"hljs-keyword\">FROM<\/span>\n\temployees e\n<span class=\"hljs-keyword\">FULL<\/span> <span class=\"hljs-keyword\">OUTER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> departments d \n        <span class=\"hljs-keyword\">ON<\/span> d.department_id = e.department_id;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"354\" height=\"214\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Full-Outer-Join-Example.png\" alt=\"PostgreSQL Full Outer Join Example\" class=\"wp-image-5019\"\/><\/figure>\n\n\n\n<p>The result set includes every employee who belongs to a department and every department which have an employee. In addition, it includes every employee who does not belong to a department and every department that does not have an employee.<\/p>\n\n\n\n<p>To find the department that does not have any employees, you use a <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-where\/\">WHERE<\/a> clause as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\temployee_name,\n\tdepartment_name\n<span class=\"hljs-keyword\">FROM<\/span>\n\temployees e\n<span class=\"hljs-keyword\">FULL<\/span> <span class=\"hljs-keyword\">OUTER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> departments d \n        <span class=\"hljs-keyword\">ON<\/span> d.department_id = e.department_id\n<span class=\"hljs-keyword\">WHERE<\/span>\n\temployee_name <span class=\"hljs-keyword\">IS<\/span> <span class=\"hljs-literal\">NULL<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"349\" height=\"63\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Full-Outer-Join-with-WHERE-clause.png\" alt=\"PostgreSQL Full Outer Join with WHERE clause\" class=\"wp-image-5020\"\/><\/figure>\n\n\n\n<p>The result shows that the <code>Production<\/code> department does not have any employees.<\/p>\n\n\n\n<p>To find the employee who does not belong to any department, you check for the <code>NULL<\/code> of the <code>department_name<\/code> in the <code>WHERE<\/code> clause as the following statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\temployee_name,\n\tdepartment_name\n<span class=\"hljs-keyword\">FROM<\/span>\n\temployees e\n<span class=\"hljs-keyword\">FULL<\/span> <span class=\"hljs-keyword\">OUTER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> departments d <span class=\"hljs-keyword\">ON<\/span> d.department_id = e.department_id\n<span class=\"hljs-keyword\">WHERE<\/span>\n\tdepartment_name <span class=\"hljs-keyword\">IS<\/span> <span class=\"hljs-literal\">NULL<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"350\" height=\"61\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Full-Outer-Join-with-WHERE-clause-example.png\" alt=\"PostgreSQL Full Outer Join with WHERE clause example\" class=\"wp-image-5021\"\/><\/figure>\n\n\n\n<p>As you see clearly from the output, &nbsp;<code>Juila Mcqueen<\/code> does not belong to any department.<\/p>\n\n\n\n<p>In this tutorial, you have learned how to use the PostgreSQL&nbsp;<code>FULL OUTER JOIN<\/code> clause to join two or more tables.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2223\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-full-outer-join\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL FULL OUTER JOIN\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2223\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-full-outer-join\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL FULL OUTER JOIN\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the PostgreSQL FULL OUTER JOIN to query data from two or more tables.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":18,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL FULL OUTER JOIN: Its Usages and Practical Examples<\/title>\n<meta name=\"description\" content=\"This tutorial shows you how to use the PostgreSQL FULL OUTER JOIN to find the rows in table that do not have matching rows in the other table.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/12\/PostgreSQL-Join-Full-Outer-Join.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/12\/PostgreSQL-Join-Full-Outer-Join.png\",\"width\":370,\"height\":265,\"caption\":\"PostgreSQL Join - Full Outer Join\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/\",\"name\":\"PostgreSQL FULL OUTER JOIN: Its Usages and Practical Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/#primaryimage\"},\"datePublished\":\"2016-06-19T09:05:46+00:00\",\"dateModified\":\"2020-07-17T03:09:17+00:00\",\"description\":\"This tutorial shows you how to use the PostgreSQL FULL OUTER JOIN to find the rows in table that do not have matching rows in the other table.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL FULL OUTER JOIN\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL FULL OUTER JOIN: Its Usages and Practical Examples","description":"This tutorial shows you how to use the PostgreSQL FULL OUTER JOIN to find the rows in table that do not have matching rows in the other table.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/12\/PostgreSQL-Join-Full-Outer-Join.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/12\/PostgreSQL-Join-Full-Outer-Join.png","width":370,"height":265,"caption":"PostgreSQL Join - Full Outer Join"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/","name":"PostgreSQL FULL OUTER JOIN: Its Usages and Practical Examples","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/#primaryimage"},"datePublished":"2016-06-19T09:05:46+00:00","dateModified":"2020-07-17T03:09:17+00:00","description":"This tutorial shows you how to use the PostgreSQL FULL OUTER JOIN to find the rows in table that do not have matching rows in the other table.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL FULL OUTER JOIN"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2223"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=2223"}],"version-history":[{"count":4,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2223\/revisions"}],"predecessor-version":[{"id":5023,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2223\/revisions\/5023"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=2223"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}