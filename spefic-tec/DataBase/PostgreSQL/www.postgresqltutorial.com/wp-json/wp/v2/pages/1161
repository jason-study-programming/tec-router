{"id":1161,"date":"2015-07-10T17:53:56","date_gmt":"2015-07-11T00:53:56","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=1161"},"modified":"2020-07-21T02:17:42","modified_gmt":"2020-07-21T09:17:42","slug":"postgresql-array","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-array\/","title":{"rendered":"PostgreSQL Array"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, we will show you how to work with <strong>PostgreSQL array<\/strong> and introduce you to some handy functions for array manipulation.<\/p>\n\n\n\n<p>Array plays an important role in PostgreSQL.&nbsp;Every <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/\">data type<\/a> has its own companion array type e.g., <code>integer<\/code> has an <code>integer[]<\/code> array type, <code>character<\/code> has <code>character[]<\/code> array type, etc. In case you define your own data type, PostgreSQL creates a corresponding array type in the background for you.<\/p>\n\n\n\n<p>PostgreSQL allows you to define a column to be an array of any valid data type including built-in type, user-defined type or enumerated type.<\/p>\n\n\n\n<p>The following <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-table\/\">CREATE TABLE statement<\/a> creates the&nbsp;<code>contacts<\/code> table with the <code>phones<\/code> column is defined as&nbsp;an array of text.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> contacts (\n\t<span class=\"hljs-keyword\">id<\/span> <span class=\"hljs-built_in\">serial<\/span> PRIMARY <span class=\"hljs-keyword\">KEY<\/span>,\n\t<span class=\"hljs-keyword\">name<\/span> <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">100<\/span>),\n\tphones <span class=\"hljs-built_in\">TEXT<\/span> []\n);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>phones<\/code> column is a one-dimensional array that holds various phone numbers that a contact may have.<\/p>\n\n\n\n<h2>Insert PostgreSQL array values<\/h2>\n\n\n\n<p>The following statement inserts a new contact into the <code>contacts<\/code> table.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> contacts (<span class=\"hljs-keyword\">name<\/span>, phones)\n<span class=\"hljs-keyword\">VALUES<\/span>(<span class=\"hljs-string\">'John Doe'<\/span>,<span class=\"hljs-built_in\">ARRAY<\/span> [ <span class=\"hljs-string\">'(408)-589-5846'<\/span>,<span class=\"hljs-string\">'(408)-589-5555'<\/span> ]);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>We used the <code>ARRAY<\/code>&nbsp;constructor to construct an array and insert it into the <code>contacts<\/code> table. You can also use curly braces as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> contacts (<span class=\"hljs-keyword\">name<\/span>, phones)\n<span class=\"hljs-keyword\">VALUES<\/span>(<span class=\"hljs-string\">'Lily Bush'<\/span>,<span class=\"hljs-string\">'{\"(408)-589-5841\"}'<\/span>),\n      (<span class=\"hljs-string\">'William Gate'<\/span>,<span class=\"hljs-string\">'{\"(408)-589-5842\",\"(408)-589-58423\"}'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The statement above inserts two rows into the <code>contacts<\/code> table. Notice that when you use curly braces, you use single quotes <code>'<\/code> to wrap the array and double quotes <code>\"<\/code> to wrap text array items.<\/p>\n\n\n\n<h2>Query array&nbsp;data<\/h2>\n\n\n\n<p>You use the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-select\/\">SELECT statement<\/a> to query array data as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">name<\/span>,\n\tphones\n<span class=\"hljs-keyword\">FROM<\/span>\n\tcontacts;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"322\" height=\"81\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-query-data.jpg\" alt=\"postgresql array query data\" class=\"wp-image-1163\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-query-data.jpg 322w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-query-data-300x75.jpg 300w\" sizes=\"(max-width: 322px) 100vw, 322px\" \/><\/figure>\n\n\n\n<p>We access array elements using the subscript within square brackets <code>[]<\/code>. By default, PostgreSQL uses one-based numbering for array elements. It means the first array element starts with number 1.&nbsp;Suppose, we&nbsp;want to get the contact&#8217;s name and the first phone number, we&nbsp;use the following query:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">name<\/span>,\n\tphones [ <span class=\"hljs-number\">1<\/span> ]\n<span class=\"hljs-keyword\">FROM<\/span>\n\tcontacts;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"323\" height=\"81\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-query-array-item.jpg\" alt=\"postgresql array query array item\" class=\"wp-image-1164\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-query-array-item.jpg 323w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-query-array-item-300x75.jpg 300w\" sizes=\"(max-width: 323px) 100vw, 323px\" \/><\/figure>\n\n\n\n<p>We can use array element in the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-where\/\">WHERE clause<\/a> as the condition to filter the rows. For example, to find out who has the phone number <code>(408)-589-58423<\/code>&nbsp;as the second phone number, we use the following query.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">name<\/span>\n<span class=\"hljs-keyword\">FROM<\/span>\n\tcontacts\n<span class=\"hljs-keyword\">WHERE<\/span>\n\tphones [ <span class=\"hljs-number\">2<\/span> ] = <span class=\"hljs-string\">'(408)-589-58423'<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"92\" height=\"39\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-element-in-where-clause.jpg\" alt=\"postgresql array element in where clause\" class=\"wp-image-1166\"\/><\/figure>\n\n\n\n<h2>Modifying PostgreSQL array<\/h2>\n\n\n\n<p>PostgreSQL allows you to update each element of an&nbsp;array or &nbsp;the whole array. The following statement updates the second phone number of <code>William Gate<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">UPDATE<\/span> contacts\n<span class=\"hljs-keyword\">SET<\/span> phones [<span class=\"hljs-number\">2<\/span>] = <span class=\"hljs-string\">'(408)-589-5843'<\/span>\n<span class=\"hljs-keyword\">WHERE<\/span> <span class=\"hljs-keyword\">ID<\/span> = <span class=\"hljs-number\">3<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Let&#8217;s check it again.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">id<\/span>,\n\t<span class=\"hljs-keyword\">name<\/span>,\n\tphones [ <span class=\"hljs-number\">2<\/span> ]\n<span class=\"hljs-keyword\">FROM<\/span>\n\tcontacts\n<span class=\"hljs-keyword\">WHERE<\/span>\n\t<span class=\"hljs-keyword\">id<\/span> = <span class=\"hljs-number\">3<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"229\" height=\"40\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-update.jpg\" alt=\"postgresql array update\" class=\"wp-image-1168\"\/><\/figure>\n\n\n\n<p>The following statement updates an array as a whole.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">UPDATE<\/span> contacts\n<span class=\"hljs-keyword\">SET<\/span> phones = <span class=\"hljs-string\">'{\"(408)-589-5843\"}'<\/span>\n<span class=\"hljs-keyword\">WHERE<\/span> <span class=\"hljs-keyword\">id<\/span> = <span class=\"hljs-number\">3<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>We verify the update using the following statement.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">name<\/span>,\n\tphones\n<span class=\"hljs-keyword\">FROM<\/span>\n\tcontacts\n<span class=\"hljs-keyword\">WHERE<\/span>\n\t<span class=\"hljs-keyword\">id<\/span> = <span class=\"hljs-number\">3<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"187\" height=\"42\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-select.jpg\" alt=\"postgresql array select\" class=\"wp-image-1169\"\/><\/figure>\n\n\n\n<h2>Search in PostgreSQL Array<\/h2>\n\n\n\n<p>Suppose, we&nbsp;want to know who has the phone number <code>(408)-589-5555<\/code> regardless of position of the phone number in the <code>phones<\/code> array, we use <code>ANY()<\/code>&nbsp;function as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">name<\/span>,\n\tphones\n<span class=\"hljs-keyword\">FROM<\/span>\n\tcontacts\n<span class=\"hljs-keyword\">WHERE<\/span>\n\t<span class=\"hljs-string\">'(408)-589-5555'<\/span> = <span class=\"hljs-keyword\">ANY<\/span> (phones);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"317\" height=\"39\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-any-function.jpg\" alt=\"postgresql array any function\" class=\"wp-image-1170\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-any-function.jpg 317w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-any-function-300x37.jpg 300w\" sizes=\"(max-width: 317px) 100vw, 317px\" \/><\/figure>\n\n\n\n<h2>Expand Arrays<\/h2>\n\n\n\n<p>PostgreSQL provides the&nbsp;<code>unnest()<\/code> function to expand an array to a list of rows. For example, &nbsp;the following query expands all phone numbers of the <code>phones<\/code> array.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">name<\/span>,\n\t<span class=\"hljs-keyword\">unnest<\/span>(phones)\n<span class=\"hljs-keyword\">FROM<\/span>\n\tcontacts;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"280\" height=\"102\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-unnest-function.jpg\" alt=\"postgresql array unnest function\" class=\"wp-image-1171\"\/><\/figure>\n\n\n\n<p>In this tutorial, we have shown you how to work with PostgreSQL array data type and introduced you to some of the most important array operators and functions.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1161\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-array\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Array\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1161\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-array\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Array\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, we will show you how to work with PostgreSQL array and introduce you to some handy functions for array manipulation.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":76,"comment_status":"closed","ping_status":"open","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL Array<\/title>\n<meta name=\"description\" content=\"in this tutorial, we show you how to work with PostgreSQL Array and introduce you to some handy functions for array manipulation.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-array\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-array\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-query-data.jpg\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-query-data.jpg\",\"width\":322,\"height\":81,\"caption\":\"postgresql array query data\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-array\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-array\/\",\"name\":\"PostgreSQL Array\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-array\/#primaryimage\"},\"datePublished\":\"2015-07-11T00:53:56+00:00\",\"dateModified\":\"2020-07-21T09:17:42+00:00\",\"description\":\"in this tutorial, we show you how to work with PostgreSQL Array and introduce you to some handy functions for array manipulation.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-array\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-array\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-array\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL Array\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL Array","description":"in this tutorial, we show you how to work with PostgreSQL Array and introduce you to some handy functions for array manipulation.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-array\/","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-array\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-query-data.jpg","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-array-query-data.jpg","width":322,"height":81,"caption":"postgresql array query data"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-array\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-array\/","name":"PostgreSQL Array","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-array\/#primaryimage"},"datePublished":"2015-07-11T00:53:56+00:00","dateModified":"2020-07-21T09:17:42+00:00","description":"in this tutorial, we show you how to work with PostgreSQL Array and introduce you to some handy functions for array manipulation.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-array\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-array\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-array\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL Array"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1161"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=1161"}],"version-history":[{"count":3,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1161\/revisions"}],"predecessor-version":[{"id":5339,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1161\/revisions\/5339"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=1161"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}