{"id":2116,"date":"2016-06-16T19:06:35","date_gmt":"2016-06-17T02:06:35","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=2116"},"modified":"2020-08-02T21:11:20","modified_gmt":"2020-08-03T04:11:20","slug":"call-stored-procedures","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/call-stored-procedures\/","title":{"rendered":"PostgreSQL Python: Call PostgreSQL Stored Procedures"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to call PostgreSQL stored procedures from a Python program.<\/p>\n\n\n\n<h2>Steps for calling a PostgreSQL stored procedure in Python<\/h2>\n\n\n\n<p>To call a PostgreSQL stored procedure in a Python program, you follow th\u1ebf steps:<\/p>\n\n\n\n<p>First, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/\">create a new database connection<\/a> to the PostgreSQL database server by calling the <code>connect()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\">conn = psycopg2.connect(dsn)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>connect()<\/code> method returns a new instance of the <code>connection<\/code> class.<\/p>\n\n\n\n<p>Next, create a new cursor by calling the <code>cursor()<\/code> method of the connection object.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\">cur = conn.cursor()<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Then, pass the name of the stored procedure and the optional input values to the <code>execute()<\/code> method of the <code>cursor<\/code> object. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\">cur.execute(<span class=\"hljs-string\">\"CALL sp_name(%s, %s);\"<\/span>, (val1, val2))<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you stored procedure does not accept any parameters, you can omit the second argument like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\">cur.execute(<span class=\"hljs-string\">\"CALL sp_name);\"<\/span>)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>After that, call the <code>commit()<\/code> method to commit the transaction:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\">conn.commit();<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Finally, call the <code>close()<\/code> method of the <code>cursor<\/code> and <code>connection<\/code> objects to close the connection to the PostgreSQL database server.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\">cur.close()\nconn.close()<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Calling a stored procedure example<\/h2>\n\n\n\n<p>First, create the following <code>add_new_part()<\/code> stored procedure in the <code>suppliers<\/code> database.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">OR<\/span> <span class=\"hljs-keyword\">REPLACE<\/span> <span class=\"hljs-keyword\">PROCEDURE<\/span> add_new_part(\n\tnew_part_name <span class=\"hljs-built_in\">varchar<\/span>,\n\tnew_vendor_name <span class=\"hljs-built_in\">varchar<\/span>\n) \n<span class=\"hljs-keyword\">AS<\/span> $$\n<span class=\"hljs-keyword\">DECLARE<\/span>\n\tv_part_id <span class=\"hljs-built_in\">INT<\/span>;\n\tv_vendor_id INT;\n<span class=\"hljs-keyword\">BEGIN<\/span>\n\t<span class=\"hljs-comment\">-- insert into the parts table<\/span>\n\t<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> parts(part_name) \n\t<span class=\"hljs-keyword\">VALUES<\/span>(new_part_name) \n\t<span class=\"hljs-keyword\">RETURNING<\/span> part_id <span class=\"hljs-keyword\">INTO<\/span> v_part_id;\n\t\n\t<span class=\"hljs-comment\">-- insert a new vendor<\/span>\n\t<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> vendors(vendor_name)\n\t<span class=\"hljs-keyword\">VALUES<\/span>(new_vendor_name)\n\t<span class=\"hljs-keyword\">RETURNING<\/span> vendor_id <span class=\"hljs-keyword\">INTO<\/span> v_vendor_id;\n\t\n\t<span class=\"hljs-comment\">-- insert into vendor_parts<\/span>\n\t<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> vendor_parts(part_id, vendor_id)\n\t<span class=\"hljs-keyword\">VALUEs<\/span>(v_part_id,v_vendor_id);\n\t\n<span class=\"hljs-keyword\">END<\/span>;\n$$\nLANGUAGE PLPGSQL;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, create a new file called <code>stored_proc.py<\/code> and defined the following <code>add_part()<\/code> function. The <code>add_part()<\/code> function calls the <code>add_new_part()<\/code> stored procedure from the <code>suppliers<\/code> database:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\"><span class=\"hljs-comment\">#!\/usr\/bin\/python<\/span>\n<span class=\"hljs-keyword\">import<\/span> psycopg2\n<span class=\"hljs-keyword\">from<\/span> config <span class=\"hljs-keyword\">import<\/span> config\n\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">add_part<\/span><span class=\"hljs-params\">(part_name, vendor_name)<\/span>:<\/span>\n\n    conn = <span class=\"hljs-literal\">None<\/span>\n    <span class=\"hljs-keyword\">try<\/span>:\n        <span class=\"hljs-comment\"># read database configuration<\/span>\n        params = config()\n        <span class=\"hljs-comment\"># connect to the PostgreSQL database<\/span>\n        conn = psycopg2.connect(**params)\n        <span class=\"hljs-comment\"># create a cursor object for execution<\/span>\n        cur = conn.cursor()\n\n        <span class=\"hljs-comment\"># call a stored procedure<\/span>\n        cur.execute(<span class=\"hljs-string\">'CALL add_new_part(%s,%s)'<\/span>, (part_name, vendor_name))\n\n        <span class=\"hljs-comment\"># commit the transaction<\/span>\n        conn.commit()\n\n        <span class=\"hljs-comment\"># close the cursor<\/span>\n        cur.close()\n    <span class=\"hljs-keyword\">except<\/span> (Exception, psycopg2.DatabaseError) <span class=\"hljs-keyword\">as<\/span> error:\n        print(error)\n    <span class=\"hljs-keyword\">finally<\/span>:\n        <span class=\"hljs-keyword\">if<\/span> conn <span class=\"hljs-keyword\">is<\/span> <span class=\"hljs-keyword\">not<\/span> <span class=\"hljs-literal\">None<\/span>:\n            conn.close()\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    add_part(<span class=\"hljs-string\">'OLED'<\/span>, <span class=\"hljs-string\">'LG'<\/span>)\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>Executing the python file<\/h3>\n\n\n\n<p>To execute the python file, you use the following statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><div><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">python<\/span> <span class=\"hljs-selector-tag\">stored_proc<\/span><span class=\"hljs-selector-class\">.py<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To verify the insert, you can query data from the <code>parts<\/code>, <code>vendors<\/code>, and <code>vendor_parts<\/code> tables:<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">SELECT * FROM parts;\nSELECT * FROM vendors;\nSELECT * FROM vendor_parts;<\/code><\/div><\/pre>\n\n\n<p>In this tutorial, you have learned step by step how to call a PostgreSQL stored procedure in Python.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2116\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/call-stored-procedures\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Python: Call PostgreSQL Stored Procedures\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2116\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/call-stored-procedures\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Python: Call PostgreSQL Stored Procedures\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to call PostgreSQL stored procedures from a Python program.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":2071,"menu_order":6,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL Python: Call PostgreSQL Stored Procedures<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to call PostgreSQL stored procedures from a Python program.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/call-stored-procedures\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/call-stored-procedures\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/call-stored-procedures\/\",\"name\":\"PostgreSQL Python: Call PostgreSQL Stored Procedures\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"datePublished\":\"2016-06-17T02:06:35+00:00\",\"dateModified\":\"2020-08-03T04:11:20+00:00\",\"description\":\"In this tutorial, you will learn how to call PostgreSQL stored procedures from a Python program.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/call-stored-procedures\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/call-stored-procedures\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/call-stored-procedures\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Python\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL Python: Call PostgreSQL Stored Procedures\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL Python: Call PostgreSQL Stored Procedures","description":"In this tutorial, you will learn how to call PostgreSQL stored procedures from a Python program.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/call-stored-procedures\/","twitter_misc":{"Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/call-stored-procedures\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/call-stored-procedures\/","name":"PostgreSQL Python: Call PostgreSQL Stored Procedures","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"datePublished":"2016-06-17T02:06:35+00:00","dateModified":"2020-08-03T04:11:20+00:00","description":"In this tutorial, you will learn how to call PostgreSQL stored procedures from a Python program.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/call-stored-procedures\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-python\/call-stored-procedures\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/call-stored-procedures\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Python","item":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL Python: Call PostgreSQL Stored Procedures"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2116"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=2116"}],"version-history":[{"count":5,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2116\/revisions"}],"predecessor-version":[{"id":5820,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2116\/revisions\/5820"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2071"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=2116"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}