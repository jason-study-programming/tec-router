{"id":5878,"date":"2020-08-05T19:20:53","date_gmt":"2020-08-06T02:20:53","guid":{"rendered":"https:\/\/www.postgresqltutorial.com\/?page_id=5878"},"modified":"2020-08-05T19:39:03","modified_gmt":"2020-08-06T02:39:03","slug":"postgresql-exception","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/","title":{"rendered":"PostgreSQL Exception"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to catch PostgreSQL exceptions in PL\/pgSQL.<\/p>\n\n\n\n<h2>Introduction to the PL\/pgSQL Exception clause<\/h2>\n\n\n\n<p>When an error occurs in a <a href=\"https:\/\/www.postgresqltutorial.com\/plpgsql-block-structure\/\">block<\/a>, PostgreSQL will abort the execution of the block and also the surrounding transaction.<\/p>\n\n\n\n<p>To recover from the error, you can use the <code>exception<\/code> clause in the <code>begin...end<\/code> block.<\/p>\n\n\n\n<p>The following illustrates the syntax of the <code>exception<\/code> clause:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-symbol\">&lt;&lt;label&gt;&gt;<\/span>\n<span class=\"hljs-keyword\">declare<\/span>\n<span class=\"hljs-keyword\">begin<\/span>\n    statements;\n<span class=\"hljs-keyword\">exception<\/span>\n    <span class=\"hljs-keyword\">when<\/span> condition [<span class=\"hljs-keyword\">or<\/span> condition...] <span class=\"hljs-keyword\">then<\/span>\n       handle_exception;\n   [<span class=\"hljs-keyword\">when<\/span> condition [<span class=\"hljs-keyword\">or<\/span> condition...] <span class=\"hljs-keyword\">then<\/span>\n       handle_exception;]\n   [<span class=\"hljs-keyword\">when<\/span> others <span class=\"hljs-keyword\">then<\/span>\n       handle_other_exceptions;\n   ]\n<span class=\"hljs-keyword\">end<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>First, when an error occurs between the <code>begin<\/code> and <code>exception<\/code>, PL\/pgSQL stops the execution and passes the control to the exception list. <\/li><li>Second, PL\/pgSQL searches for the first <code>condition<\/code> that matches the occurring error. <\/li><li>Third, if there is a match, the corresponding <code>handle_exception<\/code> statements will execute. PL\/pgSQL passes the control to the statement after the <code>end<\/code> keyword. <\/li><li>Finally, if no match found, the error propagates out and can be caught by the <code>exception<\/code> clause of the enclosing block. In case there is no enclosing block with the <code>exception<\/code> clause, PL\/pgSQL will abort the processing.<\/li><\/ul>\n\n\n\n<p>The condition names can be <code>no_data_found<\/code> in case of a <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-select\/\">select<\/a><\/code> statement return no rows or <code>too_many_rows<\/code> if the <code>select<\/code> statement returns more than one row. For a complete list of <a href=\"https:\/\/www.postgresql.org\/docs\/current\/errcodes-appendix.html\">condition names on the PostgreSQL website<\/a>.<\/p>\n\n\n\n<p>It&#8217;s also possible to specify the error condition by <code>SQLSTATE<\/code> code. For example, <code>P0002<\/code> for <code>no_data_found<\/code> and <code>P0003<\/code> for <code>too_many_rows<\/code>.<\/p>\n\n\n\n<p>Typically, you will catch a specific exception and handle it accordingly. To handle other exceptions rather than the one you specify on the list, you can use the <code>when others then<\/code> clause.<\/p>\n\n\n\n<h2>Handling exception examples<\/h2>\n\n\n\n<p>We&#8217;ll use the <code>film<\/code> table from the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-sample-database\/\">sample database<\/a> for the demonstration.<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"181\" height=\"306\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/film_table.png\" alt=\"Film table\" class=\"wp-image-3449\"\/><\/figure>\n\n\n\n<h3>1) Handling no_data_found exception example<\/h3>\n\n\n\n<p>The following example issues an error because the film with id 2000 does not exist.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">do<\/span>\n$$<span class=\"pgsql\">\n<span class=\"hljs-keyword\">declare<\/span>\n\trec <span class=\"hljs-type\">record<\/span>;\n\tv_film_id <span class=\"hljs-type\">int<\/span> = <span class=\"hljs-number\">2000<\/span>;\n<span class=\"hljs-keyword\">begin<\/span>\n\t<span class=\"hljs-comment\">-- select a film <\/span>\n\t<span class=\"hljs-keyword\">select<\/span> film_id, title \n\t<span class=\"hljs-keyword\">into<\/span> <span class=\"hljs-keyword\">strict<\/span> rec\n\t<span class=\"hljs-keyword\">from<\/span> film\n\t<span class=\"hljs-keyword\">where<\/span> film_id = v_film_id;\n<span class=\"hljs-keyword\">end<\/span>;\n$$<\/span>\n<span class=\"hljs-keyword\">language<\/span> plpgsql;\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">ERROR:  query returned no rows\nCONTEXT:  PL\/pgSQL function inline_code_block line 6 at SQL statement\nSQL state: P0002<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example uses the <code>exception<\/code> clause to catch the <code>no_data_found<\/code> exception and report a more meaningful message:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">do<\/span>\n$$<span class=\"pgsql\">\n<span class=\"hljs-keyword\">declare<\/span>\n\trec <span class=\"hljs-type\">record<\/span>;\n\tv_film_id <span class=\"hljs-type\">int<\/span> = <span class=\"hljs-number\">2000<\/span>;\n<span class=\"hljs-keyword\">begin<\/span>\n\t<span class=\"hljs-comment\">-- select a film <\/span>\n\t<span class=\"hljs-keyword\">select<\/span> film_id, title \n\t<span class=\"hljs-keyword\">into<\/span> <span class=\"hljs-keyword\">strict<\/span> rec\n\t<span class=\"hljs-keyword\">from<\/span> film\n\t<span class=\"hljs-keyword\">where<\/span> film_id = v_film_id;\n        <span class=\"hljs-comment\">-- catch exception<\/span>\n\t<span class=\"hljs-keyword\">exception<\/span> \n\t   <span class=\"hljs-keyword\">when<\/span> <span class=\"hljs-built_in\">no_data_found<\/span> <span class=\"hljs-keyword\">then<\/span> \n\t      <span class=\"hljs-keyword\">raise<\/span> <span class=\"hljs-keyword\">exception<\/span> <span class=\"hljs-string\">'film % not found'<\/span>, v_film_id;\n<span class=\"hljs-keyword\">end<\/span>;\n$$<\/span>\n<span class=\"hljs-keyword\">language<\/span> plpgsql;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">ERROR:  film 2000 not found\nCONTEXT:  PL\/pgSQL function inline_code_block line 14 at RAISE\nSQL state: P0001<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>2) Handling too_many_rows exception example<\/h3>\n\n\n\n<p>The following example illustrates how to handle the <code>too_many_rows<\/code> exception:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">do<\/span>\n$$<span class=\"pgsql\">\n<span class=\"hljs-keyword\">declare<\/span>\n\trec <span class=\"hljs-type\">record<\/span>;\n<span class=\"hljs-keyword\">begin<\/span>\n\t<span class=\"hljs-comment\">-- select film <\/span>\n\t<span class=\"hljs-keyword\">select<\/span> film_id, title \n\t<span class=\"hljs-keyword\">into<\/span> <span class=\"hljs-keyword\">strict<\/span> rec\n\t<span class=\"hljs-keyword\">from<\/span> film\n\t<span class=\"hljs-keyword\">where<\/span> title <span class=\"hljs-keyword\">LIKE<\/span> <span class=\"hljs-string\">'A%'<\/span>;\n\t\n\t<span class=\"hljs-keyword\">exception<\/span> \n\t   <span class=\"hljs-keyword\">when<\/span> <span class=\"hljs-built_in\">too_many_rows<\/span> <span class=\"hljs-keyword\">then<\/span>\n\t      <span class=\"hljs-keyword\">raise<\/span> <span class=\"hljs-keyword\">exception<\/span> <span class=\"hljs-string\">'Search query returns too many rows'<\/span>;\n<span class=\"hljs-keyword\">end<\/span>;\n$$<\/span>\n<span class=\"hljs-keyword\">language<\/span> plpgsql;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">ERROR:  Search query returns too many rows\nCONTEXT:  PL\/pgSQL function inline_code_block line 15 at RAISE\nSQL state: P0001<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>too_many_rows<\/code> exception occurs because the <code><a href=\"https:\/\/www.postgresqltutorial.com\/plpgsql-select-into\/\">select into<\/a><\/code> statement returns more than one row while it is supposed to return one row. <\/p>\n\n\n\n<h3>3) Handling multiple exceptions<\/h3>\n\n\n\n<p>The following example illustrates how to catch multiple exceptions:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">do<\/span>\n$$<span class=\"pgsql\">\n<span class=\"hljs-keyword\">declare<\/span>\n\trec <span class=\"hljs-type\">record<\/span>;\n\tv_length <span class=\"hljs-type\">int<\/span> = <span class=\"hljs-number\">90<\/span>;\n<span class=\"hljs-keyword\">begin<\/span>\n\t<span class=\"hljs-comment\">-- select a film <\/span>\n\t<span class=\"hljs-keyword\">select<\/span> film_id, title \n\t<span class=\"hljs-keyword\">into<\/span> <span class=\"hljs-keyword\">strict<\/span> rec\n\t<span class=\"hljs-keyword\">from<\/span> film\n\t<span class=\"hljs-keyword\">where<\/span> length = v_length;\n\t\n        <span class=\"hljs-comment\">-- catch exception<\/span>\n\t<span class=\"hljs-keyword\">exception<\/span> \n\t   <span class=\"hljs-keyword\">when<\/span> <span class=\"hljs-built_in\">sqlstate<\/span> <span class=\"hljs-string\">'P0002'<\/span> <span class=\"hljs-keyword\">then<\/span> \n\t      <span class=\"hljs-keyword\">raise<\/span> <span class=\"hljs-keyword\">exception<\/span> <span class=\"hljs-string\">'film with length % not found'<\/span>, v_length;\n\t   <span class=\"hljs-keyword\">when<\/span> <span class=\"hljs-built_in\">sqlstate<\/span> <span class=\"hljs-string\">'P0003'<\/span> <span class=\"hljs-keyword\">then<\/span> \n\t      <span class=\"hljs-keyword\">raise<\/span> <span class=\"hljs-keyword\">exception<\/span> <span class=\"hljs-string\">'The with length % is not unique'<\/span>, v_length;\n<span class=\"hljs-keyword\">end<\/span>;\n$$<\/span>\n<span class=\"hljs-keyword\">language<\/span> plpgsql;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">ERROR:  The with length 90 is not unique\nCONTEXT:  PL\/pgSQL function inline_code_block line 17 at RAISE\nSQL state: P0001<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>4) Handling exceptions as SQLSTATE codes<\/h3>\n\n\n\n<p>The following example is the same as the one above except that it uses the <code>SQLSTATE<\/code> codes instead of the condition names:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">do<\/span>\n$$<span class=\"pgsql\">\n<span class=\"hljs-keyword\">declare<\/span>\n\trec <span class=\"hljs-type\">record<\/span>;\n\tv_length <span class=\"hljs-type\">int<\/span> = <span class=\"hljs-number\">30<\/span>;\n<span class=\"hljs-keyword\">begin<\/span>\n\t<span class=\"hljs-comment\">-- select a film <\/span>\n\t<span class=\"hljs-keyword\">select<\/span> film_id, title \n\t<span class=\"hljs-keyword\">into<\/span> <span class=\"hljs-keyword\">strict<\/span> rec\n\t<span class=\"hljs-keyword\">from<\/span> film\n\t<span class=\"hljs-keyword\">where<\/span> length = v_length;\n\t\n        <span class=\"hljs-comment\">-- catch exception<\/span>\n\t<span class=\"hljs-keyword\">exception<\/span> \n\t   <span class=\"hljs-keyword\">when<\/span> <span class=\"hljs-built_in\">sqlstate<\/span> <span class=\"hljs-string\">'P0002'<\/span> <span class=\"hljs-keyword\">then<\/span> \n\t      <span class=\"hljs-keyword\">raise<\/span> <span class=\"hljs-keyword\">exception<\/span> <span class=\"hljs-string\">'film with length % not found'<\/span>, v_length;\n\t   <span class=\"hljs-keyword\">when<\/span> <span class=\"hljs-built_in\">sqlstate<\/span> <span class=\"hljs-string\">'P0003'<\/span> <span class=\"hljs-keyword\">then<\/span> \n\t      <span class=\"hljs-keyword\">raise<\/span> <span class=\"hljs-keyword\">exception<\/span> <span class=\"hljs-string\">'The with length % is not unique'<\/span>, v_length;\n<span class=\"hljs-keyword\">end<\/span>;\n$$<\/span>\n<span class=\"hljs-keyword\">language<\/span> plpgsql;\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">ERROR:  film with length 30 not found\nCONTEXT:  PL\/pgSQL function inline_code_block line 15 at RAISE\nSQL state: P0001<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use the <code>exception<\/code> clause in the <code>begin...end<\/code> block to catch and handle exceptions.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"5878\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Exception\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"5878\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Exception\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to catch PostgreSQL exceptions in PL\/pgSQL.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":788,"menu_order":24,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL Exception<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/film_table.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/film_table.png\",\"width\":181,\"height\":306,\"caption\":\"Film table\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/\",\"name\":\"PostgreSQL Exception\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/#primaryimage\"},\"datePublished\":\"2020-08-06T02:20:53+00:00\",\"dateModified\":\"2020-08-06T02:39:03+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL PL\/pgSQL\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL Exception\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL Exception","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/film_table.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/film_table.png","width":181,"height":306,"caption":"Film table"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/","name":"PostgreSQL Exception","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/#primaryimage"},"datePublished":"2020-08-06T02:20:53+00:00","dateModified":"2020-08-06T02:39:03+00:00","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/postgresql-exception\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL PL\/pgSQL","item":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL Exception"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5878"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=5878"}],"version-history":[{"count":4,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5878\/revisions"}],"predecessor-version":[{"id":5882,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5878\/revisions\/5882"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/788"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=5878"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}