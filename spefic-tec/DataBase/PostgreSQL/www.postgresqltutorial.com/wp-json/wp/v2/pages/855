{"id":855,"date":"2014-04-12T08:41:36","date_gmt":"2014-04-12T15:41:36","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=855"},"modified":"2020-07-21T00:37:17","modified_gmt":"2020-07-21T07:37:17","slug":"postgresql-truncate-table","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-truncate-table\/","title":{"rendered":"PostgreSQL TRUNCATE TABLE"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use PostgreSQL <code>TRUNCATE TABLE<\/code> statement to quickly delete all data from large tables.<\/p>\n\n\n\n<h2>Introduction to PostgreSQL TRUNCATE TABLE statement<\/h2>\n\n\n\n<p>To remove all data from a table, you use the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-delete\/\">DELETE<\/a><\/code> statement. However, when you use the <code>DELETE<\/code> statement to delete all data from a table that has a lot of data, it is not efficient. In this case, you need to use the <code>TRUNCATE TABLE<\/code> statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">TRUNCATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> table_name;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The\u00a0 <code>TRUNCATE TABLE<\/code> statement deletes all data from a table without scanning it. This is the reason why it is faster than the\u00a0<code>DELETE<\/code> statement.<\/p>\n\n\n\n<p>In addition, the <code>TRUNCATE TABLE<\/code>\u00a0statement reclaims the storage right away so you do not have to perform a subsequent <code>VACUMM<\/code> operation, which is useful in the case of large tables.<\/p>\n\n\n\n<h2>Remove all data from one table<\/h2>\n\n\n\n<p>The simplest form of the&nbsp; <code>TRUNCATE TABLE<\/code> statement is as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">TRUNCATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> table_name;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example uses the <code>TRUNCATE TABLE<\/code> statement to delete all data from the <code>invoices<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">TRUNCATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> invoices;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Besides removing data, you may want to reset the values in the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-identity-column\/\">identity column<\/a> by using the <code>RESTART IDENTITY<\/code> option like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">TRUNCATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> table_name \nRESTART <span class=\"hljs-keyword\">IDENTITY<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>For example, the following statement removes all rows from the <code>invoices<\/code> table and resets the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/\">sequence<\/a> associated with the\u00a0 <code>invoice_no<\/code> column:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">TRUNCATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> invoices \nRESTART <span class=\"hljs-keyword\">IDENTITY<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>By default, the\u00a0 <code>TRUNCATE TABLE<\/code> statement uses the <code>CONTINUE IDENTITY<\/code> option. This option basically does not restart the value in sequence associated with the column in the table.<\/p>\n\n\n\n<h2>Remove all data from multiple tables<\/h2>\n\n\n\n<p>To remove all data from multiple tables at once, you separate each table by a comma (,) as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">TRUNCATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> \n    table_name1, \n    table_name2,\n    ...;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>For example, the following statement removes all data from <code>invoices<\/code> and <code>customers<\/code> tables:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">TRUNCATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> invoices, customers;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Remove all data from a table that has foreign key references<\/h2>\n\n\n\n<p>In practice, the table you want to truncate often has the\u00a0<a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/\">foreign key<\/a> references from other tables that are not listed in the\u00a0 <code>TRUNCATE TABLE<\/code> statement. <\/p>\n\n\n\n<p>By default, the\u00a0 <code>TRUNCATE TABLE<\/code> statement does not remove any data from the table that has foreign key references.<\/p>\n\n\n\n<p>To remove data from a table and other tables that have foreign key reference the table, you use <code>CASCADE<\/code> option in the <code>TRUNCATE TABLE<\/code> statement as follows :<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">TRUNCATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> table_name \n<span class=\"hljs-keyword\">CASCADE<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example deletes data from the <code>invoices<\/code> table and other tables that reference the <code>invoices<\/code> table via foreign key constraints:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">TRUNCATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> invoices <span class=\"hljs-keyword\">CASCADE<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>CASCADE\u00a0<\/code>option should be used with further consideration or you may potentially delete data from tables that you did not want.<\/p>\n\n\n\n<p>By default, the <code>TRUNCATE TABLE<\/code> statement uses the <code>RESTRICT<\/code> option which prevents you from truncating the table that has foreign key constraint references.<\/p>\n\n\n\n<h2>PostgreSQL TRUNCATE TABLE and ON DELETE trigger<\/h2>\n\n\n\n<p>Even though the\u00a0 <code>TRUNCATE TABLE<\/code> statement removes all data from a table, it does not fire any\u00a0 <code>ON DELETE<\/code> <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-triggers\/\">triggers<\/a> associated with the table.<\/p>\n\n\n\n<p>To fire the&nbsp;trigger when the&nbsp; <code>TRUNCATE TABLE<\/code> command applied to a table, you must define&nbsp; <code>BEFORE TRUNCATE<\/code> and\/or&nbsp; <code>AFTER TRUNCATE<\/code> triggers for that table.<\/p>\n\n\n\n<h2>PostgreSQL TRUNCATE TABLE and transaction<\/h2>\n\n\n\n<p>The\u00a0 <code>TRUNCATE TABLE<\/code> is transaction-safe. It means that if you place it within a transaction, you can roll it back safely.<\/p>\n\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use the <code>TRUNCATE TABLE<\/code> statement to delete all data from a large table.<\/li><li>Use the <code>CASCADE<\/code> option to truncate a table and other tables that reference the table via foreign key constraint.<\/li><li>The <code>TRUNCATE TABLE<\/code> does not fire <code>ON DELETE<\/code> trigger. Instead, it fires the <code>BEFORE TRUNCATE<\/code> and <code>AFTER TRUNCATE<\/code> triggers.<\/li><li>The <code>TRUNCATE TABLE<\/code> statement is transaction-safe.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"855\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-truncate-table\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL TRUNCATE TABLE\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"855\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-truncate-table\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL TRUNCATE TABLE\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>This tutorial shows you how to use PostgreSQL TRUNCATE TABLE statement to remove all data from large tables quickly<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":59,"comment_status":"closed","ping_status":"open","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL TRUNCATE TABLE with Practical Examples<\/title>\n<meta name=\"description\" content=\"This tutorial shows you how to use the PostgreSQL TRUNCATE TABLE statement to delete data from large tables quickly and more efficiently.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-truncate-table\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-truncate-table\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-truncate-table\/\",\"name\":\"PostgreSQL TRUNCATE TABLE with Practical Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"datePublished\":\"2014-04-12T15:41:36+00:00\",\"dateModified\":\"2020-07-21T07:37:17+00:00\",\"description\":\"This tutorial shows you how to use the PostgreSQL TRUNCATE TABLE statement to delete data from large tables quickly and more efficiently.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-truncate-table\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-truncate-table\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-truncate-table\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL TRUNCATE TABLE\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL TRUNCATE TABLE with Practical Examples","description":"This tutorial shows you how to use the PostgreSQL TRUNCATE TABLE statement to delete data from large tables quickly and more efficiently.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-truncate-table\/","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-truncate-table\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-truncate-table\/","name":"PostgreSQL TRUNCATE TABLE with Practical Examples","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"datePublished":"2014-04-12T15:41:36+00:00","dateModified":"2020-07-21T07:37:17+00:00","description":"This tutorial shows you how to use the PostgreSQL TRUNCATE TABLE statement to delete data from large tables quickly and more efficiently.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-truncate-table\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-truncate-table\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-truncate-table\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL TRUNCATE TABLE"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/855"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=855"}],"version-history":[{"count":3,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/855\/revisions"}],"predecessor-version":[{"id":5312,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/855\/revisions\/5312"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=855"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}