{"id":1118,"date":"2015-07-09T19:53:59","date_gmt":"2015-07-10T02:53:59","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=1118"},"modified":"2020-07-21T02:10:19","modified_gmt":"2020-07-21T09:10:19","slug":"postgresql-hstore","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-hstore\/","title":{"rendered":"PostgreSQL hstore"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to work with <strong>PostgreSQL hstore<\/strong>&nbsp;data type.<\/p>\n\n\n\n<p>The hstore module implements the hstore data type for storing key-value pairs in a single value. <\/p>\n\n\n\n<p>The hstore data type is very useful in many cases, such as semi-structured data or rows with many attributes that are rarely queried. Notice that keys and values are just text strings only.<\/p>\n\n\n\n<h2>Enable PostgreSQL hstore&nbsp;extension<\/h2>\n\n\n\n<p>Before working with the hstore&nbsp;data type, you need to enable the hstore&nbsp;extension which loads the <strong>contrib<\/strong> module to your PostgreSQL instance.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> EXTENSION hstore;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Create a table with hstore&nbsp;data type<\/h2>\n\n\n\n<p>We create a table named <code>books<\/code>&nbsp;that has three columns:<\/p>\n\n\n\n<ul><li>&nbsp;<code>id<\/code> is the primary key that identifies the book.<\/li><li>&nbsp;<code>title<\/code>&nbsp;is 0the title of the products<\/li><li>&nbsp;<code>attr<\/code> stores attributes of the book such as ISBN, weight, and paperback. The data type of the attr column is hstore.<\/li><\/ul>\n\n\n\n<p>We use the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-table\/\">CREATE TABLE statement<\/a> to create the <code>books<\/code> table as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> books (\n\t<span class=\"hljs-keyword\">id<\/span> <span class=\"hljs-built_in\">serial<\/span> primary <span class=\"hljs-keyword\">key<\/span>,\n\ttitle <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">255<\/span>),\n\t<span class=\"hljs-keyword\">attr<\/span> hstore\n);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Insert data into PostgreSQL hstore&nbsp;column<\/h2>\n\n\n\n<p>We use the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-insert\/\">INSERT<\/a><\/code> statement to insert data into the hstore column as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> books (title, <span class=\"hljs-keyword\">attr<\/span>)\n<span class=\"hljs-keyword\">VALUES<\/span>\n\t(\n\t\t<span class=\"hljs-string\">'PostgreSQL Tutorial'<\/span>,\n\t\t<span class=\"hljs-string\">'\"paperback\" =&gt; \"243\",\n\t   \"publisher\" =&gt; \"postgresqltutorial.com\",\n\t   \"language\"  =&gt; \"English\",\n\t   \"ISBN-13\"   =&gt; \"978-1449370000\",\n\t\t \"weight\"    =&gt; \"11.2 ounces\"'<\/span>\n\t);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The data that we insert into the hstore column is&nbsp;a list of comma-separated&nbsp;key =&gt;value pairs. Both keys and values are quoted using double quotes (&#8220;&#8221;).<\/p>\n\n\n\n<p>Let&#8217;s insert one more row.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> books (title, <span class=\"hljs-keyword\">attr<\/span>)\n<span class=\"hljs-keyword\">VALUES<\/span>\n\t(\n\t\t<span class=\"hljs-string\">'PostgreSQL Cheat Sheet'<\/span>,\n\t\t<span class=\"hljs-string\">'\n\"paperback\" =&gt; \"5\",\n\"publisher\" =&gt; \"postgresqltutorial.com\",\n\"language\"  =&gt; \"English\",\n\"ISBN-13\"   =&gt; \"978-1449370001\",\n\"weight\"    =&gt; \"1 ounces\"'<\/span>\n\t);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Query data from an hstore column<\/h2>\n\n\n\n<p>Querying data from an hstore column is similar to querying data from a column with native data type using the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-select\/\">SELECT<\/a><\/code> statement as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">attr<\/span>\n<span class=\"hljs-keyword\">FROM<\/span>\n\tbooks;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><a href=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-query.jpg\"><img loading=\"lazy\" width=\"773\" height=\"63\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-query.jpg\" alt=\"postgresql hstore query\" class=\"wp-image-1119\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-query.jpg 773w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-query-300x24.jpg 300w\" sizes=\"(max-width: 773px) 100vw, 773px\" \/><\/a><\/figure>\n\n\n\n<h2>Query value for a specific key<\/h2>\n\n\n\n<p>Postgresql hstore&nbsp;provides the <code>-&gt;<\/code> operator to query the value of a specific&nbsp;key from an hstore column. For example, if we want to know ISBN-13 of all available books in the <code>books<\/code> table, we can use the <code>-&gt;<\/code> operator as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">attr<\/span> -&gt; <span class=\"hljs-string\">'ISBN-13'<\/span> <span class=\"hljs-keyword\">AS<\/span> isbn\n<span class=\"hljs-keyword\">FROM<\/span>\n\tbooks;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"114\" height=\"59\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-query-key.jpg\" alt=\"postgresql hstore query key\" class=\"wp-image-1120\"\/><\/figure>\n\n\n\n<h2>Use value in the WHERE clause<\/h2>\n\n\n\n<p>You can use the <code>-&gt;<\/code> operator in the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-where\/\">WHERE<\/a><\/code> clause to filter the rows whose&nbsp;values of the hstore column match the input value. For example, the following &nbsp;query retrieves the <code>title<\/code> and&nbsp;<code>weight<\/code>&nbsp;of a&nbsp;book that has <code>ISBN-13<\/code> value matches&nbsp;<code>978-1449370000:<\/code><\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\ttitle, <span class=\"hljs-keyword\">attr<\/span> -&gt; <span class=\"hljs-string\">'weight'<\/span> <span class=\"hljs-keyword\">AS<\/span> weight\n<span class=\"hljs-keyword\">FROM<\/span>\n\tbooks\n<span class=\"hljs-keyword\">WHERE<\/span>\n\t<span class=\"hljs-keyword\">attr<\/span> -&gt; <span class=\"hljs-string\">'ISBN-13'<\/span> = <span class=\"hljs-string\">'978-1449370000'<\/span>;\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"217\" height=\"41\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-WHERE-clause.jpg\" alt=\"postgresql hstore WHERE clause\" class=\"wp-image-1121\"\/><\/figure>\n\n\n\n<h2>Add key-value pairs to existing rows<\/h2>\n\n\n\n<p>With hstore column, you can easily add a new key-value pair to existing rows e.g., you can add free shipping key to the <code>attr<\/code> column of the <code>books<\/code> table as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">UPDATE<\/span> books\n<span class=\"hljs-keyword\">SET<\/span> <span class=\"hljs-keyword\">attr<\/span> = <span class=\"hljs-keyword\">attr<\/span> || <span class=\"hljs-string\">'\"freeshipping\"=&gt;\"yes\"'<\/span> :: hstore;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Now, you can check to see if the <code>\"freeshipping\" =&gt; \"yes\"<\/code> pair has been added successfully.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\ttitle,\n        <span class=\"hljs-keyword\">attr<\/span> -&gt; <span class=\"hljs-string\">'freeshipping'<\/span> <span class=\"hljs-keyword\">AS<\/span> freeshipping\n<span class=\"hljs-keyword\">FROM<\/span>\n\tbooks;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"261\" height=\"59\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-add-key-value.jpg\" alt=\"postgresql hstore add key-value\" class=\"wp-image-1122\"\/><\/figure>\n\n\n\n<h2>Update existing key-value pair<\/h2>\n\n\n\n<p>You can update existing key-value pair using the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-update\/\">UPDATE<\/a><\/code> statement. The following statement updates the value of the <code>\"freeshipping\"<\/code> key to <code>\"no\"<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">UPDATE<\/span> books\n<span class=\"hljs-keyword\">SET<\/span> <span class=\"hljs-keyword\">attr<\/span> = <span class=\"hljs-keyword\">attr<\/span> || <span class=\"hljs-string\">'\"freeshipping\"=&gt;\"no\"'<\/span> :: hstore;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Remove existing key-value pair<\/h2>\n\n\n\n<p>PostgreSQL allows you to remove existing&nbsp;key-value pair from an hstore column. For example, the following statement removes the <code>\"freeshipping\"=&gt;\"no\"<\/code> key-value pair in the <code>attr<\/code> column.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">UPDATE<\/span> books \n<span class=\"hljs-keyword\">SET<\/span> <span class=\"hljs-keyword\">attr<\/span> = <span class=\"hljs-keyword\">delete<\/span>(<span class=\"hljs-keyword\">attr<\/span>, <span class=\"hljs-string\">'freeshipping'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Check for a specific key in hstore column<\/h2>\n\n\n\n<p>You can check for a specific key in an hstore column using the <code>?<\/code> operator in the <code>WHERE<\/code> clause. For example, the following statement returns all rows with attr contains key <code>publisher<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n  title,\n  <span class=\"hljs-keyword\">attr<\/span>-&gt;<span class=\"hljs-string\">'publisher'<\/span> <span class=\"hljs-keyword\">as<\/span> publisher,\n  <span class=\"hljs-keyword\">attr<\/span>\n<span class=\"hljs-keyword\">FROM<\/span>\n\tbooks\n<span class=\"hljs-keyword\">WHERE<\/span>\n\t<span class=\"hljs-keyword\">attr<\/span> ? <span class=\"hljs-string\">'publisher'<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"641\" height=\"60\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgesql-hstore-check-key.jpg\" alt=\"postgesql hstore check key\" class=\"wp-image-1123\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgesql-hstore-check-key.jpg 641w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgesql-hstore-check-key-300x28.jpg 300w\" sizes=\"(max-width: 641px) 100vw, 641px\" \/><\/figure>\n\n\n\n<h2>Check for a key-value pair<\/h2>\n\n\n\n<p>You can query based on the hstore key-value pair using the <code>@&gt;<\/code> operator. The following statement retrieves all rows which <code>attr<\/code> column contains a key-value pair that matches <code>\"weight\"=&gt;\"11.2 ounces\"<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\ttitle\n<span class=\"hljs-keyword\">FROM<\/span>\n\tbooks\n<span class=\"hljs-keyword\">WHERE<\/span>\n\t<span class=\"hljs-keyword\">attr<\/span> @&gt; <span class=\"hljs-string\">'\"weight\"=&gt;\"11.2 ounces\"'<\/span> :: hstore;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"164\" height=\"42\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-check-key-pair.jpg\" alt=\"postgresql hstore check key-pair\" class=\"wp-image-1124\"\/><\/figure>\n\n\n\n<h2>Query&nbsp;rows&nbsp;that contain multiple&nbsp;specified keys<\/h2>\n\n\n\n<p>You can query the rows whose hstore column&nbsp;contain multiple keys using <code>?&amp;<\/code> operator. For example, you can get books where <code>attr<\/code> column contains both <code>language<\/code> and <code>weight<\/code> keys.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\ttitle\n<span class=\"hljs-keyword\">FROM<\/span>\n\tbooks\n<span class=\"hljs-keyword\">WHERE<\/span>\n\t<span class=\"hljs-keyword\">attr<\/span> ?&amp; <span class=\"hljs-built_in\">ARRAY<\/span> [ <span class=\"hljs-string\">'language'<\/span>, <span class=\"hljs-string\">'weight'<\/span> ];<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"163\" height=\"60\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-check-multiple-keys.jpg\" alt=\"postgresql hstore check multiple keys\" class=\"wp-image-1125\"\/><\/figure>\n\n\n\n<p>To check if a row whose hstore column contains any key from a list of keys, you use the <code>?|<\/code> operator instead of the <code>?&amp;<\/code> operator.<\/p>\n\n\n\n<h2>Get all keys from an hstore column<\/h2>\n\n\n\n<p>To get all keys from an hstore column, you use the <code>akeys()<\/code> function as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\takeys (<span class=\"hljs-keyword\">attr<\/span>)\n<span class=\"hljs-keyword\">FROM<\/span>\n\tbooks;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"280\" height=\"61\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-akeys-function.jpg\" alt=\"postgresql hstore akeys function\" class=\"wp-image-1127\"\/><\/figure>\n\n\n\n<p>Or you can use the&nbsp; <code>skey()<\/code> function if you want PostgreSQL to return the result as a set.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\tskeys (<span class=\"hljs-keyword\">attr<\/span>)\n<span class=\"hljs-keyword\">FROM<\/span>\n\tbooks;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"70\" height=\"219\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-skeys-function.jpg\" alt=\"postgresql hstore skeys function\" class=\"wp-image-1128\"\/><\/figure>\n\n\n\n<h2>Get all values from an hstore column<\/h2>\n\n\n\n<p>Like keys, you can get all values from an hstore column using the &nbsp;<code>avals()<\/code> function in&nbsp;the form of arrays.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\tavals (<span class=\"hljs-keyword\">attr<\/span>)\n<span class=\"hljs-keyword\">FROM<\/span>\n\tbooks;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><a href=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-avals-function.jpg\"><img loading=\"lazy\" width=\"377\" height=\"61\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-avals-function.jpg\" alt=\"postgresql hstore avals function\" class=\"wp-image-1129\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-avals-function.jpg 377w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-avals-function-300x49.jpg 300w\" sizes=\"(max-width: 377px) 100vw, 377px\" \/><\/a><\/figure>\n\n\n\n<p>Or you can use the &nbsp;<code>svals()<\/code>&nbsp;function if you want to get the result as a set.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-18\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\tsvals (<span class=\"hljs-keyword\">attr<\/span>)\n<span class=\"hljs-keyword\">FROM<\/span>\n\tbooks;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-18\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"151\" height=\"223\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-svals.jpg\" alt=\"postgresql hstore svals\" class=\"wp-image-1130\"\/><\/figure>\n\n\n\n<h2>Convert hstore data&nbsp;to JSON<\/h2>\n\n\n\n<p>PostgreSQL provides the <code>hstore_to_json()<\/code> function to convert hstore data to <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-json\/\">JSON<\/a>. See the following statement:<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">SELECT\n  title,\n  hstore_to_json (attr) json\nFROM\n  books;<\/code><\/div><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"879\" height=\"60\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-to-json.jpg\" alt=\"postgresql hstore to json\" class=\"wp-image-1131\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-to-json.jpg 879w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-to-json-300x20.jpg 300w\" sizes=\"(max-width: 879px) 100vw, 879px\" \/><\/figure>\n\n\n\n<h2>Convert hstore data to sets<\/h2>\n\n\n\n<p>To convert hstore data to sets, you use the &nbsp;<code>each()<\/code> function as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-19\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\ttitle,\n\t(<span class=\"hljs-keyword\">EACH<\/span>(<span class=\"hljs-keyword\">attr<\/span>) ).*\n<span class=\"hljs-keyword\">FROM<\/span>\n\tbooks;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-19\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"308\" height=\"220\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-to-sets.jpg\" alt=\"postgresql hstore to sets\" class=\"wp-image-1132\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-to-sets.jpg 308w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-to-sets-300x214.jpg 300w\" sizes=\"(max-width: 308px) 100vw, 308px\" \/><\/figure>\n\n\n\n<p>In this tutorial, we have shown you how to work with PostgreSQL hstore data type and introduced you to the most useful&nbsp;operations that you can perform against the hstore data type.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1118\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-hstore\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL hstore\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1118\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-hstore\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL hstore\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to work with PostgreSQL hstore data type.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":77,"comment_status":"closed","ping_status":"open","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL hstore Tutorial<\/title>\n<meta name=\"description\" content=\"We introduce you to PostgreSQL hstore data type. You will learn know how to perform practical and useful operations on PostgreSQL hstore columns.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"5 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-query.jpg\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-query.jpg\",\"width\":773,\"height\":63},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/\",\"name\":\"PostgreSQL hstore Tutorial\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/#primaryimage\"},\"datePublished\":\"2015-07-10T02:53:59+00:00\",\"dateModified\":\"2020-07-21T09:10:19+00:00\",\"description\":\"We introduce you to PostgreSQL hstore data type. You will learn know how to perform practical and useful operations on PostgreSQL hstore columns.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL hstore\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL hstore Tutorial","description":"We introduce you to PostgreSQL hstore data type. You will learn know how to perform practical and useful operations on PostgreSQL hstore columns.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/","twitter_misc":{"Est. reading time":"5 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-query.jpg","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/07\/postgresql-hstore-query.jpg","width":773,"height":63},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/","name":"PostgreSQL hstore Tutorial","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/#primaryimage"},"datePublished":"2015-07-10T02:53:59+00:00","dateModified":"2020-07-21T09:10:19+00:00","description":"We introduce you to PostgreSQL hstore data type. You will learn know how to perform practical and useful operations on PostgreSQL hstore columns.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-hstore\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL hstore"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1118"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=1118"}],"version-history":[{"count":2,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1118\/revisions"}],"predecessor-version":[{"id":5336,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1118\/revisions\/5336"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=1118"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}