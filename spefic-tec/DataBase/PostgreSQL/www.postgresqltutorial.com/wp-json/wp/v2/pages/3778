{"id":3778,"date":"2019-01-01T06:12:10","date_gmt":"2019-01-01T13:12:10","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=3778"},"modified":"2020-07-09T22:37:22","modified_gmt":"2020-07-10T05:37:22","slug":"postgresql-multicolumn-indexes","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/","title":{"rendered":"PostgreSQL Multicolumn Indexes"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to create multicolumn indexes which are indexes defined on more than one column of a table.<\/p>\n\n\n\n<h2>Introduction to PostgreSQL multicolumn indexes<\/h2>\n\n\n\n<p>You can <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-create-index\/\">create an index<\/a> on more than one column of a table. This index is called a multicolumn index, a composite index, a combined index, or a concatenated index.<\/p>\n\n\n\n<p>A multicolumn index can have maximum 32 columns of a table. The limit can be changed by modifying the <code>pg_config_manual.h<\/code> when building PostgreSQL.<\/p>\n\n\n\n<p>In addition, only B-tree, GIST, GIN, and BRIN index types support multicolumn indexes.<\/p>\n\n\n\n<p>The following syntax shows how to create a multicolumn index:<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">CREATE INDEX index_name\nON table_name(a,b,c,...);<\/code><\/div><\/pre>\n\n\n<p>When defining a multicolumn index, you should place the columns which are often used in the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-where\/\">WHERE<\/a><\/code> clause at the beginning of the column list and the columns that are less frequently used in the condition after.<\/p>\n\n\n\n<p>In the above syntax, the PostgreSQL optimizer will consider using the index in the following cases:<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">WHERE a = v1 and b = v2 and c = v3;<\/code><\/div><\/pre>\n\n\n<p>Or<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">WHERE a = v1 and b = v2;<\/code><\/div><\/pre>\n\n\n<p>Or<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">WHERE a = v1;<\/code><\/div><\/pre>\n\n\n<p>However, it will not consider using&nbsp;the index in the following cases:<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">WHERE  c = v3;<\/code><\/div><\/pre>\n\n\n<p>or<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">WHERE b = v2 and c = v3;    <\/code><\/div><\/pre>\n\n\n<h2>PostgreSQL Multicolumn Index example<\/h2>\n\n\n\n<p>To demonstrate multicolumn indexes, we will <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-table\/\">create a new table<\/a> named <code>people<\/code> with three columns: id, first name, and last name:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><div><code class=\"hljs language-php\">CREATE TABLE people(\n    id INT GENERATED BY <span class=\"hljs-keyword\">DEFAULT<\/span> <span class=\"hljs-keyword\">AS<\/span> IDENTITY,\n    first_name VARCHAR(<span class=\"hljs-number\">50<\/span>) NOT <span class=\"hljs-keyword\">NULL<\/span>,\n    last_name VARCHAR(<span class=\"hljs-number\">50<\/span>) NOT <span class=\"hljs-keyword\">NULL<\/span>\n);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>You can use the following script to load 10,000 rows into the <code>people<\/code> table:<\/p>\n\n\n\n<p><a href=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/01\/Script-to-load-10000-names.txt\">Script to load 10000 names<\/a><\/p>\n\n\n\n<p>The following statement finds people whose last name is <code>Adams<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">SELECT\n    *\nFROM\n    people\nWHERE\n    last_name = <span class=\"hljs-string\">'Adams'<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Here is the output:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"327\" height=\"54\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/01\/postgresql-multicolumn-index-seq-scan.png\" alt=\"postgresql multicolumn index - seq scan\" class=\"wp-image-3784\"\/><\/figure>\n\n\n\n<p>As shown clearly in the output, PostgreSQL performed the sequential scan on the <code>people<\/code> table to find the corresponding rows because there was no index defined for the <code>last_name<\/code> column.<\/p>\n\n\n\n<p>Let&#8217;s define a B-tree index on both <code>last_name<\/code> and <code>first_name<\/code> columns. Assuming that searching for people by the last name is more often than by the first name, we define the index with the following column order:<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">CREATE INDEX idx_people_names \nON people (last_name, first_name);<\/code><\/div><\/pre>\n\n\n<p>Now, if you search for people whose last name is <code>Adams<\/code>, the PostgreSQL optimizer will use the index as shown in the output of the following statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">EXPLAIN SELECT\n    *\nFROM\n    people\nWHERE\n    last_name = <span class=\"hljs-string\">'Adams'<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The output is:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"438\" height=\"92\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/01\/postgresql-multicolumn-index-use-index.png\" alt=\"postgresql multicolumn index - use index\" class=\"wp-image-3786\"\/><\/figure>\n\n\n\n<p>The following statement finds the person whose last name is <code>Adams<\/code> and\u00a0the first name is <code>Lou<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">SELECT\n    *\nFROM\n    people\nWHERE\n    last_name = <span class=\"hljs-string\">'Adams'<\/span>\nAND first_name = <span class=\"hljs-string\">'Lou'<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following shows the output:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"452\" height=\"56\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/01\/postgresql-multicolumn-index-use-index-scan.png\" alt=\"\" class=\"wp-image-3785\"\/><\/figure>\n\n\n\n<p>The PostgreSQL Optimizer used the index for this statement because both columns in the <code>WHERE<\/code> clause are all in the index:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">EXPLAIN SELECT\n    *\nFROM\n    people\nWHERE\n    last_name = <span class=\"hljs-string\">'Adams'<\/span>\nAND first_name = <span class=\"hljs-string\">'Lou'<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, if you search for people whose first name is <code>Lou<\/code>, PostgreSQL will perform sequential scan the table instead of using the index as shown in the output of the following statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">EXPLAIN SELECT\n    *\nFROM\n    people\nWHERE\n    first_name = <span class=\"hljs-string\">'Lou'<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"314\" height=\"52\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/01\/postgresql-multicolumn-index-querying-using-minor-column.png\" alt=\"postgresql multicolumn index - querying using minor column\" class=\"wp-image-3788\"\/><\/figure>\n\n\n\n<p>Even though the <code>first_name<\/code> column is a part of the index, PostgreSQL could not leverage it.<\/p>\n\n\n\n<p>A key point to take away is that when you define a multicolumn index, you should always consider the business context to find which columns are often used for lookup and place these columns at the beginning of the column list while defining the index.<\/p>\n\n\n\n<p>In this tutorial, you have learned how about the PostgreSQL multicolumn index and the importance of the column order in the multicolumn indexes.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"3778\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Multicolumn Indexes\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"3778\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Multicolumn Indexes\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>This tutorial shows you how to create multicolumn indexes which are indexes defined on more than one column of a table.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":3705,"menu_order":8,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL Multicolumn Indexes<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/01\/postgresql-multicolumn-index-seq-scan.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/01\/postgresql-multicolumn-index-seq-scan.png\",\"width\":327,\"height\":54,\"caption\":\"postgresql multicolumn index - seq scan\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/\",\"name\":\"PostgreSQL Multicolumn Indexes\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/#primaryimage\"},\"datePublished\":\"2019-01-01T13:12:10+00:00\",\"dateModified\":\"2020-07-10T05:37:22+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Indexes\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL Multicolumn Indexes\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL Multicolumn Indexes","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/01\/postgresql-multicolumn-index-seq-scan.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/01\/postgresql-multicolumn-index-seq-scan.png","width":327,"height":54,"caption":"postgresql multicolumn index - seq scan"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/","name":"PostgreSQL Multicolumn Indexes","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/#primaryimage"},"datePublished":"2019-01-01T13:12:10+00:00","dateModified":"2020-07-10T05:37:22+00:00","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/postgresql-multicolumn-indexes\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Indexes","item":"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL Multicolumn Indexes"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3778"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=3778"}],"version-history":[{"count":1,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3778\/revisions"}],"predecessor-version":[{"id":4589,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3778\/revisions\/4589"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3705"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=3778"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}