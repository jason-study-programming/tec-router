{"id":5857,"date":"2020-08-05T02:53:10","date_gmt":"2020-08-05T09:53:10","guid":{"rendered":"https:\/\/www.postgresqltutorial.com\/?page_id=5857"},"modified":"2020-08-05T02:53:32","modified_gmt":"2020-08-05T09:53:32","slug":"pl-pgsql-continue","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/pl-pgsql-continue\/","title":{"rendered":"PL\/pgSQL Continue"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PL\/pgSQL <code>continue<\/code> statement to control the loop.<\/p>\n\n\n\n<h2>Introduction to PL\/pgSQL continue statement<\/h2>\n\n\n\n<p>The <code>continue<\/code> statement prematurely skips the current iteration of the loop and jumps to the next one. The <code>continue<\/code> statement can be used in all kinds of loops including <a href=\"https:\/\/www.postgresqltutorial.com\/plpgsql-loop-statements\/\">unconditional loops,<\/a> <a href=\"https:\/\/www.postgresqltutorial.com\/plpgsql-while-loop\/\">while loops<\/a>, and <a href=\"https:\/\/www.postgresqltutorial.com\/plpgsql-for-loop\/\">for loops<\/a>.<\/p>\n\n\n\n<p>The following illustrates the syntax of the <code>continue<\/code> statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><div><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">continue<\/span> <span class=\"hljs-selector-attr\">[loop_label]<\/span> <span class=\"hljs-selector-attr\">[when condition]<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax, the <code>loop_label<\/code> and <code>when condition<\/code> are optional.<\/p>\n\n\n\n<p>The <code>loop_label<\/code> is the label of the loop that you want to skip the current iteration. If you omit the <code>loop_label<\/code>, the <code>continue<\/code> statement skips the current iteration of the loop. If you specify a loop label, the continue statement skips the current iteration of that loop.<\/p>\n\n\n\n<p>The <code>condition<\/code> is a boolean expression that specifies the condition to skip the current iteration of the loop. If the <code>condition<\/code> is <code>true<\/code>, then the <code>continue<\/code> will skip the current loop iteration.<\/p>\n\n\n\n<h2>PL\/pgSQL Continue statement example<\/h2>\n\n\n\n<p>The following example uses the <code>continue<\/code> statement in an unconditional loop to print out the odd numbers from 1 to 10:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">do<\/span>\n$$<span class=\"pgsql\">\n<span class=\"hljs-keyword\">declare<\/span>\n   counter <span class=\"hljs-type\">int<\/span> = <span class=\"hljs-number\">0<\/span>;\n<span class=\"hljs-keyword\">begin<\/span>\n  \n  <span class=\"hljs-keyword\">loop<\/span>\n     counter = counter + <span class=\"hljs-number\">1<\/span>;\n\t <span class=\"hljs-comment\">-- exit the loop if counter &gt; 10<\/span>\n\t <span class=\"hljs-keyword\">exit<\/span> <span class=\"hljs-keyword\">when<\/span> counter &gt; <span class=\"hljs-number\">10<\/span>;\n\t <span class=\"hljs-comment\">-- skip the current iteration if counter is an even number<\/span>\n\t <span class=\"hljs-keyword\">continue<\/span> <span class=\"hljs-keyword\">when<\/span> mod(counter,<span class=\"hljs-number\">2<\/span>) = <span class=\"hljs-number\">0<\/span>;\n\t <span class=\"hljs-comment\">-- print out the counter<\/span>\n\t <span class=\"hljs-keyword\">raise<\/span> <span class=\"hljs-keyword\">notice<\/span> <span class=\"hljs-string\">'%'<\/span>, counter;\n  <span class=\"hljs-keyword\">end<\/span> <span class=\"hljs-keyword\">loop<\/span>;\n<span class=\"hljs-keyword\">end<\/span>;\n$$<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"HTTP\" data-shcb-language-slug=\"http\"><div><code class=\"hljs language-http\"><span class=\"hljs-attribute\">NOTICE<\/span>:  1\n<span class=\"hljs-attribute\">NOTICE<\/span>:  3\n<span class=\"hljs-attribute\">NOTICE<\/span>:  5\n<span class=\"hljs-attribute\">NOTICE<\/span>:  7\n<span class=\"hljs-attribute\">NOTICE<\/span>:  9<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTTP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">http<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>First, initialize the <code>counter<\/code> to zero.<\/li><li>Second, increase the counter by one in each iteration. If the <code>counter<\/code> is greater than 10, then <a href=\"https:\/\/www.postgresqltutorial.com\/plpgsql-exit\/\">exit <\/a>the loop. If the <code>counter<\/code> is an even number, then skip the current iteration. <\/li><\/ul>\n\n\n\n<p>The <code>mod(counter,2)<\/code> returns the remainder of the division of the <code>counter<\/code> by two.  If it is zero, then the counter is an even number. All the statements between the <code>continue<\/code> statement and <code>end loop<\/code> will be skipped.<\/p>\n\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use the <code>continue<\/code> statement to skip the current loop iteration prematurely and start a new one.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"5857\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/pl-pgsql-continue\/\"\n\t\t\t\tdata-post-title=\"PL\/pgSQL Continue\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"5857\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/pl-pgsql-continue\/\"\n\t\t\t\tdata-post-title=\"PL\/pgSQL Continue\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn about the PL\/pgSQL Continue statement to skip the current loop iteration and continue the next one.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":788,"menu_order":16,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PL\/pgSQL Continue Statement By Examples<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn about the PL\/pgSQL Continue statement to skip the current loop iteration and continue the next one.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/pl-pgsql-continue\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/pl-pgsql-continue\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/pl-pgsql-continue\/\",\"name\":\"PL\/pgSQL Continue Statement By Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"datePublished\":\"2020-08-05T09:53:10+00:00\",\"dateModified\":\"2020-08-05T09:53:32+00:00\",\"description\":\"In this tutorial, you will learn about the PL\/pgSQL Continue statement to skip the current loop iteration and continue the next one.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/pl-pgsql-continue\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/pl-pgsql-continue\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/pl-pgsql-continue\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL PL\/pgSQL\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PL\/pgSQL Continue\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PL\/pgSQL Continue Statement By Examples","description":"In this tutorial, you will learn about the PL\/pgSQL Continue statement to skip the current loop iteration and continue the next one.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/pl-pgsql-continue\/","twitter_misc":{"Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/pl-pgsql-continue\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/pl-pgsql-continue\/","name":"PL\/pgSQL Continue Statement By Examples","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"datePublished":"2020-08-05T09:53:10+00:00","dateModified":"2020-08-05T09:53:32+00:00","description":"In this tutorial, you will learn about the PL\/pgSQL Continue statement to skip the current loop iteration and continue the next one.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/pl-pgsql-continue\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/pl-pgsql-continue\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/pl-pgsql-continue\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL PL\/pgSQL","item":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/"},{"@type":"ListItem","position":3,"name":"PL\/pgSQL Continue"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5857"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=5857"}],"version-history":[{"count":4,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5857\/revisions"}],"predecessor-version":[{"id":5863,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5857\/revisions\/5863"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/788"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=5857"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}