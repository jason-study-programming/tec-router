{"id":1200,"date":"2015-08-30T20:49:23","date_gmt":"2015-08-31T03:49:23","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=1200"},"modified":"2020-10-20T08:14:39","modified_gmt":"2020-10-20T15:14:39","slug":"postgresql-foreign-key","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-foreign-key\/","title":{"rendered":"PostgreSQL Foreign Key"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about PostgreSQL foreign key and how to add foreign keys to tables using foreign key constraints.<\/p>\n\n\n\n<h2>Introduction to PostgreSQL Foreign Key Constraint<\/h2>\n\n\n\n<p>A foreign key is a column or a group of columns in a table that reference the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-primary-key\/\">primary key<\/a> of another table.<\/p>\n\n\n\n<p>The table that contains the foreign key is called the referencing table or child table. And the table referenced by the foreign key is called the referenced table or parent table.<\/p>\n\n\n\n<p>A table can have multiple foreign keys depending on its relationships with other tables.<\/p>\n\n\n\n<p>In PostgreSQL, you define a foreign key using the foreign key constraint. The foreign key constraint helps maintain the referential integrity of data between the child and parent tables.<\/p>\n\n\n\n<p>A foreign key constraint indicates that values in a column or a group of columns in the child table equal the values in a column or a group of columns&nbsp;of the parent table. <\/p>\n\n\n\n<h2>PostgreSQL foreign key constraint syntax<\/h2>\n\n\n\n<p>The following illustrates a foreign key constraint syntax:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><div><code class=\"hljs language-css\"><span class=\"hljs-selector-attr\">[CONSTRAINT fk_name]<\/span>\n   <span class=\"hljs-selector-tag\">FOREIGN<\/span> <span class=\"hljs-selector-tag\">KEY<\/span>(<span class=\"hljs-selector-tag\">fk_columns<\/span>) \n   <span class=\"hljs-selector-tag\">REFERENCES<\/span> <span class=\"hljs-selector-tag\">parent_table<\/span>(<span class=\"hljs-selector-tag\">parent_key_columns<\/span>)\n   <span class=\"hljs-selector-attr\">[ON DELETE delete_action]<\/span>\n   <span class=\"hljs-selector-attr\">[ON UPDATE update_action]<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax:<\/p>\n\n\n\n<ul><li>First, specify the name for the foreign key constraint after the <code>CONSTRAINT<\/code> keyword. The <code>CONSTRAINT<\/code> clause is optional. If you omit it, PostgreSQL will assign an auto-generated name.<\/li><li>Second, specify one or more foreign key columns in parentheses after the <code>FOREIGN KEY<\/code> keywords.<\/li><li>Third, specify the parent table and parent key columns referenced by the foreign key columns in the <code>REFERENCES<\/code> clause.<\/li><li>Finally, specify the delete and update actions in the<code> ON DELETE<\/code> and <code>ON UPDATE<\/code> clauses. <\/li><\/ul>\n\n\n\n<p>The delete and update actions determine the behaviors when the primary key in the parent table is deleted and updated. Since the primary key is rarely updated, the <code>ON UPDATE action<\/code> is not often used in practice. We&#8217;ll focus on the <code>ON DELETE<\/code> action.<\/p>\n\n\n\n<p>PostgreSQL supports the following actions:<\/p>\n\n\n\n<ul><li>SET NULL<\/li><li>SET DEFAULT<\/li><li>RESTRICT<\/li><li>NO ACTION<\/li><li>CASCADE<\/li><\/ul>\n\n\n\n<h2>PostgreSQL foreign key constraint examples<\/h2>\n\n\n\n<p>The following statements create the <code>customers<\/code> and <code>contacts<\/code> tables:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">TABLE<\/span> <span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">EXISTS<\/span> customers;\n<span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">TABLE<\/span> <span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">EXISTS<\/span> contacts;\n\n<span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> customers(\n   customer_id <span class=\"hljs-built_in\">INT<\/span> <span class=\"hljs-keyword\">GENERATED<\/span> <span class=\"hljs-keyword\">ALWAYS<\/span> <span class=\"hljs-keyword\">AS<\/span> <span class=\"hljs-keyword\">IDENTITY<\/span>,\n   customer_name <span class=\"hljs-built_in\">VARCHAR<\/span>(<span class=\"hljs-number\">255<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n   PRIMARY <span class=\"hljs-keyword\">KEY<\/span>(customer_id)\n);\n\n<span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> contacts(\n   contact_id <span class=\"hljs-built_in\">INT<\/span> <span class=\"hljs-keyword\">GENERATED<\/span> <span class=\"hljs-keyword\">ALWAYS<\/span> <span class=\"hljs-keyword\">AS<\/span> <span class=\"hljs-keyword\">IDENTITY<\/span>,\n   customer_id <span class=\"hljs-built_in\">INT<\/span>,\n   contact_name <span class=\"hljs-built_in\">VARCHAR<\/span>(<span class=\"hljs-number\">255<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n   phone <span class=\"hljs-built_in\">VARCHAR<\/span>(<span class=\"hljs-number\">15<\/span>),\n   email <span class=\"hljs-built_in\">VARCHAR<\/span>(<span class=\"hljs-number\">100<\/span>),\n   PRIMARY <span class=\"hljs-keyword\">KEY<\/span>(contact_id),\n   <span class=\"hljs-keyword\">CONSTRAINT<\/span> fk_customer\n      <span class=\"hljs-keyword\">FOREIGN<\/span> <span class=\"hljs-keyword\">KEY<\/span>(customer_id) \n\t  <span class=\"hljs-keyword\">REFERENCES<\/span> customers(customer_id)\n);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>customers<\/code> table is the parent table and the <code>contacts<\/code> table is the child table.<\/p>\n\n\n\n<p>Each customer has zero or many contacts and each contact belongs to zero or one customer.<\/p>\n\n\n\n<p>The <code>customer_id<\/code> column in the <code>contacts<\/code> table is the foreign key column that references the primary key column with the same name in the <code>customers<\/code> table.<\/p>\n\n\n\n<p>The following foreign key constraint <code>fk_customer<\/code> in the <code>contacts<\/code> table defines the <code>customer_id<\/code> as the foreign key:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">CONSTRAINT fk_customer\n   FOREIGN KEY(customer_id) \n      REFERENCES customers(customer_id)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Because the foreign key constraint does not have the <code>ON DELETE<\/code> and <code>ON UPDATE<\/code> action, they default to <code>NO ACTION<\/code>.<\/p>\n\n\n\n<h3>NO ACTION<\/h3>\n\n\n\n<p>The following inserts data into the <code>customers<\/code> and <code>contacts<\/code> tables:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> customers(customer_name)\n<span class=\"hljs-keyword\">VALUES<\/span>(<span class=\"hljs-string\">'BlueBird Inc'<\/span>),\n      (<span class=\"hljs-string\">'Dolphin LLC'<\/span>);\t   \n\t   \n<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> contacts(customer_id, contact_name, phone, email)\n<span class=\"hljs-keyword\">VALUES<\/span>(<span class=\"hljs-number\">1<\/span>,<span class=\"hljs-string\">'John Doe'<\/span>,<span class=\"hljs-string\">'(408)-111-1234'<\/span>,<span class=\"hljs-string\">'john.doe@bluebird.dev'<\/span>),\n      (<span class=\"hljs-number\">1<\/span>,<span class=\"hljs-string\">'Jane Doe'<\/span>,<span class=\"hljs-string\">'(408)-111-1235'<\/span>,<span class=\"hljs-string\">'jane.doe@bluebird.dev'<\/span>),\n      (<span class=\"hljs-number\">2<\/span>,<span class=\"hljs-string\">'David Wright'<\/span>,<span class=\"hljs-string\">'(408)-222-1234'<\/span>,<span class=\"hljs-string\">'david.wright@dolphin.dev'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following statement deletes the customer id 1 from the <code>customers<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">DELETE<\/span> <span class=\"hljs-keyword\">FROM<\/span> customers\n<span class=\"hljs-keyword\">WHERE<\/span> customer_id = <span class=\"hljs-number\">1<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Because of the <code>ON DELETE NO ACTION<\/code>, PostgreSQL issues a constraint violation because the referencing rows of the customer id 1 still exist in the <code>contacts<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">ERROR:  update or delete on table \"customers\" violates foreign key constraint \"fk_customer\" on table \"contacts\"\nDETAIL:  Key (customer_id)=(1) is still referenced from table \"contacts\".\nSQL state: 23503<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>RESTRICT<\/code> action is similar to the <code>NO ACTION<\/code>. The difference only arises when you define the foreign key constraint as&nbsp;<code>DEFERRABLE<\/code>&nbsp;with an&nbsp;<code>INITIALLY DEFERRED<\/code>&nbsp;or&nbsp;<code>INITIALLY IMMEDIATE<\/code>&nbsp;mode. We&#8217;ll discuss more on this in the subsequent tutorial.<\/p>\n\n\n\n<h3>SET NULL<\/h3>\n\n\n\n<p>The <code>SET NULL<\/code> automatically sets <code>NULL<\/code> to the foreign key columns in the referencing rows of the child table when the referenced rows in the parent table are deleted.<\/p>\n\n\n\n<p>The following statements drop the sample tables and re-create them with the foreign key that uses the <code>SET NULL<\/code> action in the <code>ON DELETE<\/code> clause:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">TABLE<\/span> <span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">EXISTS<\/span> contacts;\n<span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">TABLE<\/span> <span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">EXISTS<\/span> customers;\n\n<span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> customers(\n   customer_id <span class=\"hljs-built_in\">INT<\/span> <span class=\"hljs-keyword\">GENERATED<\/span> <span class=\"hljs-keyword\">ALWAYS<\/span> <span class=\"hljs-keyword\">AS<\/span> <span class=\"hljs-keyword\">IDENTITY<\/span>,\n   customer_name <span class=\"hljs-built_in\">VARCHAR<\/span>(<span class=\"hljs-number\">255<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n   PRIMARY <span class=\"hljs-keyword\">KEY<\/span>(customer_id)\n);\n\n<span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> contacts(\n   contact_id <span class=\"hljs-built_in\">INT<\/span> <span class=\"hljs-keyword\">GENERATED<\/span> <span class=\"hljs-keyword\">ALWAYS<\/span> <span class=\"hljs-keyword\">AS<\/span> <span class=\"hljs-keyword\">IDENTITY<\/span>,\n   customer_id <span class=\"hljs-built_in\">INT<\/span>,\n   contact_name <span class=\"hljs-built_in\">VARCHAR<\/span>(<span class=\"hljs-number\">255<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n   phone <span class=\"hljs-built_in\">VARCHAR<\/span>(<span class=\"hljs-number\">15<\/span>),\n   email <span class=\"hljs-built_in\">VARCHAR<\/span>(<span class=\"hljs-number\">100<\/span>),\n   PRIMARY <span class=\"hljs-keyword\">KEY<\/span>(contact_id),\n   <span class=\"hljs-keyword\">CONSTRAINT<\/span> fk_customer\n      <span class=\"hljs-keyword\">FOREIGN<\/span> <span class=\"hljs-keyword\">KEY<\/span>(customer_id) \n\t  <span class=\"hljs-keyword\">REFERENCES<\/span> customers(customer_id)\n\t  <span class=\"hljs-keyword\">ON<\/span> <span class=\"hljs-keyword\">DELETE<\/span> <span class=\"hljs-keyword\">SET<\/span> <span class=\"hljs-literal\">NULL<\/span>\n);\n\n<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> customers(customer_name)\n<span class=\"hljs-keyword\">VALUES<\/span>(<span class=\"hljs-string\">'BlueBird Inc'<\/span>),\n      (<span class=\"hljs-string\">'Dolphin LLC'<\/span>);\t   \n\t   \n<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> contacts(customer_id, contact_name, phone, email)\n<span class=\"hljs-keyword\">VALUES<\/span>(<span class=\"hljs-number\">1<\/span>,<span class=\"hljs-string\">'John Doe'<\/span>,<span class=\"hljs-string\">'(408)-111-1234'<\/span>,<span class=\"hljs-string\">'john.doe@bluebird.dev'<\/span>),\n      (<span class=\"hljs-number\">1<\/span>,<span class=\"hljs-string\">'Jane Doe'<\/span>,<span class=\"hljs-string\">'(408)-111-1235'<\/span>,<span class=\"hljs-string\">'jane.doe@bluebird.dev'<\/span>),\n      (<span class=\"hljs-number\">2<\/span>,<span class=\"hljs-string\">'David Wright'<\/span>,<span class=\"hljs-string\">'(408)-222-1234'<\/span>,<span class=\"hljs-string\">'david.wright@dolphin.dev'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following statements insert data into the <code>customers<\/code> and <code>contacts<\/code> tables:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> customers(customer_name)\n<span class=\"hljs-keyword\">VALUES<\/span>(<span class=\"hljs-string\">'BlueBird Inc'<\/span>),\n      (<span class=\"hljs-string\">'Dolphin LLC'<\/span>);\t   \n\t   \n<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> contacts(customer_id, contact_name, phone, email)\n<span class=\"hljs-keyword\">VALUES<\/span>(<span class=\"hljs-number\">1<\/span>,<span class=\"hljs-string\">'John Doe'<\/span>,<span class=\"hljs-string\">'(408)-111-1234'<\/span>,<span class=\"hljs-string\">'john.doe@bluebird.dev'<\/span>),\n      (<span class=\"hljs-number\">1<\/span>,<span class=\"hljs-string\">'Jane Doe'<\/span>,<span class=\"hljs-string\">'(408)-111-1235'<\/span>,<span class=\"hljs-string\">'jane.doe@bluebird.dev'<\/span>),\n      (<span class=\"hljs-number\">2<\/span>,<span class=\"hljs-string\">'David Wright'<\/span>,<span class=\"hljs-string\">'(408)-222-1234'<\/span>,<span class=\"hljs-string\">'david.wright@dolphin.dev'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To see how the <code>SET NULL<\/code> works, let&#8217;s delete the customer with id 1 from the <code>customers<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">DELETE<\/span> <span class=\"hljs-keyword\">FROM<\/span> customers\n<span class=\"hljs-keyword\">WHERE<\/span> customer_id = <span class=\"hljs-number\">1<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Because of the <code>ON DELETE SET NULL<\/code> action, the referencing rows in the <code>contacts<\/code> table set to NULL. The following statement displays the data in the <code>contacts<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">SELECT * FROM contacts;<\/code><\/div><\/pre>\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"702\" height=\"112\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Foreign-Key-ON-DELETE-SET-NULL-example.png\" alt=\"PostgreSQL Foreign Key - SET NULL\" class=\"wp-image-5068\"\/><\/figure>\n\n\n\n<p>As can be seen clearly from the output, the rows that have the <code>customer_id<\/code> 1 now have the <code>customer_id<\/code> sets to <code>NULL<\/code><\/p>\n\n\n\n<h3>CASCADE<\/h3>\n\n\n\n<p>The <code>ON DELETE CASCADE<\/code> automatically deletes all the referencing rows in the child table when the referenced rows in the parent table are deleted. In practice, the <code>ON DELETE CASCADE<\/code> is the most commonly used option.<\/p>\n\n\n\n<p>The following statements recreate the sample tables. However, the delete action of the <code>fk_customer<\/code> changes to <code>CASCADE<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">TABLE<\/span> <span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">EXISTS<\/span> contacts;\n<span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">TABLE<\/span> <span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">EXISTS<\/span> customers;\n\n<span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> customers(\n   customer_id <span class=\"hljs-built_in\">INT<\/span> <span class=\"hljs-keyword\">GENERATED<\/span> <span class=\"hljs-keyword\">ALWAYS<\/span> <span class=\"hljs-keyword\">AS<\/span> <span class=\"hljs-keyword\">IDENTITY<\/span>,\n   customer_name <span class=\"hljs-built_in\">VARCHAR<\/span>(<span class=\"hljs-number\">255<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n   PRIMARY <span class=\"hljs-keyword\">KEY<\/span>(customer_id)\n);\n\n<span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> contacts(\n   contact_id <span class=\"hljs-built_in\">INT<\/span> <span class=\"hljs-keyword\">GENERATED<\/span> <span class=\"hljs-keyword\">ALWAYS<\/span> <span class=\"hljs-keyword\">AS<\/span> <span class=\"hljs-keyword\">IDENTITY<\/span>,\n   customer_id <span class=\"hljs-built_in\">INT<\/span>,\n   contact_name <span class=\"hljs-built_in\">VARCHAR<\/span>(<span class=\"hljs-number\">255<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n   phone <span class=\"hljs-built_in\">VARCHAR<\/span>(<span class=\"hljs-number\">15<\/span>),\n   email <span class=\"hljs-built_in\">VARCHAR<\/span>(<span class=\"hljs-number\">100<\/span>),\n   PRIMARY <span class=\"hljs-keyword\">KEY<\/span>(contact_id),\n   <span class=\"hljs-keyword\">CONSTRAINT<\/span> fk_customer\n      <span class=\"hljs-keyword\">FOREIGN<\/span> <span class=\"hljs-keyword\">KEY<\/span>(customer_id) \n\t  <span class=\"hljs-keyword\">REFERENCES<\/span> customers(customer_id)\n\t  <span class=\"hljs-keyword\">ON<\/span> <span class=\"hljs-keyword\">DELETE<\/span> <span class=\"hljs-keyword\">CASCADE<\/span>\n);\n\n<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> customers(customer_name)\n<span class=\"hljs-keyword\">VALUES<\/span>(<span class=\"hljs-string\">'BlueBird Inc'<\/span>),\n      (<span class=\"hljs-string\">'Dolphin LLC'<\/span>);\t   \n\t   \n<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> contacts(customer_id, contact_name, phone, email)\n<span class=\"hljs-keyword\">VALUES<\/span>(<span class=\"hljs-number\">1<\/span>,<span class=\"hljs-string\">'John Doe'<\/span>,<span class=\"hljs-string\">'(408)-111-1234'<\/span>,<span class=\"hljs-string\">'john.doe@bluebird.dev'<\/span>),\n      (<span class=\"hljs-number\">1<\/span>,<span class=\"hljs-string\">'Jane Doe'<\/span>,<span class=\"hljs-string\">'(408)-111-1235'<\/span>,<span class=\"hljs-string\">'jane.doe@bluebird.dev'<\/span>),\n      (<span class=\"hljs-number\">2<\/span>,<span class=\"hljs-string\">'David Wright'<\/span>,<span class=\"hljs-string\">'(408)-222-1234'<\/span>,<span class=\"hljs-string\">'david.wright@dolphin.dev'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following statement deletes the customer id 1:<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">DELETE FROM customers\nWHERE customer_id = 1;<\/code><\/div><\/pre>\n\n\n<p>Because of the <code>ON DELETE CASCADE<\/code> action, all the referencing rows in the <code>contacts<\/code> table are automatically deleted:<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">SELECT * FROM contacts;<\/code><\/div><\/pre>\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"698\" height=\"63\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Foreign-Key-ON-DELETE-CASCADE.png\" alt=\"PostgreSQL Foreign Key - ON DELETE CASCADE\" class=\"wp-image-5069\"\/><\/figure>\n\n\n\n<h3>SET DEFAULT<\/h3>\n\n\n\n<p>The <code>ON DELETE SET DEFAULT<\/code> sets the default value to the foreign key column of the referencing rows in the child table when the referenced rows from the parent table are deleted.<\/p>\n\n\n\n<h2>Add a foreign key constraint to an existing table<\/h2>\n\n\n\n<p>To add a foreign key constraint to the existing table, you use the following form of the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-alter-table\/\">ALTER TABLE <\/a>statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">ALTER<\/span> <span class=\"hljs-keyword\">TABLE<\/span> child_table \n<span class=\"hljs-keyword\">ADD<\/span> <span class=\"hljs-keyword\">CONSTRAINT<\/span> constraint_name \n<span class=\"hljs-keyword\">FOREIGN<\/span> <span class=\"hljs-keyword\">KEY<\/span> (fk_columns) \n<span class=\"hljs-keyword\">REFERENCES<\/span> parent_table (parent_key_columns);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>When you add a foreign key constraint with <code>ON DELETE CASCADE<\/code> option to an existing table, you need to follow these steps:<\/p>\n\n\n\n<p>First, drop existing foreign key constraints:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">ALTER<\/span> <span class=\"hljs-keyword\">TABLE<\/span> child_table\n<span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">CONSTRAINT<\/span> constraint_fkey;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>First, add a new foreign key constraint with &nbsp;<code>ON DELETE CASCADE<\/code>&nbsp;action:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">ALTER<\/span> <span class=\"hljs-keyword\">TABLE<\/span> child_table\n<span class=\"hljs-keyword\">ADD<\/span> <span class=\"hljs-keyword\">CONSTRAINT<\/span> constraint_fk\n<span class=\"hljs-keyword\">FOREIGN<\/span> <span class=\"hljs-keyword\">KEY<\/span> (fk_columns)\n<span class=\"hljs-keyword\">REFERENCES<\/span> parent_table(parent_key_columns)\n<span class=\"hljs-keyword\">ON<\/span> <span class=\"hljs-keyword\">DELETE<\/span> <span class=\"hljs-keyword\">CASCADE<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned about PostgreSQL foreign keys and how to use the foreign key constraint to create foreign keys for a table.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1200\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-foreign-key\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Foreign Key\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1200\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-foreign-key\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Foreign Key\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>in this tutorial, you will learn about PostgreSQL foreign key and how to add foreign keys to tables using foreign key constraints.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":63,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL Foreign Key<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn about PostgreSQL foreign key and how to add foreign keys to tables using foreign key constraints.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"7 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Foreign-Key-ON-DELETE-SET-NULL-example.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Foreign-Key-ON-DELETE-SET-NULL-example.png\",\"width\":702,\"height\":112},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/\",\"name\":\"PostgreSQL Foreign Key\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/#primaryimage\"},\"datePublished\":\"2015-08-31T03:49:23+00:00\",\"dateModified\":\"2020-10-20T15:14:39+00:00\",\"description\":\"In this tutorial, you will learn about PostgreSQL foreign key and how to add foreign keys to tables using foreign key constraints.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL Foreign Key\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL Foreign Key","description":"In this tutorial, you will learn about PostgreSQL foreign key and how to add foreign keys to tables using foreign key constraints.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/","twitter_misc":{"Est. reading time":"7 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Foreign-Key-ON-DELETE-SET-NULL-example.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Foreign-Key-ON-DELETE-SET-NULL-example.png","width":702,"height":112},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/","name":"PostgreSQL Foreign Key","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/#primaryimage"},"datePublished":"2015-08-31T03:49:23+00:00","dateModified":"2020-10-20T15:14:39+00:00","description":"In this tutorial, you will learn about PostgreSQL foreign key and how to add foreign keys to tables using foreign key constraints.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL Foreign Key"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1200"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=1200"}],"version-history":[{"count":5,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1200\/revisions"}],"predecessor-version":[{"id":5928,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1200\/revisions\/5928"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=1200"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}