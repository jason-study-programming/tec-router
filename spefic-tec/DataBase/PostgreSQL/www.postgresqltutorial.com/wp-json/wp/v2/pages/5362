{"id":5362,"date":"2020-07-21T23:12:17","date_gmt":"2020-07-22T06:12:17","guid":{"rendered":"https:\/\/www.postgresqltutorial.com\/?page_id=5362"},"modified":"2020-08-05T17:24:28","modified_gmt":"2020-08-06T00:24:28","slug":"dollar-quoted-string-constants","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/dollar-quoted-string-constants\/","title":{"rendered":"Dollar-Quoted String Constants"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the dollar-quoted string constants (<code>$$<\/code>) in user-defined functions and stored procedures.<\/p>\n\n\n\n<h2>Introduction the dollar-quoted string constant syntax<\/h2>\n\n\n\n<p>In PostgreSQL, you use single quotes for a string constant like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">select<\/span> <span class=\"hljs-string\">'String constant'<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>When a string constant contains a single quote (<code>'<\/code>), you need to escape it by doubling up the single quote. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">select<\/span> <span class=\"hljs-string\">'I''m also a string constant'<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you use an old version of PostgreSQL, you can prepend the string constant with <code>E<\/code> to declare the postfix escape string syntax and use the backslash <code>\\<\/code> to escape the single quote like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">select<\/span> <span class=\"hljs-string\">E'I\\'m also a string constant'<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If a string constant contains a backslash, you need to escape it by using another backslash.<\/p>\n\n\n\n<p>The problem arises when the string constant contains many single quotes and backslashes. Doubling every single quote and backslash makes the string constant more difficult to read and maintain.<\/p>\n\n\n\n<p>PostgreSQL version 8.0 introduced the dollar quoting feature to make string constants more readable.<\/p>\n\n\n\n<p>The following shows the syntax of the dollar-quoted string constants:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\">$tag$<span class=\"perl\">&lt;string_constant&gt;$tag$<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax, the <code>tag<\/code> is optional. It may contain zero or many characters. <\/p>\n\n\n\n<p>Between the <code>$tag$<\/code>, you can place any string with single quotes (<code>'<\/code>) and backslashes (<code>\\<\/code>). For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">select<\/span> $$<span class=\"tcl\">I'm a <span class=\"hljs-keyword\">string<\/span> constant that contains a backslash \\$$<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we did not specify the <code>tag<\/code> between the two dollar signs(<code>$<\/code>). <\/p>\n\n\n\n<p>The following example uses the dollar-quoted string constant syntax with a tag:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">SELECT<\/span> $message$I<span class=\"hljs-string\">'m a string constant that contains a backslash \\$message$;<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we used the string <code>message<\/code> as a tag between the two dollar signs (<code>$<\/code> )<\/p>\n\n\n\n<h2>Using dollar-quoted string constant in anonymous blocks<\/h2>\n\n\n\n<p>The following shows the anonymous block in PL\/pgSQL:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><div><code class=\"hljs language-php\"><span class=\"hljs-keyword\">do<\/span> \n<span class=\"hljs-string\">'declare\n   film_count integer;\nbegin \n   select count(*) into film_count\n   from film;\n   raise notice '<\/span><span class=\"hljs-string\">'The number of films: %'<\/span><span class=\"hljs-string\">', film_count;\nend;'<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p class=\"note\">Note that you will learn about the anonymous block in the <a href=\"https:\/\/www.postgresqltutorial.com\/plpgsql-block-structure\/\">PL\/pgSQL block structure<\/a> tutorial. In this tutorial, you can copy and paste the code in any PostgreSQL client tool like pgAdmin or psql to execute it.<\/p>\n\n\n\n<p>The code in the block must be surrounded by single quotes. If it has any single quote, you need to escape it by doubling it like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\"> raise notice <span class=\"hljs-string\">''<\/span>The number <span class=\"hljs-keyword\">of<\/span> films: %<span class=\"hljs-string\">''<\/span>, film_count;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To avoid escaping every single quotes and backslashes, you can use the dollar-quoted string as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">do<\/span> \n$$\ndeclare\n   film_count integer;\nbegin \n   select count(*) into film_count\n   <span class=\"hljs-keyword\">from<\/span> film;\n   raise notice <span class=\"hljs-string\">'The number of films: %'<\/span>, film_count;\nend;\n$$<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, you don&#8217;t need to escape the single quotes and backslashes.<\/p>\n\n\n\n<h2>Using dollar-quoted string constants in functions<\/h2>\n\n\n\n<p>The following shows the syntax of the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-function\/\">CREATE FUNCTION<\/a><\/code> statement that allows you to create a user-defined function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">create<\/span> <span class=\"hljs-keyword\">function<\/span> function_name(param_list) \n    <span class=\"hljs-keyword\">returns<\/span> datatype\n<span class=\"hljs-keyword\">language<\/span> lang_name\n<span class=\"hljs-keyword\">as<\/span> \n <span class=\"hljs-string\">'function_body'<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Note that you will learn more about the syntax of <code>CREATE FUNCTION<\/code> statement in the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-function\/\">creating function tutorial<\/a>.<\/p>\n\n\n\n<p>In this syntax, the <code>function_body<\/code> is a string constant.  For example, the following function finds a film by its id:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">create<\/span> <span class=\"hljs-keyword\">function<\/span> find_film_by_id(\n   id <span class=\"hljs-type\">int<\/span>\n) <span class=\"hljs-keyword\">returns<\/span> film \n<span class=\"hljs-keyword\">language<\/span> <span class=\"hljs-keyword\">sql<\/span>\n<span class=\"hljs-keyword\">as<\/span> \n  <span class=\"hljs-string\">'select * from film \n   where film_id = id'<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>As you can see, the body of the <code>find_film_by_id()<\/code> function is surrounded by single quotes.<\/p>\n\n\n\n<p>If the function has many statements, it becomes more difficult to read. In this case, you can use dollar-quoted string constant syntax:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">create<\/span> <span class=\"hljs-keyword\">function<\/span> find_film_by_id(\n   id <span class=\"hljs-type\">int<\/span>\n) <span class=\"hljs-keyword\">returns<\/span> film \n<span class=\"hljs-keyword\">language<\/span> <span class=\"hljs-keyword\">sql<\/span>\n<span class=\"hljs-keyword\">as<\/span> \n$$<span class=\"pgsql\">\n  <span class=\"hljs-keyword\">select<\/span> * <span class=\"hljs-keyword\">from<\/span> film \n  <span class=\"hljs-keyword\">where<\/span> film_id = id;  \n$$<\/span>; <\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Now, you can place any piece of code between the <code>$$<\/code> and <code>$$<\/code> without using single quotes or backslashes to escape single quotes and backslashes.<\/p>\n\n\n\n<h2>Using dollar-quoted string constants in stored procedures<\/h2>\n\n\n\n<p>Similarly, you can use the dollar-quoted string constant syntax in <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-procedure\/\">stored procedures<\/a> like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">create<\/span> <span class=\"hljs-keyword\">procedure<\/span> proc_name(param_list)\n<span class=\"hljs-keyword\">language<\/span> lang_name\n<span class=\"hljs-keyword\">as<\/span> $$<span class=\"pgsql\">\n  <span class=\"hljs-comment\">-- stored procedure body<\/span>\n$$<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use quoted-dollar string constants to avoid escaping single quotes or backslashes.<\/li><li>Always use quoted-dollar string constants in user-defined functions and stored procedures to make the code more readable.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"5362\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/dollar-quoted-string-constants\/\"\n\t\t\t\tdata-post-title=\"Dollar-Quoted String Constants\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"5362\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/dollar-quoted-string-constants\/\"\n\t\t\t\tdata-post-title=\"Dollar-Quoted String Constants\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the dollar-quoted string constants ($$) in user-defined functions and stored procedures.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":788,"menu_order":1,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL Dollar-quoted String Constants<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to use the dollar-quoted string constants ($$) in user-defined functions and stored procedures.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/dollar-quoted-string-constants\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/dollar-quoted-string-constants\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/dollar-quoted-string-constants\/\",\"name\":\"PostgreSQL Dollar-quoted String Constants\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"datePublished\":\"2020-07-22T06:12:17+00:00\",\"dateModified\":\"2020-08-06T00:24:28+00:00\",\"description\":\"In this tutorial, you will learn how to use the dollar-quoted string constants ($$) in user-defined functions and stored procedures.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/dollar-quoted-string-constants\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/dollar-quoted-string-constants\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/dollar-quoted-string-constants\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL PL\/pgSQL\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Dollar-Quoted String Constants\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL Dollar-quoted String Constants","description":"In this tutorial, you will learn how to use the dollar-quoted string constants ($$) in user-defined functions and stored procedures.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/dollar-quoted-string-constants\/","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/dollar-quoted-string-constants\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/dollar-quoted-string-constants\/","name":"PostgreSQL Dollar-quoted String Constants","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"datePublished":"2020-07-22T06:12:17+00:00","dateModified":"2020-08-06T00:24:28+00:00","description":"In this tutorial, you will learn how to use the dollar-quoted string constants ($$) in user-defined functions and stored procedures.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/dollar-quoted-string-constants\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/dollar-quoted-string-constants\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/dollar-quoted-string-constants\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL PL\/pgSQL","item":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/"},{"@type":"ListItem","position":3,"name":"Dollar-Quoted String Constants"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5362"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=5362"}],"version-history":[{"count":5,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5362\/revisions"}],"predecessor-version":[{"id":5870,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5362\/revisions\/5870"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/788"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=5362"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}