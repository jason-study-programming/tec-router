{"id":1209,"date":"2015-08-30T22:05:07","date_gmt":"2015-08-31T05:05:07","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=1209"},"modified":"2020-07-19T02:50:59","modified_gmt":"2020-07-19T09:50:59","slug":"postgresql-check-constraint","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-check-constraint\/","title":{"rendered":"PostgreSQL CHECK Constraint"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about the PostgreSQL <code>CHECK<\/code> constraints and how to use them to constrain values in columns of a table based on a boolean expression.<\/p>\n\n\n\n<p>A <code>CHECK<\/code> constraint is a kind of constraint that allows you to specify if values in a column must meet a specific requirement. <\/p>\n\n\n\n<p>The <code>CHECK<\/code> constraint uses a Boolean expression to evaluate the values before they are inserted or updated to the column. <\/p>\n\n\n\n<p>If the values pass the check, PostgreSQL will <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-insert\/\">insert<\/a> or <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-update\/\">update<\/a> these values to the column. Otherwise, PostgreSQL will reject the changes and issue a constraint violation error.<\/p>\n\n\n\n<h2>Define PostgreSQL&nbsp;CHECK constraint for new tables<\/h2>\n\n\n\n<p>Typically, you use the <code>CHECK<\/code> constraint at the time of creating the table using the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-table\/\">CREATE TABLE<\/a><\/code> statement. <\/p>\n\n\n\n<p>The following statement defines an <code>employees<\/code> table.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">TABLE<\/span> <span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">EXISTS<\/span> employees;\n<span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> employees (\n\t<span class=\"hljs-keyword\">id<\/span> <span class=\"hljs-built_in\">SERIAL<\/span> PRIMARY <span class=\"hljs-keyword\">KEY<\/span>,\n\tfirst_name <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">50<\/span>),\n\tlast_name <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">50<\/span>),\n\tbirth_date <span class=\"hljs-built_in\">DATE<\/span> <span class=\"hljs-keyword\">CHECK<\/span> (birth_date &gt; <span class=\"hljs-string\">'1900-01-01'<\/span>),\n\tjoined_date <span class=\"hljs-built_in\">DATE<\/span> <span class=\"hljs-keyword\">CHECK<\/span> (joined_date &gt; birth_date),\n\tsalary <span class=\"hljs-built_in\">numeric<\/span> <span class=\"hljs-keyword\">CHECK<\/span>(salary &gt; <span class=\"hljs-number\">0<\/span>)\n);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The &nbsp;<code>employees<\/code> table has three <code>CHECK<\/code> constraints:<\/p>\n\n\n\n<ul><li>First, the birth date ( <code>birth_date<\/code>) of the employee must be greater than <code>01\/01\/1900<\/code>. If you try to insert a birth date before <code>01\/01\/1900<\/code>, you will receive an error message.<\/li><li>Second, the joined date ( <code>joined_date<\/code>) must be greater&nbsp;than the birth date ( <code>birth_date<\/code>). This check will prevent from updating invalid dates in terms of their semantic meanings.<\/li><li>Third, the salary must be greater than zero, which is obvious.<\/li><\/ul>\n\n\n\n<p>Let&#8217;s try to <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-insert\/\">insert<\/a> a new row into the <code>employees<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> employees (first_name, last_name, birth_date, joined_date, salary)\n<span class=\"hljs-keyword\">VALUES<\/span> (<span class=\"hljs-string\">'John'<\/span>, <span class=\"hljs-string\">'Doe'<\/span>, <span class=\"hljs-string\">'1972-01-01'<\/span>, <span class=\"hljs-string\">'2015-07-01'<\/span>, - <span class=\"hljs-number\">100000<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The statement attempted to insert a negative salary into the <code>salary<\/code> column. However, PostgreSQL returned the following error message:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">[Err] ERROR:  new row for relation \"employees\" violates check constraint \"employees_salary_check\"\nDETAIL:  Failing row contains (1, John, Doe, 1972-01-01, 2015-07-01, -100000).<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The insert failed because of the <code>CHECK<\/code> constraint on the <code>salary<\/code> column that accepts only positive values.<\/p>\n\n\n\n<p>By default, PostgreSQL gives the <code>CHECK<\/code> constraint a name using the following pattern:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">{table}_{column}_check<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>For example, the constraint on the salary column has the following constraint name:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">employees_salary_check<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, if you want to assign a<code>CHECK<\/code> constraint a specific name, you can specify it after the <code>CONSTRAINT<\/code> expression as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">column_name data_type CONSTRAINT constraint_name <span class=\"hljs-keyword\">CHECK<\/span>(...)\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>See the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">...\nsalary numeric CONSTRAINT positive_salary <span class=\"hljs-keyword\">CHECK<\/span>(salary &gt; <span class=\"hljs-number\">0<\/span>)\n...<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Define PostgreSQL CHECK constraints for existing tables<\/h2>\n\n\n\n<p>To add <code>CHECK<\/code> constraints to existing tables, you use the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-alter-table\/\">ALTER TABLE<\/a><\/code> statement. Suppose, you have an existing table in the database named<span style=\"font-family: monospace;\">&nbsp;prices_list<\/span><\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> prices_list (\n\t<span class=\"hljs-keyword\">id<\/span> <span class=\"hljs-built_in\">serial<\/span> PRIMARY <span class=\"hljs-keyword\">KEY<\/span>,\n\tproduct_id <span class=\"hljs-built_in\">INT<\/span> <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n\tprice <span class=\"hljs-built_in\">NUMERIC<\/span> <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n\tdiscount <span class=\"hljs-built_in\">NUMERIC<\/span> <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n\tvalid_from <span class=\"hljs-built_in\">DATE<\/span> <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n\tvalid_to <span class=\"hljs-built_in\">DATE<\/span> <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>\n);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Now,&nbsp;you can use <code>ALTER TABLE<\/code> statement to add the <code>CHECK<\/code> constraints to the <code>prices_list<\/code> table. The price and discount must be greater than zero and the discount is less than the price. Notice that we use a Boolean expression that contains the&nbsp;<code>AND<\/code> operators.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">ALTER<\/span> <span class=\"hljs-keyword\">TABLE<\/span> prices_list \n<span class=\"hljs-keyword\">ADD<\/span> <span class=\"hljs-keyword\">CONSTRAINT<\/span> price_discount_check \n<span class=\"hljs-keyword\">CHECK<\/span> (\n\tprice &gt; <span class=\"hljs-number\">0<\/span>\n\t<span class=\"hljs-keyword\">AND<\/span> discount &gt;= <span class=\"hljs-number\">0<\/span>\n\t<span class=\"hljs-keyword\">AND<\/span> price &gt; discount\n);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The valid to date ( <code>valid_to<\/code>) must be greater than or equal to valid from date ( <code>valid_from<\/code>).<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">ALTER<\/span> <span class=\"hljs-keyword\">TABLE<\/span> prices_list \n<span class=\"hljs-keyword\">ADD<\/span> <span class=\"hljs-keyword\">CONSTRAINT<\/span> valid_range_check \n<span class=\"hljs-keyword\">CHECK<\/span> (valid_to &gt;= valid_from);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>CHECK<\/code> constraints are very useful to place additional logic to restrict values that the columns can accept at the database layer. By using the <code>CHECK<\/code> constraint,&nbsp;you can make sure that data is updated to the database correctly.<\/p>\n\n\n\n<p>In this tutorial, you have learned how to use PostgreSQL <code>CHECK<\/code> constraint to check the values of columns based on a Boolean expression.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1209\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-check-constraint\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL CHECK Constraint\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1209\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-check-constraint\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL CHECK Constraint\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>This tutorial introduces you to the CHECK constraint that constrains the value of columns in the table based on a Boolean expression.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":64,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL CHECK Constraint<\/title>\n<meta name=\"description\" content=\"In this tutorial, we will introduce you to PostgreSQL CHECK constraint to constrain the value of columns in a table based on a Boolean expression.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-check-constraint\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-check-constraint\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-check-constraint\/\",\"name\":\"PostgreSQL CHECK Constraint\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"datePublished\":\"2015-08-31T05:05:07+00:00\",\"dateModified\":\"2020-07-19T09:50:59+00:00\",\"description\":\"In this tutorial, we will introduce you to PostgreSQL CHECK constraint to constrain the value of columns in a table based on a Boolean expression.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-check-constraint\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-check-constraint\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-check-constraint\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL CHECK Constraint\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL CHECK Constraint","description":"In this tutorial, we will introduce you to PostgreSQL CHECK constraint to constrain the value of columns in a table based on a Boolean expression.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-check-constraint\/","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-check-constraint\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-check-constraint\/","name":"PostgreSQL CHECK Constraint","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"datePublished":"2015-08-31T05:05:07+00:00","dateModified":"2020-07-19T09:50:59+00:00","description":"In this tutorial, we will introduce you to PostgreSQL CHECK constraint to constrain the value of columns in a table based on a Boolean expression.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-check-constraint\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-check-constraint\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-check-constraint\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL CHECK Constraint"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1209"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=1209"}],"version-history":[{"count":5,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1209\/revisions"}],"predecessor-version":[{"id":5172,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1209\/revisions\/5172"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=1209"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}