{"id":2453,"date":"2017-02-18T06:37:24","date_gmt":"2017-02-18T13:37:24","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=2453"},"modified":"2020-07-21T02:08:14","modified_gmt":"2020-07-21T09:08:14","slug":"postgresql-integer","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-integer\/","title":{"rendered":"A Look At Various PostgreSQL Integer Data Types"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: this tutorial introduces you to various PostgreSQL integer types including <code>SMALLINT<\/code>, <code>INTEGER<\/code>, and <code>BIGINT<\/code>.<\/p>\n\n\n\n<h2>Introduction to PostgreSQL integer types<\/h2>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"alignright\"><img loading=\"lazy\" width=\"300\" height=\"59\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/02\/postgresql-integer-300x59.png\" alt=\"postgresql integer\" class=\"wp-image-2456\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/02\/postgresql-integer-300x59.png 300w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/02\/postgresql-integer.png 595w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/figure><\/div>\n\n\n\n<p>To store the whole numbers in PostgreSQL, you use one of the following integer types: <code>SMALLINT<\/code>, <code>INTEGER<\/code>, and <code>BIGINT<\/code>.<\/p>\n\n\n\n<p>The following table illustrates the specification of each integer type:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th>Name<\/th><th>Storage Size<\/th><th>Min<\/th><th>Max<\/th><\/tr><\/thead><tbody><tr><td>&nbsp;<code>SMALLINT<\/code><\/td><td>2 bytes<\/td><td>-32,768<\/td><td>+32,767<\/td><\/tr><tr><td>&nbsp;<code>INTEGER<\/code><\/td><td>4 bytes<\/td><td>-2,147,483,648<\/td><td>+2,147,483,647<\/td><\/tr><tr><td>&nbsp;<code>BIGINT<\/code><\/td><td>8 bytes<\/td><td>-9,223,372,036,854,775,808<\/td><td>+9,223,372,036,854,775,807<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p>If you try to store a value outside of the permitted range, PostgreSQL will issue an error.<\/p>\n\n\n\n<p>Unlike <a href=\"http:\/\/www.mysqltutorial.org\/mysql-int\/\">MySQL integer<\/a>, PostgreSQL does not provide unsigned integer types.<\/p>\n\n\n\n<h3>SMALLINT<\/h3>\n\n\n\n<p>The <code>SMALLINT<\/code> requires 2 bytes storage size which can store any integer numbers that is in the range of (-32,767, 32,767).<\/p>\n\n\n\n<p>You can use the <code>SMALLINT<\/code> type for storing something like ages of people, the number of pages of a book, etc.<\/p>\n\n\n\n<p>The following statement <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-table\/\">creates a table<\/a> named <code>books<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> books (\n    book_id <span class=\"hljs-built_in\">SERIAL<\/span> PRIMARY <span class=\"hljs-keyword\">KEY<\/span>,\n    title <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">255<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n    pages <span class=\"hljs-built_in\">SMALLINT<\/span> <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span> <span class=\"hljs-keyword\">CHECK<\/span> (pages &gt; <span class=\"hljs-number\">0<\/span>)\n);\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>pages<\/code> column is a <code>SMALLINT<\/code> column. Because the number of pages of a book must be positive, we added a <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-check-constraint\/\"><code>CHECK<\/code><\/a> constraint to enforce this rule.<\/p>\n\n\n\n<h3>INTEGER<\/h3>\n\n\n\n<p>The <code>INTEGER<\/code> is the most common choice between integer types because it offers the best balance between storage size, range, and performance.<\/p>\n\n\n\n<p>The <code>INTEGER<\/code> type requires 4 bytes storage size that can store numbers in the range of (-2,147,483,648, 2,147,483,647).<\/p>\n\n\n\n<p>You can use the <code>INTEGER<\/code> type for a column that stores quite big whole numbers like the population of a city or even country as the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> cities (\n    city_id <span class=\"hljs-built_in\">serial<\/span> PRIMARY <span class=\"hljs-keyword\">KEY<\/span>,\n    city_name <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">255<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n    population <span class=\"hljs-built_in\">INT<\/span> <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span> <span class=\"hljs-keyword\">CHECK<\/span> (population &gt;= <span class=\"hljs-number\">0<\/span>)\n);\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Notice that <code>INT<\/code> is the synonym of <code>INTEGER<\/code>.<\/p>\n\n\n\n<h3>BIGINT<\/h3>\n\n\n\n<p>In case you want to store the whole numbers that are out of the range of the <code>INTEGER<\/code> type, you can use the <code>BIGINT<\/code> type.<\/p>\n\n\n\n<p>The <code>BIGINT<\/code> type requires 8 bytes storage size that can store any number in the range of (-9,223,372,036,854,775,808,+9,223,372,036,854,775,807).<\/p>\n\n\n\n<p>Using <code>BIGINT<\/code> type is not only consuming&nbsp;a lot of storage but also decreasing the performance of the database, therefore, you should have a good reason to use it.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2453\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-integer\/\"\n\t\t\t\tdata-post-title=\"A Look At Various PostgreSQL Integer Data Types\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2453\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-integer\/\"\n\t\t\t\tdata-post-title=\"A Look At Various PostgreSQL Integer Data Types\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>This tutorial introduces you to various PostgreSQL integer types including SMALLINT, INTEGER, and BIGINT.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":70,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>A Look At Various PostgreSQL Integer Data Types<\/title>\n<meta name=\"description\" content=\"This tutorial introduces you to various PostgreSQL integer data types including SMALLINT, INTEGER, and BIGINT for designing tables.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/02\/postgresql-integer.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/02\/postgresql-integer.png\",\"width\":595,\"height\":117},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/\",\"name\":\"A Look At Various PostgreSQL Integer Data Types\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/#primaryimage\"},\"datePublished\":\"2017-02-18T13:37:24+00:00\",\"dateModified\":\"2020-07-21T09:08:14+00:00\",\"description\":\"This tutorial introduces you to various PostgreSQL integer data types including SMALLINT, INTEGER, and BIGINT for designing tables.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"A Look At Various PostgreSQL Integer Data Types\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"A Look At Various PostgreSQL Integer Data Types","description":"This tutorial introduces you to various PostgreSQL integer data types including SMALLINT, INTEGER, and BIGINT for designing tables.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/","twitter_misc":{"Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/02\/postgresql-integer.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/02\/postgresql-integer.png","width":595,"height":117},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/","name":"A Look At Various PostgreSQL Integer Data Types","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/#primaryimage"},"datePublished":"2017-02-18T13:37:24+00:00","dateModified":"2020-07-21T09:08:14+00:00","description":"This tutorial introduces you to various PostgreSQL integer data types including SMALLINT, INTEGER, and BIGINT for designing tables.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-integer\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"A Look At Various PostgreSQL Integer Data Types"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2453"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=2453"}],"version-history":[{"count":2,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2453\/revisions"}],"predecessor-version":[{"id":5334,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2453\/revisions\/5334"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=2453"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}