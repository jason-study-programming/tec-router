{"id":4226,"date":"2019-05-17T03:06:48","date_gmt":"2019-05-17T10:06:48","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=4226"},"modified":"2021-03-13T18:02:13","modified_gmt":"2021-03-14T01:02:13","slug":"postgresql-sequences","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-sequences\/","title":{"rendered":"PostgreSQL Sequences"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about the PostgreSQL sequences and how to use a sequence object to generate a sequence of numbers.<\/p>\n\n\n\n<p>By definition, a sequence is an ordered list of integers. The orders of numbers in the sequence are important. For example, <code>{1,2,3,4,5}<\/code> and <code>{5,4,3,2,1}<\/code> are entirely different sequences.<\/p>\n\n\n\n<p>A sequence in PostgreSQL is a user-defined schema-bound object that generates a sequence of integers based on a specified specification.<\/p>\n\n\n\n<p>To create a sequence in PostgreSQL, you use the <code>CREATE SEQUENCE<\/code> statement.<\/p>\n\n\n\n<h2>Introduction to PostgreSQL <code>CREATE SEQUENCE<\/code> statement<\/h2>\n\n\n\n<p>The following illustrates the syntax of the <code>CREATE SEQUENCE<\/code> statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">SEQUENCE<\/span> [ <span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-keyword\">EXISTS<\/span> ] sequence_name\n    [ <span class=\"hljs-keyword\">AS<\/span> { <span class=\"hljs-built_in\">SMALLINT<\/span> | <span class=\"hljs-built_in\">INT<\/span> | <span class=\"hljs-built_in\">BIGINT<\/span> } ]\n    [ <span class=\"hljs-keyword\">INCREMENT<\/span> [ <span class=\"hljs-keyword\">BY<\/span> ] <span class=\"hljs-keyword\">increment<\/span> ]\n    [ <span class=\"hljs-keyword\">MINVALUE<\/span> <span class=\"hljs-keyword\">minvalue<\/span> | <span class=\"hljs-keyword\">NO<\/span> <span class=\"hljs-keyword\">MINVALUE<\/span> ] \n    [ MAXVALUE maxvalue | <span class=\"hljs-keyword\">NO<\/span> MAXVALUE ]\n    [ <span class=\"hljs-keyword\">START<\/span> [ <span class=\"hljs-keyword\">WITH<\/span> ] <span class=\"hljs-keyword\">start<\/span> ] \n    [ <span class=\"hljs-keyword\">CACHE<\/span> <span class=\"hljs-keyword\">cache<\/span> ] \n    [ [ <span class=\"hljs-keyword\">NO<\/span> ] <span class=\"hljs-keyword\">CYCLE<\/span> ]\n    [ OWNED <span class=\"hljs-keyword\">BY<\/span> { table_name.column_name | <span class=\"hljs-keyword\">NONE<\/span> } ]<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>sequence_name<\/h3>\n\n\n\n<p>Specify the name of the sequence after the <code>CREATE SEQUENCE<\/code> clause. The <code>IF NOT EXISTS<\/code> conditionally creates a new sequence only if it does not exist.<\/p>\n\n\n\n<p>The sequence name must be distinct from any other sequences, tables, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-indexes\/\">indexes<\/a>, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/\">views<\/a>, or foreign tables in the same schema.<\/p>\n\n\n\n<h3>[ AS { SMALLINT | INT | BIGINT } ]<\/h3>\n\n\n\n<p>Specify the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/\">data type<\/a> of the sequence. The valid data type is <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/\">SMALLINT<\/a><\/code>, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-interval\/\"><code>INT<\/code><\/a>, and <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-integer\/\">BIGINT<\/a><\/code>. The default data type is <code>BIGINT<\/code> if you skip it.<\/p>\n\n\n\n<p>The data type of the sequence which determines the sequence&#8217;s minimum and maximum values.<\/p>\n\n\n\n<h3>[ INCREMENT [ BY ] increment ]<\/h3>\n\n\n\n<p>The <code>increment<\/code> specifies which value to be added to the current sequence value to create new value.<\/p>\n\n\n\n<p>A positive number will make an ascending sequence while a negative number will form a descending sequence.<\/p>\n\n\n\n<p>The default increment value is 1.<\/p>\n\n\n\n<h3>[ MINVALUE minvalue | NO MINVALUE ]<\/h3>\n\n\n\n<h3>[ MAXVALUE maxvalue | NO MAXVALUE ]<\/h3>\n\n\n\n<p>Define the minimum value and maximum value of the sequence. If you use <code>NO MINVALUE<\/code>and <code>NO MAXVALUE<\/code>, the sequence will use the default value.<\/p>\n\n\n\n<p>For an ascending sequence, the default maximum value is the maximum value of the data type of the sequence and the default minimum value is 1.<\/p>\n\n\n\n<p>In case of a descending sequence, the default maximum value is -1 and the default minimum value is the minimum value of the data type of the sequence.<\/p>\n\n\n\n<h3>[ START [ WITH ] start ]<\/h3>\n\n\n\n<p>The <code>START<\/code> clause specifies the starting value of the sequence.<\/p>\n\n\n\n<p>The default starting value is <code>minvalue<\/code> for ascending sequences and <code>maxvalue<\/code> for descending ones.<\/p>\n\n\n\n<h3>cache<\/h3>\n\n\n\n<p>The <code>CACHE<\/code> determines how many sequence numbers are preallocated and stored in memory for faster access. One value can be generated at a time.<\/p>\n\n\n\n<p>By default, the sequence generates one value at a time i.e., no cache.<\/p>\n\n\n\n<h3>CYCLE | NO CYCLE<\/h3>\n\n\n\n<p>The <code>CYCLE<\/code> allows you to restart the value if the limit is reached. The next number will be the minimum value for the ascending sequence and maximum value for the descending sequence.<\/p>\n\n\n\n<p>If you use <code>NO CYCLE<\/code>, when the limit is reached, attempting to get the next value will result in an error.<\/p>\n\n\n\n<p>The <code>NO CYCLE<\/code> is the default if you don&#8217;t explicitly specify <code>CYCLE<\/code> or <code>NO CYCLE<\/code>.<\/p>\n\n\n\n<h3>OWNED BY table_name.column_name<\/h3>\n\n\n\n<p>The <code>OWNED BY<\/code> clause allows you to associate the table column with the sequence so that when you drop the column or table, PostgreSQL will automatically drop the associated sequence.<\/p>\n\n\n\n<p>Note that when you use the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-serial\/\">SERIAL<\/a><\/code> pseudo-type for a column of a table, behind the scenes, PostgreSQL automatically creates a sequence associated with the column.<\/p>\n\n\n\n<h2>PostgreSQL CREATE SEQUENCE examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of creating sequences to get a better understanding.<\/p>\n\n\n\n<h3>1) Creating an ascending sequence example<\/h3>\n\n\n\n<p>This statement uses the <code>CREATE SEQUENCE<\/code> statement to create a new ascending sequence starting from 100 with an increment of 5:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">SEQUENCE<\/span> mysequence\n<span class=\"hljs-keyword\">INCREMENT<\/span> <span class=\"hljs-number\">5<\/span>\n<span class=\"hljs-keyword\">START<\/span> <span class=\"hljs-number\">100<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To get the next value from the sequence to you use the <code>nextval()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> <span class=\"hljs-keyword\">nextval<\/span>(<span class=\"hljs-string\">'mysequence'<\/span>);\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"98\" height=\"66\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-Sequence-simple-example.png\" alt=\"PostgreSQL Sequence - simple example\" class=\"wp-image-4228\"\/><\/figure>\n\n\n\n<p>If you execute the statement again, you will get the next value from the sequence:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> <span class=\"hljs-keyword\">nextval<\/span>(<span class=\"hljs-string\">'mysequence'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"92\" height=\"66\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-Sequence-nextval-example.png\" alt=\"PostgreSQL Sequence - nextval example\" class=\"wp-image-4229\"\/><\/figure>\n\n\n\n<h3>2) Creating a descending sequence example<\/h3>\n\n\n\n<p>The following statement creates a descending sequence from 3 to 1 with the cycle option:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">SEQUENCE<\/span> three\n<span class=\"hljs-keyword\">INCREMENT<\/span> <span class=\"hljs-number\">-1<\/span>\n<span class=\"hljs-keyword\">MINVALUE<\/span> <span class=\"hljs-number\">1<\/span> \nMAXVALUE <span class=\"hljs-number\">3<\/span>\n<span class=\"hljs-keyword\">START<\/span> <span class=\"hljs-number\">3<\/span>\n<span class=\"hljs-keyword\">CYCLE<\/span>;\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>When you execute the following statement multiple times, you will see the number starting from 3, 2, 1 and back to 3, 2, 1 and so on:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> <span class=\"hljs-keyword\">nextval<\/span>(<span class=\"hljs-string\">'three'<\/span>);\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>3) Creating a sequence associated with a table column<\/h3>\n\n\n\n<p>First, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-table\/\">create a new table<\/a> named <code>order_details<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> order_details(\n    order_id <span class=\"hljs-built_in\">SERIAL<\/span>,\n    item_id <span class=\"hljs-built_in\">INT<\/span> <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n    item_text <span class=\"hljs-built_in\">VARCHAR<\/span> <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n    price <span class=\"hljs-built_in\">DEC<\/span>(<span class=\"hljs-number\">10<\/span>,<span class=\"hljs-number\">2<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n    PRIMARY <span class=\"hljs-keyword\">KEY<\/span>(order_id, item_id)\n);\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, create a new sequence associated with the <code>item_id<\/code> column of the <code>order_details<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">SEQUENCE<\/span> order_item_id\n<span class=\"hljs-keyword\">START<\/span> <span class=\"hljs-number\">10<\/span>\n<span class=\"hljs-keyword\">INCREMENT<\/span> <span class=\"hljs-number\">10<\/span>\n<span class=\"hljs-keyword\">MINVALUE<\/span> <span class=\"hljs-number\">10<\/span>\nOWNED <span class=\"hljs-keyword\">BY<\/span> order_details.item_id;\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-insert\/\">insert<\/a> three order line items into the <code>order_details<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> \n    order_details(order_id, item_id, item_text, price)\n<span class=\"hljs-keyword\">VALUES<\/span>\n    (<span class=\"hljs-number\">100<\/span>, <span class=\"hljs-keyword\">nextval<\/span>(<span class=\"hljs-string\">'order_item_id'<\/span>),<span class=\"hljs-string\">'DVD Player'<\/span>,<span class=\"hljs-number\">100<\/span>),\n    (<span class=\"hljs-number\">100<\/span>, <span class=\"hljs-keyword\">nextval<\/span>(<span class=\"hljs-string\">'order_item_id'<\/span>),<span class=\"hljs-string\">'Android TV'<\/span>,<span class=\"hljs-number\">550<\/span>),\n    (<span class=\"hljs-number\">100<\/span>, <span class=\"hljs-keyword\">nextval<\/span>(<span class=\"hljs-string\">'order_item_id'<\/span>),<span class=\"hljs-string\">'Speaker'<\/span>,<span class=\"hljs-number\">250<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this statement, we used the <code>nextval()<\/code> function to fetch item id value from the <code>order_item_id<\/code> sequence.<\/p>\n\n\n\n<p>Fourth, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-select\/\">query<\/a> data from the <code>order_details<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n    order_id,\n    item_id,\n    item_text,\n    price\n<span class=\"hljs-keyword\">FROM<\/span>\n    order_details;        \n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"444\" height=\"113\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-Sequence-in-a-table.png\" alt=\"PostgreSQL Sequence in a table\" class=\"wp-image-4227\"\/><\/figure>\n\n\n\n<h2>Listing all sequences in a database<\/h2>\n\n\n\n<p>To list all sequences in the current database, you use the following query:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n    relname sequence_name\n<span class=\"hljs-keyword\">FROM<\/span> \n    pg_class \n<span class=\"hljs-keyword\">WHERE<\/span> \n    relkind = <span class=\"hljs-string\">'S'<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Deleting sequences<\/h2>\n\n\n\n<p>If a sequence is associated with a table column, it will be automatically dropped once the table column is removed or the table is dropped.  <\/p>\n\n\n\n<p>You can also remove a sequence manually using the <code>DROP SEQUENCE<\/code> statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">SEQUENCE<\/span> [ <span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">EXISTS<\/span> ] sequence_name [, ...] \n[ <span class=\"hljs-keyword\">CASCADE<\/span> | RESTRICT ];<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax:<\/p>\n\n\n\n<ul><li>First, specify the name of the sequence which you want to drop. The <code>IF EXISTS<\/code> option conditionally deletes the sequence if it exists. In case you want to drop multiple sequences at once, you can use a list of comma-separated sequence names.<\/li><li>Then, use the <code>CASCADE<\/code> option if you want to recursively drops objects that depend on the sequence, and objects that depend on the dependent objects and so on.<\/li><\/ul>\n\n\n\n<h3>PostgreSQL <code>DROP SEQUENCE<\/code> statement examples<\/h3>\n\n\n\n<p>This statement drops the table <code>order_details<\/code>. Since the sequence <code>order_item_id<\/code> associates with the <code>item_id<\/code> of the <code>order_details<\/code>, it is also dropped automatically:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">TABLE<\/span> order_details;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned about PostgreSQL sequences and how to use a sequence object to generate a list of sequences.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"4226\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-sequences\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Sequences\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"4226\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-sequences\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Sequences\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn about the PostgreSQL sequences and how to use a sequence object to generate a sequence of numbers.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":50,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL Sequences<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn about the PostgreSQL sequences and how to use a sequence object to generate a sequence of numbers.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"6 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-Sequence-simple-example.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-Sequence-simple-example.png\",\"width\":98,\"height\":66,\"caption\":\"PostgreSQL Sequence - simple example\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/\",\"name\":\"PostgreSQL Sequences\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/#primaryimage\"},\"datePublished\":\"2019-05-17T10:06:48+00:00\",\"dateModified\":\"2021-03-14T01:02:13+00:00\",\"description\":\"In this tutorial, you will learn about the PostgreSQL sequences and how to use a sequence object to generate a sequence of numbers.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL Sequences\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL Sequences","description":"In this tutorial, you will learn about the PostgreSQL sequences and how to use a sequence object to generate a sequence of numbers.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/","twitter_misc":{"Est. reading time":"6 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-Sequence-simple-example.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-Sequence-simple-example.png","width":98,"height":66,"caption":"PostgreSQL Sequence - simple example"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/","name":"PostgreSQL Sequences","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/#primaryimage"},"datePublished":"2019-05-17T10:06:48+00:00","dateModified":"2021-03-14T01:02:13+00:00","description":"In this tutorial, you will learn about the PostgreSQL sequences and how to use a sequence object to generate a sequence of numbers.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-sequences\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL Sequences"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/4226"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=4226"}],"version-history":[{"count":5,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/4226\/revisions"}],"predecessor-version":[{"id":5967,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/4226\/revisions\/5967"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=4226"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}