{"id":2477,"date":"2017-02-20T05:02:39","date_gmt":"2017-02-20T12:02:39","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=2477"},"modified":"2020-04-11T03:53:25","modified_gmt":"2020-04-11T10:53:25","slug":"postgresql-uuid","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-uuid\/","title":{"rendered":"The Basics Of PostgreSQL UUID Data Type"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about the PostgreSQL UUID data type and how to generate UUID values using a supplied module.<\/p>\n\n\n\n<h2>Introduction to PostgreSQL UUID type<\/h2>\n\n\n\n<p>UUID stands for Universal Unique Identifier defined by <a title=\"UUID\" href=\"https:\/\/tools.ietf.org\/html\/rfc4122\">RFC 4122<\/a> and other related standards. A UUID value is 128-bit quantity generated by an algorithm that make it unique in the known universe using the same algorithm. The following shows some examples of the UUID values:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">40e6215d-b5c6-4896-987c-f30f3678f608\n6ecd8c99-4036-403d-bf84-cf8400f67836\n3f333df6-90a4-4fda-8dd3-9485d27cee36\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>As you can see, a UUID is a sequence of 32 digits of hexadecimal digits represented in groups separated by hyphens.<\/p>\n\n\n\n<p>Because of its uniqueness feature, you often found UUID in the distributed systems because it guarantees a better uniqueness than the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-serial\/\"><code>SERIAL<\/code><\/a> data type which generates only unique values within a single database.<\/p>\n\n\n\n<p>To stores UUID values in the PostgreSQL database, you use the UUID data type.<\/p>\n\n\n\n<h2>Generating UUID values<\/h2>\n\n\n\n<p>PostgreSQL allows you store and compare UUID values but it does not include functions for generating the UUID values in its core.<\/p>\n\n\n\n<p>Instead, it relies on the third-party modules that provide specific algorithms to generate UUIDs. For example the <code>uuid-ossp<\/code> module provides some handy functions that implement standard algorithms for generating UUIDs.<\/p>\n\n\n\n<p>To install the <code>uuid-ossp<\/code> module, you use the <code>CREATE EXTENSION<\/code> statement as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> EXTENSION <span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-keyword\">EXISTS<\/span> <span class=\"hljs-string\">\"uuid-ossp\"<\/span>;\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>IF NOT EXISTS<\/code> clause allows you to avoid re-installing the module.<\/p>\n\n\n\n<p>To generate the UUID values based on the combination of computer&#8217;s MAC address, current <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-timestamp\/\">timestamp<\/a>, and a <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-random-range\/\">random<\/a> value, you use the <code>uuid_generate_v1()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> uuid_generate_v1();\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The function generated the following a UUID value:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">           uuid_generate_v1\n<span class=\"hljs-comment\">--------------------------------------<\/span>\n 0e37df36-f698-11e6-8dd4-cb9ced3df976\n(1 row)\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you want to generate a UUID value solely based on random numbers, you can use the <code>uuid_generate_v4()<\/code> function. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> uuid_generate_v4();\n\n           uuid_generate_v4\n<span class=\"hljs-comment\">--------------------------------------<\/span>\n a81bc81b-dead-4e5d-abff-90865d1e13b1\n(1 row)\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>For more information on the functions for UUID generation, check it out the <a href=\"https:\/\/www.postgresql.org\/docs\/9.5\/static\/uuid-ossp.html\">uuid-ossp<\/a> module documentation.<\/p>\n\n\n\n<h2>Creating a table with UUID column<\/h2>\n\n\n\n<p>We will <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-table\/\">create a table<\/a> whose <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-primary-key\/\">primary key<\/a> is UUID data type. In addition, the values of the primary key column will be generated automatically using the <code>uuid_generate_v4()<\/code> function.<\/p>\n\n\n\n<p>First, create the <code>contacts<\/code> table using the following statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> contacts (\n    contact_id <span class=\"hljs-keyword\">uuid<\/span> <span class=\"hljs-keyword\">DEFAULT<\/span> uuid_generate_v4 (),\n    first_name <span class=\"hljs-built_in\">VARCHAR<\/span> <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n    last_name <span class=\"hljs-built_in\">VARCHAR<\/span> <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n    email <span class=\"hljs-built_in\">VARCHAR<\/span> <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n    phone <span class=\"hljs-built_in\">VARCHAR<\/span>,\n    PRIMARY <span class=\"hljs-keyword\">KEY<\/span> (contact_id)\n);\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this statement, the data type of the <code>contact_id<\/code> column is <code>UUID<\/code>. The contact_id column has a default values provided by the <code>uuid_generate_v4()<\/code> function, therefore, whenever you&nbsp;insert new row without specifying the value for the contact_id <code>column<\/code>, PostgreSQL will call the <code>uuid_generate_v4()<\/code> function to generate the value for it.<\/p>\n\n\n\n<p>Second, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-insert\/\">insert<\/a> some data into the <code>contacts<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> contacts (\n    first_name,\n    last_name,\n    email,\n    phone\n)\n<span class=\"hljs-keyword\">VALUES<\/span>\n    (\n        <span class=\"hljs-string\">'John'<\/span>,\n        <span class=\"hljs-string\">'Smith'<\/span>,\n        <span class=\"hljs-string\">'john.smith@example.com'<\/span>,\n        <span class=\"hljs-string\">'408-237-2345'<\/span>\n    ),\n    (\n        <span class=\"hljs-string\">'Jane'<\/span>,\n        <span class=\"hljs-string\">'Smith'<\/span>,\n        <span class=\"hljs-string\">'jane.smith@example.com'<\/span>,\n        <span class=\"hljs-string\">'408-237-2344'<\/span>\n    ),\n    (\n        <span class=\"hljs-string\">'Alex'<\/span>,\n        <span class=\"hljs-string\">'Smith'<\/span>,\n        <span class=\"hljs-string\">'alex.smith@example.com'<\/span>,\n        <span class=\"hljs-string\">'408-237-2343'<\/span>\n    );\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, query&nbsp;all rows in the contacts table using the following&nbsp;<a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-select\/\"><code>SELECT<\/code><\/a> statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n    *\n<span class=\"hljs-keyword\">FROM<\/span>\n    contacts;\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"689\" height=\"81\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/02\/PostgreSQL-UUID-example.png\" alt=\"PostgreSQL UUID example\" class=\"wp-image-2478\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/02\/PostgreSQL-UUID-example.png 689w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/02\/PostgreSQL-UUID-example-300x35.png 300w\" sizes=\"(max-width: 689px) 100vw, 689px\" \/><\/figure>\n\n\n\n<p>As you can see the <code>contact_id<\/code> column has been populated by the UUID values generated by the <code>uuid_generate_v4()<\/code> function.<\/p>\n\n\n\n<p>In this tutorial, you have learned how to use PostgreSQL UUID data type and how to generate UUID values using the <code>uuid-ossp<\/code> module.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2477\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-uuid\/\"\n\t\t\t\tdata-post-title=\"The Basics Of PostgreSQL UUID Data Type\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2477\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-uuid\/\"\n\t\t\t\tdata-post-title=\"The Basics Of PostgreSQL UUID Data Type\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use PostgreSQL UUID data type and how to generate UUID values using the uuid-ossp module.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":75,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>The Basics Of PostgreSQL UUID Data Type<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to use PostgreSQL UUID data type and how to generate UUID values using the uuid-ossp module.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/02\/PostgreSQL-UUID-example.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/02\/PostgreSQL-UUID-example.png\",\"width\":689,\"height\":81,\"caption\":\"PostgreSQL UUID example\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/\",\"name\":\"The Basics Of PostgreSQL UUID Data Type\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/#primaryimage\"},\"datePublished\":\"2017-02-20T12:02:39+00:00\",\"dateModified\":\"2020-04-11T10:53:25+00:00\",\"description\":\"In this tutorial, you will learn how to use PostgreSQL UUID data type and how to generate UUID values using the uuid-ossp module.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"The Basics Of PostgreSQL UUID Data Type\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"The Basics Of PostgreSQL UUID Data Type","description":"In this tutorial, you will learn how to use PostgreSQL UUID data type and how to generate UUID values using the uuid-ossp module.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/02\/PostgreSQL-UUID-example.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/02\/PostgreSQL-UUID-example.png","width":689,"height":81,"caption":"PostgreSQL UUID example"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/","name":"The Basics Of PostgreSQL UUID Data Type","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/#primaryimage"},"datePublished":"2017-02-20T12:02:39+00:00","dateModified":"2020-04-11T10:53:25+00:00","description":"In this tutorial, you will learn how to use PostgreSQL UUID data type and how to generate UUID values using the uuid-ossp module.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-uuid\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"The Basics Of PostgreSQL UUID Data Type"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2477"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=2477"}],"version-history":[{"count":1,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2477\/revisions"}],"predecessor-version":[{"id":4773,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2477\/revisions\/4773"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=2477"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}