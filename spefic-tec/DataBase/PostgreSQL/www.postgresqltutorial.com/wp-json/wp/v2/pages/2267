{"id":2267,"date":"2016-06-20T23:12:53","date_gmt":"2016-06-21T06:12:53","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=2267"},"modified":"2020-04-11T03:53:27","modified_gmt":"2020-04-11T10:53:27","slug":"postgresql-row_number","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-window-function\/postgresql-row_number\/","title":{"rendered":"PostgreSQL ROW_NUMBER Function"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PostgreSQL <code>ROW_NUMBER()<\/code> function to assign a unique integer value to each row in a result set.<\/p>\n\n\n\n<h2>Introduction to the PostgreSQL <code>ROW_NUMBER()<\/code> function<\/h2>\n\n\n\n<p>The <code>ROW_NUMBER()<\/code> function is a <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-window-function\/\">window function<\/a> that assigns a sequential integer to each row in a result set. The following illustrates the syntax of the <code>ROW_NUMBER()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">ROW_NUMBER() OVER(\n    [PARTITION BY column_1, column_2,\u2026]\n    [ORDER BY column_3,column_4,\u2026]\n)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The set of rows on which the <code>ROW_NUMBER()<\/code> function operates is called a window.<\/p>\n\n\n\n<p>The <code>PARTITION BY<\/code> clause divides the window into smaller sets or partitions. If you specify the <code>PARTITION BY<\/code> clause, the row number for each partition starts with one and increments by one.<\/p>\n\n\n\n<p>Because the <code>PARTITION BY<\/code> clause is optional to the <code>ROW_NUMBER()<\/code> function, therefore you can omit it, and <code>ROW_NUMBER()<\/code> function will treat the whole window as a partition.<\/p>\n\n\n\n<p>The <code>ORDER BY<\/code>&nbsp;clause inside the <code>OVER<\/code> clause determines the order in which the numbers are assigned.<\/p>\n\n\n\n<h2>PostgreSQL <code>ROW_NUMBER()<\/code> function examples<\/h2>\n\n\n\n<p>We will use the <code>products<\/code> table created in the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-window-function\/\">PostgreSQL window function tutorial<\/a> to demonstrate the functionality of the <code>ROW_NUMBER()<\/code> function.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"540\" height=\"173\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/products_product_groups_tables.png\" alt=\"products_product_groups_tables\" class=\"wp-image-2268\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/products_product_groups_tables.png 540w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/products_product_groups_tables-300x96.png 300w\" sizes=\"(max-width: 540px) 100vw, 540px\" \/><\/figure>\n\n\n\n<p>The following is the data in the <code>products<\/code> table:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"351\" height=\"213\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/products-table-data.png\" alt=\"\" class=\"wp-image-4134\"\/><\/figure>\n\n\n\n<p>See the following query.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\tproduct_id,\n\tproduct_name,\n\t<span class=\"hljs-keyword\">group_id<\/span>,\n\tROW_NUMBER () <span class=\"hljs-keyword\">OVER<\/span> (<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> product_id)\n<span class=\"hljs-keyword\">FROM<\/span>\n\tproducts;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"390\" height=\"218\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-ROW_NUMBER-example.png\" alt=\"\" class=\"wp-image-4125\"\/><\/figure>\n\n\n\n<p>Because we did not use the <code>PARTITION BY <\/code>clause, the <code>ROW_NUMBER()<\/code> function considers the whole result set as a partition.<\/p>\n\n\n\n<p>The <code>ORDER BY<\/code> clause sorts the result set by <code>product_id<\/code>, therefore, the <code>ROW_NUMBER()<\/code>&nbsp;function assigns integer values to the rows based on the &nbsp;<code>product_id<\/code> order.<\/p>\n\n\n\n<p>In the following query, we change the column in the <code>ORDER BY<\/code> clause to product_name, the <code>ROW_NUMBER()<\/code> function assigns the integer values to each row based on the product name order.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\tproduct_id,\n\tproduct_name,\n\t<span class=\"hljs-keyword\">group_id<\/span>,\n\tROW_NUMBER () <span class=\"hljs-keyword\">OVER<\/span> (\n           <span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> product_name\n        )\n<span class=\"hljs-keyword\">FROM<\/span>\n\tproducts;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"388\" height=\"216\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-ROW_NUMBER-order-by-product-name.png\" alt=\"PostgreSQL ROW_NUMBER order by product name\" class=\"wp-image-4127\"\/><\/figure>\n\n\n\n<p>In the following query, we use the <code>PARTITION BY<\/code> clause to divide the window into subsets based on the values in the &nbsp;<code>group_id<\/code> column.&nbsp;<span style=\"line-height: 1.5;\">In this case, the <\/span><code style=\"line-height: 1.5;\">ROW_NUMBER()<\/code><span style=\"line-height: 1.5;\"> function assigns one to the starting row of each partition and increases by one for the next row within the same partition.<\/span><\/p>\n\n\n\n<p>The <code>ORDER BY<\/code> clause sorts the rows in each partition by the values in the <code>product_name<\/code> column.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\tproduct_id,\n\tproduct_name,\n\t<span class=\"hljs-keyword\">group_id<\/span>,\n\tROW_NUMBER () <span class=\"hljs-keyword\">OVER<\/span> (\n\t\t<span class=\"hljs-keyword\">PARTITION<\/span> <span class=\"hljs-keyword\">BY<\/span> <span class=\"hljs-keyword\">group_id<\/span>\n\t\t<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span>\n\t\t\tproduct_name\n\t)\n<span class=\"hljs-keyword\">FROM<\/span>\n\tproducts;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"387\" height=\"217\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-ROW_NUMBER-with-PARTITION-example.png\" alt=\"PostgreSQL ROW_NUMBER with PARTITION example\" class=\"wp-image-4128\"\/><\/figure>\n\n\n\n<h2>PostgreSQL <code>ROW_NUMBER()<\/code> function and <code>DISTINCT<\/code> operator<\/h2>\n\n\n\n<p>The following query uses the <code>ROW_NUMBER()<\/code> function to assign integers to the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-select-distinct\/\">distinct <\/a>prices from the <code>products<\/code> table.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> <span class=\"hljs-keyword\">DISTINCT<\/span>\n\tprice,\n\tROW_NUMBER () <span class=\"hljs-keyword\">OVER<\/span> (<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> price)\n<span class=\"hljs-keyword\">FROM<\/span>\n\tproducts\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span>\n\tprice;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"157\" height=\"215\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-ROW_NUMBER-and-DISTINCT.png\" alt=\"PostgreSQL ROW_NUMBER and DISTINCT\" class=\"wp-image-4129\"\/><\/figure>\n\n\n\n<p>However, the result is not expected because it includes duplicate prices. The reason is that the <code>ROW_NUMBER()<\/code> operates on the result set before the <code>DISTINCT<\/code> is applied.<\/p>\n\n\n\n<p>To solve this problem, we can get a list of distinct prices in a CTE, the apply the <code>ROW_NUMBER()<\/code> function in the outer query as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">WITH<\/span> prices <span class=\"hljs-keyword\">AS<\/span> (\n\t<span class=\"hljs-keyword\">SELECT<\/span> <span class=\"hljs-keyword\">DISTINCT<\/span>\n\t\tprice\n\t<span class=\"hljs-keyword\">FROM<\/span>\n\t\tproducts\n) <span class=\"hljs-keyword\">SELECT<\/span>\n\tprice,\n\tROW_NUMBER () <span class=\"hljs-keyword\">OVER<\/span> (<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> price)\n<span class=\"hljs-keyword\">FROM<\/span>\n\tprices;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"155\" height=\"160\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-ROW_NUMBER-and-CTE.png\" alt=\"PostgreSQL ROW_NUMBER and CTE\" class=\"wp-image-4130\"\/><\/figure>\n\n\n\n<p>Or we can use a <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-subquery\/\">subquery<\/a> in the <code>FROM<\/code> clause to get a list of unique price, and then apply the <code>ROW_NUMBER()<\/code> function in the outer query.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\tprice,\n\tROW_NUMBER () <span class=\"hljs-keyword\">OVER<\/span> (<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> price)\n<span class=\"hljs-keyword\">FROM<\/span>\n\t(\n\t\t<span class=\"hljs-keyword\">SELECT<\/span> <span class=\"hljs-keyword\">DISTINCT<\/span>\n\t\t\tprice\n\t\t<span class=\"hljs-keyword\">FROM<\/span>\n\t\t\tproducts\n\t) prices;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"158\" height=\"158\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-ROW_NUMBER-and-subquery.png\" alt=\"PostgreSQL ROW_NUMBER and subquery\" class=\"wp-image-4131\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-ROW_NUMBER-and-subquery.png 158w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-ROW_NUMBER-and-subquery-150x150.png 150w\" sizes=\"(max-width: 158px) 100vw, 158px\" \/><\/figure>\n\n\n\n<h2>Using <code>ROW_NUMBER()<\/code> function for pagination<\/h2>\n\n\n\n<p>In application development, you use the pagination technique for displaying a subset of rows instead of all rows in a table.<\/p>\n\n\n\n<p>Besides using the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-limit\/\">LIMIT<\/a> clause, you can also use the <code>ROW_NUMBER()<\/code> function for the pagination.<\/p>\n\n\n\n<p>For example, the following query selects the five rows starting at row number 6:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t*\n<span class=\"hljs-keyword\">FROM<\/span>\n\t(\n\t\t<span class=\"hljs-keyword\">SELECT<\/span>\n\t\t\tproduct_id,\n\t\t\tproduct_name,\n\t\t\tprice,\n\t\t\tROW_NUMBER () <span class=\"hljs-keyword\">OVER<\/span> (<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> product_name)\n\t\t<span class=\"hljs-keyword\">FROM<\/span>\n\t\t\tproducts\n\t) x\n<span class=\"hljs-keyword\">WHERE<\/span>\n\tROW_NUMBER <span class=\"hljs-keyword\">BETWEEN<\/span> <span class=\"hljs-number\">6<\/span> <span class=\"hljs-keyword\">AND<\/span> <span class=\"hljs-number\">10<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"367\" height=\"105\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-ROW_NUMBER-with-pagination.png\" alt=\"PostgreSQL ROW_NUMBER with pagination\" class=\"wp-image-4132\"\/><\/figure>\n\n\n\n<h2>Using <code>ROW_NUMBER()<\/code> function for getting the nth highest \/ lowest row<\/h2>\n\n\n\n<p>For example, to get the third most expensive products, first, we get the distinct prices from the products table and select the price whose row number is 3. Then, in the outer query, we get the products with the price that equals the 3<sup>rd<\/sup> highest price.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t*\n<span class=\"hljs-keyword\">FROM<\/span>\n\tproducts\n<span class=\"hljs-keyword\">WHERE<\/span>\n\tprice = (\n\t\t<span class=\"hljs-keyword\">SELECT<\/span>\n\t\t\tprice\n\t\t<span class=\"hljs-keyword\">FROM<\/span>\n\t\t\t(\n\t\t\t\t<span class=\"hljs-keyword\">SELECT<\/span>\n\t\t\t\t\tprice,\n\t\t\t\t\tROW_NUMBER () <span class=\"hljs-keyword\">OVER<\/span> (\n\t\t\t\t\t\t<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> price <span class=\"hljs-keyword\">DESC<\/span>\n\t\t\t\t\t) nth\n\t\t\t\t<span class=\"hljs-keyword\">FROM<\/span>\n\t\t\t\t\t(\n\t\t\t\t\t\t<span class=\"hljs-keyword\">SELECT<\/span> <span class=\"hljs-keyword\">DISTINCT<\/span>\n\t\t\t\t\t\t\t(price)\n\t\t\t\t\t\t<span class=\"hljs-keyword\">FROM<\/span>\n\t\t\t\t\t\t\tproducts\n\t\t\t\t\t) prices\n\t\t\t) sorted_prices\n\t\t<span class=\"hljs-keyword\">WHERE<\/span>\n\t\t\tnth = <span class=\"hljs-number\">3<\/span>\n\t);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"350\" height=\"34\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-ROW_NUMBER-nth-highest-lowest-example.png\" alt=\"PostgreSQL ROW_NUMBER nth highest lowest example\" class=\"wp-image-4133\"\/><\/figure>\n\n\n\n<p>In this tutorial, we have shown you how to use the PostgreSQL <code>ROW_NUMBER()<\/code> function to assign integer values to rows in a result set.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2267\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-window-function\/postgresql-row_number\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL ROW_NUMBER Function\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2267\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-window-function\/postgresql-row_number\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL ROW_NUMBER Function\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the PostgreSQL ROW_NUMBER function to assign integer values to each row in a result set.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":1737,"menu_order":10,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL ROW_NUMBER() Explained with Practical Examples<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to use the PostgreSQL ROW_NUMBER function to assign a unique integer value to each row in a result set.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-row_number\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-row_number\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/products_product_groups_tables.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/products_product_groups_tables.png\",\"width\":540,\"height\":173},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-row_number\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-row_number\/\",\"name\":\"PostgreSQL ROW_NUMBER() Explained with Practical Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-row_number\/#primaryimage\"},\"datePublished\":\"2016-06-21T06:12:53+00:00\",\"dateModified\":\"2020-04-11T10:53:27+00:00\",\"description\":\"In this tutorial, you will learn how to use the PostgreSQL ROW_NUMBER function to assign a unique integer value to each row in a result set.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-row_number\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-row_number\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-row_number\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Window Functions\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-window-function\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL ROW_NUMBER Function\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL ROW_NUMBER() Explained with Practical Examples","description":"In this tutorial, you will learn how to use the PostgreSQL ROW_NUMBER function to assign a unique integer value to each row in a result set.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-row_number\/","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-row_number\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/products_product_groups_tables.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/products_product_groups_tables.png","width":540,"height":173},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-row_number\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-row_number\/","name":"PostgreSQL ROW_NUMBER() Explained with Practical Examples","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-row_number\/#primaryimage"},"datePublished":"2016-06-21T06:12:53+00:00","dateModified":"2020-04-11T10:53:27+00:00","description":"In this tutorial, you will learn how to use the PostgreSQL ROW_NUMBER function to assign a unique integer value to each row in a result set.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-row_number\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-row_number\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-row_number\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Window Functions","item":"https:\/\/www.postgresqltutorial.com\/postgresql-window-function\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL ROW_NUMBER Function"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2267"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=2267"}],"version-history":[{"count":0,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2267\/revisions"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1737"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=2267"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}