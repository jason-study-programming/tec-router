{"id":1906,"date":"2016-03-11T19:29:36","date_gmt":"2016-03-12T02:29:36","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=1906"},"modified":"2020-04-11T03:53:35","modified_gmt":"2020-04-11T10:53:35","slug":"query","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/","title":{"rendered":"The Ultimate Guide to Query Data from The PostgreSQL Using JDBC"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, &nbsp;you will learn how to query data from a table in the PostgreSQL database using JDBC API.<\/p>\n\n\n\n<p>To query data from a table using <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/\">JDBC<\/a>, you use the following steps:<\/p>\n\n\n\n<ol><li><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/connecting-to-postgresql-database\/\">Establish a database connection<\/a> to the PostgreSQL&nbsp;server.<\/li><li>Create an instance of the Statement object<\/li><li>Execute a statement to get a ResultSet object<\/li><li>Process the ResultSet object.<\/li><li>Close the database connection.<\/li><\/ol>\n\n\n\n<h2>Establishing a database connection<\/h2>\n\n\n\n<p>To connect to the PostgreSQL database, you need to provide account information such as username, password, and the connection string. See the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/connecting-to-postgresql-database\/\">connecting to the PostgreSQL database server for more information<\/a>.<\/p>\n\n\n\n<p>For example, the following method connects to a PostgreSQL database and returns a Connection object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Java\" data-shcb-language-slug=\"java\"><div><code class=\"hljs language-java\">    <span class=\"hljs-comment\">\/**\n     * Connect to the PostgreSQL database\n     *\n     * <span class=\"hljs-doctag\">@return<\/span> a Connection object\n     * <span class=\"hljs-doctag\">@throws<\/span> java.sql.SQLException\n     *\/<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public<\/span> Connection <span class=\"hljs-title\">connect<\/span><span class=\"hljs-params\">()<\/span> <span class=\"hljs-keyword\">throws<\/span> SQLException <\/span>{\n        <span class=\"hljs-keyword\">return<\/span> DriverManager.getConnection(url, user, password);\n    }\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Java<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">java<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The URL, user, and password are as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">    private final String url = \"jdbc:postgresql:\/\/localhost\/dvdrental\";\n    private final String user = \"postgres\";\n    private final String password = \"postgres\";<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Creating a Statement Object<\/h2>\n\n\n\n<p>A Statement object represents an SQL statement. First, you create a Statement object from the Connection object. Then, you execute the Statement object to get a ResultSet object that represents a database result set.<\/p>\n\n\n\n<p>JDBC provides you with three kinds of Statement objects:<\/p>\n\n\n\n<ul><li>Statement: you use the Statement to implement a simple SQL statement that has no parameters.<\/li><li>PreparedStatement: is the subclass of the Statement class. It gives you the ability to add the parameters to the SQL statements.<\/li><li>CallableStatement: extends the PreparedStatement class used to execute a stored procedure that may have parameters.<\/li><\/ul>\n\n\n\n<h2>Executing the query<\/h2>\n\n\n\n<p>To execute a query, you use one of the following methods of the Statement object:<\/p>\n\n\n\n<ul><li>execute: returns true if the first object of the query is a ResultSet object. You can get the ResultSet by calling the method getResultSet.<\/li><li>executeQuery: returns only one ResultSet object.<\/li><li>executeUpdate: returns the number of rows affected by the statement. You use this method for the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-insert\/\">INSERT<\/a>, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-delete\/\">DELETE<\/a>, or <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-update\/\">UPDATE<\/a> statement.<\/li><\/ul>\n\n\n\n<h2>Processing the ResultSet Object<\/h2>\n\n\n\n<p>After having a&nbsp;ResultSet object, you use a cursor to loop through the result set by calling the methods of the ResultSet object.<\/p>\n\n\n\n<p>Note that this cursor is a Java cursor, not the database cursor.<\/p>\n\n\n\n<h2>Closing a database connection<\/h2>\n\n\n\n<p>In JDBC 4.1, you use a try-with-resources statement to close ResultSet, Statement, and Connection objects automatically.<\/p>\n\n\n\n<h2>Querying data examples<\/h2>\n\n\n\n<p>In the following section, we will show you various example of querying data from simple to complex.<\/p>\n\n\n\n<h3>Querying data with a statement that returns one row<\/h3>\n\n\n\n<p>The following method returns the number of actors in the <code>actor<\/code> table using the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-count-function\/\">COUNT<\/a> function.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Java\" data-shcb-language-slug=\"java\"><div><code class=\"hljs language-java\">    <span class=\"hljs-comment\">\/**\n     * Get actors count\n     * <span class=\"hljs-doctag\">@return<\/span> \n     *\/<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-keyword\">int<\/span> <span class=\"hljs-title\">getActorCount<\/span><span class=\"hljs-params\">()<\/span> <\/span>{\n        String SQL = <span class=\"hljs-string\">\"SELECT count(*) FROM actor\"<\/span>;\n        <span class=\"hljs-keyword\">int<\/span> count = <span class=\"hljs-number\">0<\/span>;\n\n        <span class=\"hljs-keyword\">try<\/span> (Connection conn = connect();\n                Statement stmt = conn.createStatement();\n                ResultSet rs = stmt.executeQuery(SQL)) {\n            rs.next();\n            count = rs.getInt(<span class=\"hljs-number\">1<\/span>);\n        } <span class=\"hljs-keyword\">catch<\/span> (SQLException ex) {\n            System.out.println(ex.getMessage());\n        }\n\n        <span class=\"hljs-keyword\">return<\/span> count;\n    }<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Java<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">java<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>We have done the following in the getActorCount method:<\/p>\n\n\n\n<ol><li>First, prepared an SQL statement that counts the number of rows in the actor table.<\/li><li>Second, established a connection to the database, created a Statement object, and executed the query.<\/li><li>Third, processed the result set by moving the cursor the first row and get its value using the getInt() method.<\/li><\/ol>\n\n\n\n<p>The following demonstrates the output of the method.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/03\/postgresql-jdbc-select-count.gif\" alt=\"postgresql jdbc select count\" class=\"wp-image-1907\"\/><\/figure>\n\n\n\n<h3>Querying data using a statement that returns multiple rows<\/h3>\n\n\n\n<p>The following getActors method queries data from the actor table and displays the actor information.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Java\" data-shcb-language-slug=\"java\"><div><code class=\"hljs language-java\"> <span class=\"hljs-comment\">\/**\n     * Get all rows in the actor table\n     *\/<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-keyword\">void<\/span> <span class=\"hljs-title\">getActors<\/span><span class=\"hljs-params\">()<\/span> <\/span>{\n\n        String SQL = <span class=\"hljs-string\">\"SELECT actor_id,first_name, last_name FROM actor\"<\/span>;\n\n        <span class=\"hljs-keyword\">try<\/span> (Connection conn = connect();\n                Statement stmt = conn.createStatement();\n                ResultSet rs = stmt.executeQuery(SQL)) {\n            <span class=\"hljs-comment\">\/\/ display actor information<\/span>\n            displayActor(rs);\n        } <span class=\"hljs-keyword\">catch<\/span> (SQLException ex) {\n            System.out.println(ex.getMessage());\n        }\n    }<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Java<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">java<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In the displayActor method, we loop through the result set and print out the information for each row.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Java\" data-shcb-language-slug=\"java\"><div><code class=\"hljs language-java\"><span class=\"hljs-comment\">\/**\n     * Display actor\n     *\n     * <span class=\"hljs-doctag\">@param<\/span> rs\n     * <span class=\"hljs-doctag\">@throws<\/span> SQLException\n     *\/<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">private<\/span> <span class=\"hljs-keyword\">void<\/span> <span class=\"hljs-title\">displayActor<\/span><span class=\"hljs-params\">(ResultSet rs)<\/span> <span class=\"hljs-keyword\">throws<\/span> SQLException <\/span>{\n        <span class=\"hljs-keyword\">while<\/span> (rs.next()) {\n            System.out.println(rs.getString(<span class=\"hljs-string\">\"actor_id\"<\/span>) + <span class=\"hljs-string\">\"\\t\"<\/span>\n                    + rs.getString(<span class=\"hljs-string\">\"first_name\"<\/span>) + <span class=\"hljs-string\">\"\\t\"<\/span>\n                    + rs.getString(<span class=\"hljs-string\">\"last_name\"<\/span>));\n\n        }\n    }<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Java<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">java<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/03\/postgresql-jdbc-select-example.gif\" alt=\"postgresql jdbc select example\" class=\"wp-image-1908\"\/><\/figure>\n\n\n\n<h3>Querying data using a statement that has&nbsp;parameters<\/h3>\n\n\n\n<p>To query the database with parameters, you use the PreparedStatement object.<\/p>\n\n\n\n<p>First, you use the question mark (?) as the placeholder in the SQL statement. Then, you use methods of the PreparedStatement object such as setInt, setString,&#8230; to pass the value to the placeholders.<\/p>\n\n\n\n<p>The following method allows you to find an actor by his\/her id.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Java\" data-shcb-language-slug=\"java\"><div><code class=\"hljs language-java\">    <span class=\"hljs-comment\">\/**\n     * Find actor by his\/her ID\n     *\n     * <span class=\"hljs-doctag\">@param<\/span> actorID\n     *\/<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-keyword\">void<\/span> <span class=\"hljs-title\">findActorByID<\/span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int<\/span> actorID)<\/span> <\/span>{\n        String SQL = <span class=\"hljs-string\">\"SELECT actor_id,first_name,last_name \"<\/span>\n                + <span class=\"hljs-string\">\"FROM actor \"<\/span>\n                + <span class=\"hljs-string\">\"WHERE actor_id = ?\"<\/span>;\n\n        <span class=\"hljs-keyword\">try<\/span> (Connection conn = connect();\n                PreparedStatement pstmt = conn.prepareStatement(SQL)) {\n\n            pstmt.setInt(<span class=\"hljs-number\">1<\/span>, actorID);\n            ResultSet rs = pstmt.executeQuery();\n            displayActor(rs);\n        } <span class=\"hljs-keyword\">catch<\/span> (SQLException ex) {\n            System.out.println(ex.getMessage());\n        }\n    }<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Java<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">java<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"800\" height=\"519\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/03\/postgresql-jdbc-select-with-parameters.gif\" alt=\"postgresql jdbc select with parameters\" class=\"wp-image-1910\"\/><\/figure>\n\n\n\n<p>You can download the full source code of the tutorial below:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Java\" data-shcb-language-slug=\"java\"><div><code class=\"hljs language-java\"><span class=\"hljs-keyword\">package<\/span> com.postgresqltutorial;\n\n<span class=\"hljs-keyword\">import<\/span> java.sql.Connection;\n<span class=\"hljs-keyword\">import<\/span> java.sql.DriverManager;\n<span class=\"hljs-keyword\">import<\/span> java.sql.PreparedStatement;\n<span class=\"hljs-keyword\">import<\/span> java.sql.ResultSet;\n<span class=\"hljs-keyword\">import<\/span> java.sql.SQLException;\n<span class=\"hljs-keyword\">import<\/span> java.sql.Statement;\n\n<span class=\"hljs-comment\">\/**\n *\n * <span class=\"hljs-doctag\">@author<\/span> postgresqltutorial.com\n *\/<\/span>\n<span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Main<\/span> <\/span>{\n\n    <span class=\"hljs-keyword\">private<\/span> <span class=\"hljs-keyword\">final<\/span> String url = <span class=\"hljs-string\">\"jdbc:postgresql:\/\/localhost\/dvdrental\"<\/span>;\n    <span class=\"hljs-keyword\">private<\/span> <span class=\"hljs-keyword\">final<\/span> String user = <span class=\"hljs-string\">\"postgres\"<\/span>;\n    <span class=\"hljs-keyword\">private<\/span> <span class=\"hljs-keyword\">final<\/span> String password = <span class=\"hljs-string\">\"postgres\"<\/span>;\n\n    <span class=\"hljs-comment\">\/**\n     * Connect to the PostgreSQL database\n     *\n     * <span class=\"hljs-doctag\">@return<\/span> a Connection object\n     * <span class=\"hljs-doctag\">@throws<\/span> java.sql.SQLException\n     *\/<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public<\/span> Connection <span class=\"hljs-title\">connect<\/span><span class=\"hljs-params\">()<\/span> <span class=\"hljs-keyword\">throws<\/span> SQLException <\/span>{\n        <span class=\"hljs-keyword\">return<\/span> DriverManager.getConnection(url, user, password);\n    }\n\n\n    <span class=\"hljs-comment\">\/**\n     * Get all rows in the actor table\n     *\/<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-keyword\">void<\/span> <span class=\"hljs-title\">getActors<\/span><span class=\"hljs-params\">()<\/span> <\/span>{\n\n        String SQL = <span class=\"hljs-string\">\"SELECT actor_id,first_name, last_name FROM actor\"<\/span>;\n\n        <span class=\"hljs-keyword\">try<\/span> (Connection conn = connect();\n                Statement stmt = conn.createStatement();\n                ResultSet rs = stmt.executeQuery(SQL)) {\n            <span class=\"hljs-comment\">\/\/ display actor information<\/span>\n            displayActor(rs);\n        } <span class=\"hljs-keyword\">catch<\/span> (SQLException ex) {\n            System.out.println(ex.getMessage());\n        }\n    }\n\n    <span class=\"hljs-comment\">\/**\n     * Get actors count\n     * <span class=\"hljs-doctag\">@return<\/span> \n     *\/<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-keyword\">int<\/span> <span class=\"hljs-title\">getActorCount<\/span><span class=\"hljs-params\">()<\/span> <\/span>{\n        String SQL = <span class=\"hljs-string\">\"SELECT count(*) FROM actor\"<\/span>;\n        <span class=\"hljs-keyword\">int<\/span> count = <span class=\"hljs-number\">0<\/span>;\n\n        <span class=\"hljs-keyword\">try<\/span> (Connection conn = connect();\n                Statement stmt = conn.createStatement();\n                ResultSet rs = stmt.executeQuery(SQL)) {\n            rs.next();\n            count = rs.getInt(<span class=\"hljs-number\">1<\/span>);\n        } <span class=\"hljs-keyword\">catch<\/span> (SQLException ex) {\n            System.out.println(ex.getMessage());\n        }\n\n        <span class=\"hljs-keyword\">return<\/span> count;\n    }\n\n    <span class=\"hljs-comment\">\/**\n     * Display actor\n     *\n     * <span class=\"hljs-doctag\">@param<\/span> rs\n     * <span class=\"hljs-doctag\">@throws<\/span> SQLException\n     *\/<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">private<\/span> <span class=\"hljs-keyword\">void<\/span> <span class=\"hljs-title\">displayActor<\/span><span class=\"hljs-params\">(ResultSet rs)<\/span> <span class=\"hljs-keyword\">throws<\/span> SQLException <\/span>{\n        <span class=\"hljs-keyword\">while<\/span> (rs.next()) {\n            System.out.println(rs.getString(<span class=\"hljs-string\">\"actor_id\"<\/span>) + <span class=\"hljs-string\">\"\\t\"<\/span>\n                    + rs.getString(<span class=\"hljs-string\">\"first_name\"<\/span>) + <span class=\"hljs-string\">\"\\t\"<\/span>\n                    + rs.getString(<span class=\"hljs-string\">\"last_name\"<\/span>));\n\n        }\n    }\n\n    <span class=\"hljs-comment\">\/**\n     * Find actor by his\/her ID\n     *\n     * <span class=\"hljs-doctag\">@param<\/span> actorID\n     *\/<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-keyword\">void<\/span> <span class=\"hljs-title\">findActorByID<\/span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int<\/span> actorID)<\/span> <\/span>{\n        String SQL = <span class=\"hljs-string\">\"SELECT actor_id,first_name,last_name \"<\/span>\n                + <span class=\"hljs-string\">\"FROM actor \"<\/span>\n                + <span class=\"hljs-string\">\"WHERE actor_id = ?\"<\/span>;\n\n        <span class=\"hljs-keyword\">try<\/span> (Connection conn = connect();\n                PreparedStatement pstmt = conn.prepareStatement(SQL)) {\n\n            pstmt.setInt(<span class=\"hljs-number\">1<\/span>, actorID);\n            ResultSet rs = pstmt.executeQuery();\n            displayActor(rs);\n        } <span class=\"hljs-keyword\">catch<\/span> (SQLException ex) {\n            System.out.println(ex.getMessage());\n        }\n    }\n\n    <span class=\"hljs-comment\">\/**\n     * <span class=\"hljs-doctag\">@param<\/span> args the command line arguments\n     *\/<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-keyword\">static<\/span> <span class=\"hljs-keyword\">void<\/span> <span class=\"hljs-title\">main<\/span><span class=\"hljs-params\">(String[] args)<\/span> <\/span>{\n        Main main = <span class=\"hljs-keyword\">new<\/span> Main();\n        main.findActorByID(<span class=\"hljs-number\">200<\/span>);\n    }\n}<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Java<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">java<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, we have shown you how to query data from the PostgreSQL database using JDBC API.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1906\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/\"\n\t\t\t\tdata-post-title=\"The Ultimate Guide to Query Data from The PostgreSQL Using JDBC\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1906\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/\"\n\t\t\t\tdata-post-title=\"The Ultimate Guide to Query Data from The PostgreSQL Using JDBC\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, &nbsp;you will learn how to query data from a table in the PostgreSQL database using JDBC API. To query data from a table using JDBC, you use the following steps: Establish a database connection to the PostgreSQL&nbsp;server. Create an instance of the Statement object Execute a statement to get a ResultSet [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":1885,"menu_order":2,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>The Ultimate Guide to Query Data from The PostgreSQL Using JDBC<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"5 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/03\/postgresql-jdbc-select-count.gif\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/03\/postgresql-jdbc-select-count.gif\",\"width\":798,\"height\":517},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/\",\"name\":\"The Ultimate Guide to Query Data from The PostgreSQL Using JDBC\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/#primaryimage\"},\"datePublished\":\"2016-03-12T02:29:36+00:00\",\"dateModified\":\"2020-04-11T10:53:35+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL JDBC\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"The Ultimate Guide to Query Data from The PostgreSQL Using JDBC\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"The Ultimate Guide to Query Data from The PostgreSQL Using JDBC","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/","twitter_misc":{"Est. reading time":"5 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/03\/postgresql-jdbc-select-count.gif","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/03\/postgresql-jdbc-select-count.gif","width":798,"height":517},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/","name":"The Ultimate Guide to Query Data from The PostgreSQL Using JDBC","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/#primaryimage"},"datePublished":"2016-03-12T02:29:36+00:00","dateModified":"2020-04-11T10:53:35+00:00","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/query\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL JDBC","item":"https:\/\/www.postgresqltutorial.com\/postgresql-jdbc\/"},{"@type":"ListItem","position":3,"name":"The Ultimate Guide to Query Data from The PostgreSQL Using JDBC"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1906"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=1906"}],"version-history":[{"count":0,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1906\/revisions"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1885"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=1906"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}