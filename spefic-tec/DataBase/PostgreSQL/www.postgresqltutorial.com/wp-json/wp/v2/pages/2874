{"id":2874,"date":"2017-08-13T06:48:15","date_gmt":"2017-08-13T13:48:15","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=2874"},"modified":"2021-04-26T18:39:38","modified_gmt":"2021-04-27T01:39:38","slug":"postgresql-aggregate-functions","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/","title":{"rendered":"PostgreSQL Aggregate Functions"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PostgreSQL aggregate functions such as <code>AVG()<\/code>, <code>COUNT()<\/code>, <code>MIN()<\/code>, <code>MAX()<\/code>, and <code>SUM()<\/code>.<\/p>\n\n\n\n<h2>Introduction to PostgreSQL aggregate functions<\/h2>\n\n\n\n<p>Aggregate functions perform a&nbsp;calculation on a set of rows and return&nbsp;a single row. PostgreSQL provides all standard SQL&#8217;s aggregate functions as follows:<\/p>\n\n\n\n<ul><li><code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-avg-function\/\">AVG()<\/a><\/code> &#8211; return the average value.<\/li><li><code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-count-function\/\">COUNT()<\/a><\/code> &#8211; return the number of values.<\/li><li><code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-max-function\/\">MAX()<\/a><\/code> &#8211; return the maximum value.<\/li><li><code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-min-function\/\">MIN()<\/a><\/code> &#8211; return the minimum value.<\/li><li><code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-sum-function\/\">SUM()<\/a><\/code> &#8211; return the sum of all or distinct values.<\/li><\/ul>\n\n\n\n<p>We often use the aggregate functions with the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-group-by\/\">GROUP BY<\/a><\/code> clause in the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-select\/\">SELECT<\/a><\/code> statement. In these cases, the <code>GROUP BY<\/code> clause divides the result set into groups of rows and the aggregate functions perform a calculation on each group e.g., maximum, minimum, average, etc.<\/p>\n\n\n\n<p class=\"lf-text-block lf-block\">You can use aggregate functions as expressions only in the following clauses:<\/p>\n\n\n\n<ul class=\"lf-text-block lf-block\"><li>\u00a0<code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-select\/\">SELECT<\/a><\/code> clause.<\/li><li>\u00a0<a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-having\/\"><code>HAVING<\/code><\/a> clause.<\/li><\/ul>\n\n\n\n<h2>PostgreSQL aggregate functions examples<\/h2>\n\n\n\n<p>Let&#8217;s use the <code>film<\/code> table in the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-sample-database\/\">sample database<\/a> for the demonstration.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"181\" height=\"306\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/film_table.png\" alt=\"Film table\" class=\"wp-image-3449\"\/><\/figure>\n\n\n\n<h2><code>AVG()<\/code> function examples<\/h2>\n\n\n\n<p>The following statement uses the <code>AVG()<\/code> function to calculate the average replacement cost of all films:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">ROUND<\/span>( <span class=\"hljs-keyword\">AVG<\/span>( replacement_cost ), <span class=\"hljs-number\">2<\/span> ) avg_replacement_cost\n<span class=\"hljs-keyword\">FROM<\/span>\n\tfilm;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following is the result:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"141\" height=\"37\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-Aggregate-Function-AVG.png\" alt=\"PostgreSQL Aggregate Function - AVG\" class=\"wp-image-3991\"\/><\/figure>\n\n\n\n<p>Noted that the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-round\/\">ROUND()<\/a><\/code> function was used to round the result to 2 decimal places.<\/p>\n\n\n\n<p>To calculate the average replacement cost of the Drama films whose category id is 7, you use the following statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">ROUND<\/span>( <span class=\"hljs-keyword\">AVG<\/span>( replacement_cost ), <span class=\"hljs-number\">2<\/span> ) avg_replacement_cost\n<span class=\"hljs-keyword\">FROM<\/span>\n\tfilm\n<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> film_category <span class=\"hljs-keyword\">USING<\/span>(film_id)\n<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> <span class=\"hljs-keyword\">category<\/span> <span class=\"hljs-keyword\">USING<\/span>(category_id)\n<span class=\"hljs-keyword\">WHERE<\/span>\n\tcategory_id = <span class=\"hljs-number\">7<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Here is the result:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"140\" height=\"35\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-Aggregate-Function-Advanced-AVG.png\" alt=\"PostgreSQL Aggregate Function - Advanced AVG\" class=\"wp-image-3992\"\/><\/figure>\n\n\n\n<h2><code>COUNT()<\/code> function examples<\/h2>\n\n\n\n<p>To get the number of films, you use the <code>COUNT(*)<\/code> function as follows:<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">SELECT \n    COUNT(*) \nFROM \n    film;<\/code><\/div><\/pre>\n\n\n<p>Here is the output:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"55\" height=\"34\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-Aggregate-Function-COUNT.png\" alt=\"PostgreSQL Aggregate Function - COUNT\" class=\"wp-image-3993\"\/><\/figure>\n\n\n\n<p>To get the number of drama films, you use the following statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">COUNT<\/span>(*) drama_films\n<span class=\"hljs-keyword\">FROM<\/span>\n\tfilm\n<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> film_category <span class=\"hljs-keyword\">USING<\/span>(film_id)\n<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> <span class=\"hljs-keyword\">category<\/span> <span class=\"hljs-keyword\">USING<\/span>(category_id)\n<span class=\"hljs-keyword\">WHERE<\/span>\n\tcategory_id = <span class=\"hljs-number\">7<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The result showed that we have 62 drama films:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"89\" height=\"37\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-Aggregate-Function-Advanced-COUNT.png\" alt=\"PostgreSQL Aggregate Function - Advanced COUNT\" class=\"wp-image-3994\"\/><\/figure>\n\n\n\n<h2><code>MAX()<\/code> function examples<\/h2>\n\n\n\n<p>The following statement returns the maximum replacement cost of films.<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">SELECT \n    MAX(replacement_cost)\nFROM \n    film;<\/code><\/div><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"57\" height=\"34\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-Aggregate-Function-MAX.png\" alt=\"PostgreSQL Aggregate Function - MAX\" class=\"wp-image-3995\"\/><\/figure>\n\n\n\n<p>To get the films that have the maximum replacement cost, you use the following query:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\tfilm_id,\n\ttitle\n<span class=\"hljs-keyword\">FROM<\/span>\n\tfilm\n<span class=\"hljs-keyword\">WHERE<\/span>\n\treplacement_cost =(\n\t\t<span class=\"hljs-keyword\">SELECT<\/span>\n\t\t\t<span class=\"hljs-keyword\">MAX<\/span>( replacement_cost )\n\t\t<span class=\"hljs-keyword\">FROM<\/span>\n\t\t\tfilm\n\t)\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span>\n\ttitle;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"208\" height=\"288\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-Aggregate-Function-MAX-with-subquery.png\" alt=\"\" class=\"wp-image-3996\"\/><\/figure>\n\n\n\n<p>The subquery returned the maximum replacement cost which then was used by the outer query for retrieving the film&#8217;s information.<\/p>\n\n\n\n<h2><code>MIN()<\/code> function examples<\/h2>\n\n\n\n<p>The following example uses the <code>MIN()<\/code> function to return the minimum replacement cost of films:<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">SELECT \n    MIN(replacement_cost)\nFROM \n    film;<\/code><\/div><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"54\" height=\"37\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-Aggregate-Function-MIN.png\" alt=\"PostgreSQL Aggregate Function - MIN\" class=\"wp-image-3997\"\/><\/figure>\n\n\n\n<p>To get the films which have the minimum replacement cost, you use the following query:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\tfilm_id,\n\ttitle\n<span class=\"hljs-keyword\">FROM<\/span>\n\tfilm\n<span class=\"hljs-keyword\">WHERE<\/span>\n\treplacement_cost =(\n\t\t<span class=\"hljs-keyword\">SELECT<\/span>\n\t\t\t<span class=\"hljs-keyword\">MIN<\/span>( replacement_cost )\n\t\t<span class=\"hljs-keyword\">FROM<\/span>\n\t\t\tfilm\n\t)\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span>\n\ttitle;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"199\" height=\"288\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-Aggregate-Function-MIN-with-subquery.png\" alt=\"PostgreSQL Aggregate Function - MIN with subquery\" class=\"wp-image-3998\"\/><\/figure>\n\n\n\n<h2><code>SUM()<\/code> function examples<\/h2>\n\n\n\n<p>The following statement uses the <code>SUM()<\/code> function to calculate the&nbsp;total length of films grouped by film&#8217;s rating:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\trating,\n\t<span class=\"hljs-keyword\">SUM<\/span>( rental_duration )\n<span class=\"hljs-keyword\">FROM<\/span>\n\tfilm\n<span class=\"hljs-keyword\">GROUP<\/span> <span class=\"hljs-keyword\">BY<\/span>\n\trating\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span>\n\trating;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following picture illustrates the result:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"115\" height=\"108\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-Aggregate-Function-SUM.png\" alt=\"PostgreSQL Aggregate Function - SUM\" class=\"wp-image-3989\"\/><\/figure>\n\n\n\n<p>In this tutorial, you have learned about PostgreSQL aggregate functions and apply them to summarize data.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>This tutorial introduces you to the PostgreSQL aggregate functions and shows you how to apply them to summarize data.<\/p>\n","protected":false},"author":1,"featured_media":4475,"parent":0,"menu_order":8,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>An Overview of PostgreSQL Aggregate Functions By Examples<\/title>\n<meta name=\"description\" content=\"This tutorial shows you how to use the PostgreSQL aggregate functions such as AVG(), COUNT(), MIN(), MAX(), and SUM() to summarize data.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"5 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/03\/aggregate-functions.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/03\/aggregate-functions.png\",\"width\":150,\"height\":150,\"caption\":\"postgresql aggregate functions\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/\",\"name\":\"An Overview of PostgreSQL Aggregate Functions By Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/#primaryimage\"},\"datePublished\":\"2017-08-13T13:48:15+00:00\",\"dateModified\":\"2021-04-27T01:39:38+00:00\",\"description\":\"This tutorial shows you how to use the PostgreSQL aggregate functions such as AVG(), COUNT(), MIN(), MAX(), and SUM() to summarize data.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Aggregate Functions\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"An Overview of PostgreSQL Aggregate Functions By Examples","description":"This tutorial shows you how to use the PostgreSQL aggregate functions such as AVG(), COUNT(), MIN(), MAX(), and SUM() to summarize data.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/","twitter_misc":{"Est. reading time":"5 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/03\/aggregate-functions.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/03\/aggregate-functions.png","width":150,"height":150,"caption":"postgresql aggregate functions"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/","name":"An Overview of PostgreSQL Aggregate Functions By Examples","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/#primaryimage"},"datePublished":"2017-08-13T13:48:15+00:00","dateModified":"2021-04-27T01:39:38+00:00","description":"This tutorial shows you how to use the PostgreSQL aggregate functions such as AVG(), COUNT(), MIN(), MAX(), and SUM() to summarize data.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-aggregate-functions\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Aggregate Functions"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2874"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=2874"}],"version-history":[{"count":2,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2874\/revisions"}],"predecessor-version":[{"id":6022,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2874\/revisions\/6022"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media\/4475"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=2874"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}