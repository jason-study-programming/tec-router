{"id":3507,"date":"2018-03-17T07:39:16","date_gmt":"2018-03-17T14:39:16","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=3507"},"modified":"2020-07-29T23:26:58","modified_gmt":"2020-07-30T06:26:58","slug":"postgresql-select-into","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-select-into\/","title":{"rendered":"PostgreSQL SELECT INTO"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PostgreSQL <code>SELECT INTO<\/code> statement to create a new table from the result set of a query.<\/p>\n\n\n\n<p class=\"note\">If you are looking for the way to select data into variables, check it out the <a href=\"https:\/\/www.postgresqltutorial.com\/plpgsql-select-into\/\">PL\/pgSQL <code>SELECT INTO<\/code> statement<\/a>.<\/p>\n\n\n\n<h2>Introduction to PostgreSQL SELECT INTO statement<\/h2>\n\n\n\n<p>The PostgreSQL <code>SELECT INTO<\/code> statement <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-table\/\">creates a new table <\/a>and <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-insert\/\">inserts data<\/a> returned from a query into the table. <\/p>\n\n\n\n<p>The new table will have columns with the names the same as columns of the result set of the query. Unlike a regular <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-select\/\"><code>SELECT<\/code><\/a> statement, the <code>SELECT INTO<\/code> statement does not return a result to the client.<\/p>\n\n\n\n<p>The following illustrates the syntax of the PostgreSQL <code>SELECT INTO<\/code> statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n    select_list\n<span class=\"hljs-keyword\">INTO<\/span> [ <span class=\"hljs-keyword\">TEMPORARY<\/span> | TEMP | UNLOGGED ] [ <span class=\"hljs-keyword\">TABLE<\/span> ] new_table_name\n<span class=\"hljs-keyword\">FROM<\/span>\n    table_name\n<span class=\"hljs-keyword\">WHERE<\/span>\n    search_condition;\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To create a new table with the structure and data derived from a result set, you specify the new table name after the <code>INTO<\/code> keyword.<\/p>\n\n\n\n<p>The <code>TEMP<\/code> or <code>TEMPORARY<\/code> keyword is optional; it allows you to create a <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-temporary-table\/\">temporary table<\/a> instead.<\/p>\n\n\n\n<p>The <code>UNLOGGED<\/code> keyword if available will make the new table as an unlogged table.<\/p>\n\n\n\n<p>The <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-where\/\">WHERE<\/a><\/code> clause allows you to specify the rows from the original tables that should be inserted into the new table. Besides the <code>WHERE<\/code> clause, you can use other clauses in the <code>SELECT<\/code> statement for the <code>SELECT INTO<\/code> statement such as <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-inner-join\/\">INNER JOIN<\/a><\/code>, <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-left-join\/\">LEFT JOIN<\/a><\/code>, <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-group-by\/\">GROUP BY<\/a><\/code>, and <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-having\/\">HAVING<\/a><\/code>.<\/p>\n\n\n\n<p>Note that you cannot use the <code><a href=\"https:\/\/www.postgresqltutorial.com\/plpgsql-select-into\/\">SELECT INTO<\/a><\/code> statement in PL\/pgSQL because it interprets the <code>INTO<\/code> clause differently. In this case, you can use the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-table-as\/\">CREATE TABLE AS<\/a><\/code> statement which provides more functionality than the <code>SELECT INTO<\/code> statement.<\/p>\n\n\n\n<h2>PostgreSQL SELECT INTO examples<\/h2>\n\n\n\n<p>We will use the <code>film<\/code> table from the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-sample-database\/\">sample database<\/a> for the demonstration.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"181\" height=\"306\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/film_table.png\" alt=\"PostgreSQL SELECT INTO sample table\" class=\"wp-image-3449\"\/><\/figure>\n\n\n\n<p>The following statement creates a new table called <code>film_r<\/code> that contains films with the rating <code>R<\/code> and rental duration 5 days from the <code>film<\/code> table.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n    film_id,\n    title,\n    rental_rate\n<span class=\"hljs-keyword\">INTO<\/span> <span class=\"hljs-keyword\">TABLE<\/span> film_r\n<span class=\"hljs-keyword\">FROM<\/span>\n    film\n<span class=\"hljs-keyword\">WHERE<\/span>\n    rating = <span class=\"hljs-string\">'R'<\/span>\n<span class=\"hljs-keyword\">AND<\/span> rental_duration = <span class=\"hljs-number\">5<\/span>\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span>\n    title;\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To verify the table creation, you can query data from the <code>film_r<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> * <span class=\"hljs-keyword\">FROM<\/span> film_r;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"370\" height=\"311\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Select-Into-Example.png\" alt=\"\" class=\"wp-image-5185\"\/><\/figure>\n\n\n\n<p>The following statement creates a temporary table named <code>short_film<\/code> that contains the films whose lengths are under 60 minutes.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n    film_id,\n    title,\n    <span class=\"hljs-keyword\">length<\/span> \n<span class=\"hljs-keyword\">INTO<\/span> TEMP <span class=\"hljs-keyword\">TABLE<\/span> short_film\n<span class=\"hljs-keyword\">FROM<\/span>\n    film\n<span class=\"hljs-keyword\">WHERE<\/span>\n    <span class=\"hljs-keyword\">length<\/span> &lt; <span class=\"hljs-number\">60<\/span>\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span>\n    title;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following shows the data from the <code>short_film<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> * <span class=\"hljs-keyword\">FROM<\/span> short_film;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"335\" height=\"290\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Select-Into-Temp-table-example.png\" alt=\"\" class=\"wp-image-5184\"\/><\/figure>\n\n\n\n<p>In this tutorial, you have learned how to use the PostgreSQL <code>SELECT INTO<\/code> statement to create a new table from the result set of a query.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"3507\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-select-into\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL SELECT INTO\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"3507\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-select-into\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL SELECT INTO\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>This tutorial shows you how to use the PostgreSQL SELECT INTO statement to create a new table and fill it with the data returned by a query.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":47,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL SELECT INTO Statement By Practical Examples<\/title>\n<meta name=\"description\" content=\"This tutorial shows you how to use the PostgreSQL SELECT INTO statement to create a new table and fill it with the data returned by a query.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-select-into\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-select-into\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/film_table.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/film_table.png\",\"width\":181,\"height\":306,\"caption\":\"Film table\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-select-into\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-select-into\/\",\"name\":\"PostgreSQL SELECT INTO Statement By Practical Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-select-into\/#primaryimage\"},\"datePublished\":\"2018-03-17T14:39:16+00:00\",\"dateModified\":\"2020-07-30T06:26:58+00:00\",\"description\":\"This tutorial shows you how to use the PostgreSQL SELECT INTO statement to create a new table and fill it with the data returned by a query.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-select-into\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-select-into\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-select-into\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL SELECT INTO\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL SELECT INTO Statement By Practical Examples","description":"This tutorial shows you how to use the PostgreSQL SELECT INTO statement to create a new table and fill it with the data returned by a query.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-select-into\/","twitter_misc":{"Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-select-into\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/film_table.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/film_table.png","width":181,"height":306,"caption":"Film table"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-select-into\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-select-into\/","name":"PostgreSQL SELECT INTO Statement By Practical Examples","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-select-into\/#primaryimage"},"datePublished":"2018-03-17T14:39:16+00:00","dateModified":"2020-07-30T06:26:58+00:00","description":"This tutorial shows you how to use the PostgreSQL SELECT INTO statement to create a new table and fill it with the data returned by a query.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-select-into\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-select-into\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-select-into\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL SELECT INTO"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3507"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=3507"}],"version-history":[{"count":4,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3507\/revisions"}],"predecessor-version":[{"id":5699,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3507\/revisions\/5699"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=3507"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}