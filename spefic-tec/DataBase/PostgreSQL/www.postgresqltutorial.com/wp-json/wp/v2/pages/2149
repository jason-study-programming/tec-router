{"id":2149,"date":"2016-06-17T02:50:14","date_gmt":"2016-06-17T09:50:14","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=2149"},"modified":"2020-07-12T04:18:48","modified_gmt":"2020-07-12T11:18:48","slug":"postgresql-cross-join","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-cross-join\/","title":{"rendered":"PostgreSQL Cross Join By Example"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PostgreSQL CROSS JOIN\u00a0to produce a cartesian product of rows from the joined tables.<\/p>\n\n\n\n<h2>Introduction to the PostgreSQL CROSS JOIN clause<\/h2>\n\n\n\n<p>A <code>CROSS JOIN<\/code> clause allows you to produce a Cartesian Product of rows in two or more tables. <\/p>\n\n\n\n<p>Different from other <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-joins\/\">join<\/a> clauses such as <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-left-join\/\">LEFT JOIN<\/a> \u00a0or <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-inner-join\/\">INNER JOIN<\/a>, the <code>CROSS JOIN<\/code>\u00a0clause does not have a join predicate.<\/p>\n\n\n\n<p>Suppose you have to perform a <code>CROSS JOIN<\/code> of two tables T1 and T2. <\/p>\n\n\n\n<p>If T1 has <code>n<\/code> rows and T2 has <code>m<\/code> rows, the result set will have  <code>nxm<\/code> rows. For example, the T1 has <code>1,000<\/code> rows and T2 has <code>1,000<\/code> rows, the result set will have <code>1,000 x 1,000<\/code> = <code>1,000,000<\/code> rows.<\/p>\n\n\n\n<p>The following illustrates the syntax of the CROSS JOIN syntax:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> select_list\n<span class=\"hljs-keyword\">FROM<\/span> T1\n<span class=\"hljs-keyword\">CROSS<\/span> <span class=\"hljs-keyword\">JOIN<\/span> T2;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following statement is equivalent to the above statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> select_list\n<span class=\"hljs-keyword\">FROM<\/span> T1, T2;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Also, you can use an <code>INNER JOIN<\/code> clause with a condition that always evaluates to true to simulate the cross join:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> *\n<span class=\"hljs-keyword\">FROM<\/span> T1\n<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> T2 <span class=\"hljs-keyword\">ON<\/span> <span class=\"hljs-literal\">true<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>PostgreSQL CROSS JOIN example<\/h2>\n\n\n\n<p>The following <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-table\/\">CREATE TABLE<\/a> statements create T1 and T2 tables and <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-insert\/\">insert some sample data<\/a> for the cross demonstration.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">TABLE<\/span> <span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">EXISTS<\/span> T1;\n<span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> T1 (label <span class=\"hljs-built_in\">CHAR<\/span>(<span class=\"hljs-number\">1<\/span>) PRIMARY <span class=\"hljs-keyword\">KEY<\/span>);\n\n<span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">TABLE<\/span> <span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">EXISTS<\/span> T2;\n<span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> T2 (score <span class=\"hljs-built_in\">INT<\/span> PRIMARY <span class=\"hljs-keyword\">KEY<\/span>);\n\n<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> T1 (label)\n<span class=\"hljs-keyword\">VALUES<\/span>\n\t(<span class=\"hljs-string\">'A'<\/span>),\n\t(<span class=\"hljs-string\">'B'<\/span>);\n\n<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> T2 (score)\n<span class=\"hljs-keyword\">VALUES<\/span>\n\t(<span class=\"hljs-number\">1<\/span>),\n\t(<span class=\"hljs-number\">2<\/span>),\n\t(<span class=\"hljs-number\">3<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following statement uses the <code>CROSS JOIN<\/code> operator to join the table T1 with the table T2.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> *\n<span class=\"hljs-keyword\">FROM<\/span> T1\n<span class=\"hljs-keyword\">CROSS<\/span> <span class=\"hljs-keyword\">JOIN<\/span> T2;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\"> label | score\n-------+-------\n A     |     1\n B     |     1\n A     |     2\n B     |     2\n A     |     3\n B     |     3\n(6 rows)<\/code><\/div><\/pre>\n\n\n<p>The following picture illustrates the result of the <code>CROSS JOIN<\/code> when joining the table T1 to the table T2:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"356\" height=\"428\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-CROSS-JOIN-illustration.png\" alt=\"PostgreSQL CROSS JOIN illustration\" class=\"wp-image-2151\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-CROSS-JOIN-illustration.png 356w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-CROSS-JOIN-illustration-250x300.png 250w\" sizes=\"(max-width: 356px) 100vw, 356px\" \/><\/figure><\/div>\n\n\n\n<p>In this tutorial, you have&nbsp;learned how to use the PostgreSQL CROSS JOIN clause to make a Cartesian Product of rows in two or more tables.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2149\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-cross-join\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Cross Join By Example\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2149\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-cross-join\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Cross Join By Example\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you will learn how to use the PostgreSQL CROSS JOIN\u00a0to produce a cartesian product of rows from the joined tables. Introduction to the PostgreSQL CROSS JOIN clause A CROSS JOIN clause allows you to produce a Cartesian Product of rows in two or more tables. Different from other join clauses such [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":19,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL CROSS JOIN By Example<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to use the PostgresQL CROSS JOIN to produce the cartesian product of rows in the joined tables.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-CROSS-JOIN-illustration.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-CROSS-JOIN-illustration.png\",\"width\":356,\"height\":428},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/\",\"name\":\"PostgreSQL CROSS JOIN By Example\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/#primaryimage\"},\"datePublished\":\"2016-06-17T09:50:14+00:00\",\"dateModified\":\"2020-07-12T11:18:48+00:00\",\"description\":\"In this tutorial, you will learn how to use the PostgresQL CROSS JOIN to produce the cartesian product of rows in the joined tables.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL Cross Join By Example\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL CROSS JOIN By Example","description":"In this tutorial, you will learn how to use the PostgresQL CROSS JOIN to produce the cartesian product of rows in the joined tables.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/","twitter_misc":{"Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-CROSS-JOIN-illustration.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-CROSS-JOIN-illustration.png","width":356,"height":428},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/","name":"PostgreSQL CROSS JOIN By Example","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/#primaryimage"},"datePublished":"2016-06-17T09:50:14+00:00","dateModified":"2020-07-12T11:18:48+00:00","description":"In this tutorial, you will learn how to use the PostgresQL CROSS JOIN to produce the cartesian product of rows in the joined tables.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL Cross Join By Example"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2149"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=2149"}],"version-history":[{"count":4,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2149\/revisions"}],"predecessor-version":[{"id":4890,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2149\/revisions\/4890"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=2149"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}