{"id":5242,"date":"2020-07-20T00:19:04","date_gmt":"2020-07-20T07:19:04","guid":{"rendered":"https:\/\/www.postgresqltutorial.com\/?page_id=5242"},"modified":"2020-07-20T00:21:50","modified_gmt":"2020-07-20T07:21:50","slug":"postgresql-right-join","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-right-join\/","title":{"rendered":"PostgreSQL RIGHT JOIN"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will how to use the PostgreSQL <code>RIGHT JOIN<\/code> to select data from two tables.<\/p>\n\n\n\n<h2>Setting up sample tables<\/h2>\n\n\n\n<p>Suppose that you have two tables <code>films<\/code> and <code>film_reviews<\/code> like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">TABLE<\/span> <span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">EXISTS<\/span> films;\n<span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">TABLE<\/span> <span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">EXISTS<\/span> film_reviews;\n\n<span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> films(\n   film_id <span class=\"hljs-built_in\">SERIAL<\/span> PRIMARY <span class=\"hljs-keyword\">KEY<\/span>,\n   title <span class=\"hljs-built_in\">varchar<\/span>(<span class=\"hljs-number\">255<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>\n);\n\n<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> films(title)\n<span class=\"hljs-keyword\">VALUES<\/span>(<span class=\"hljs-string\">'Joker'<\/span>),\n      (<span class=\"hljs-string\">'Avengers: Endgame'<\/span>),\n      (<span class=\"hljs-string\">'Parasite'<\/span>);\n\n<span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> film_reviews(\n   review_id <span class=\"hljs-built_in\">SERIAL<\/span> PRIMARY <span class=\"hljs-keyword\">KEY<\/span>,\n   film_id <span class=\"hljs-built_in\">INT<\/span>,\n   review <span class=\"hljs-built_in\">VARCHAR<\/span>(<span class=\"hljs-number\">255<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>\t\n);\n\n<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> film_reviews(film_id, review)\n<span class=\"hljs-keyword\">VALUES<\/span>(<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-string\">'Excellent'<\/span>),\n      (<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-string\">'Awesome'<\/span>),\n      (<span class=\"hljs-number\">2<\/span>, <span class=\"hljs-string\">'Cool'<\/span>),\n      (<span class=\"hljs-literal\">NULL<\/span>, <span class=\"hljs-string\">'Beautiful'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>A film can have zero or many reviews and a review belongs to zero or one film. The <code>film_id<\/code> column in the <code>films<\/code> references the <code>film_id<\/code> column in the <code>film_reviews<\/code> table.<\/p>\n\n\n\n<p>The following shows the contents of the <code>films<\/code> and <code>film_reviews<\/code> tables:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> * <span class=\"hljs-keyword\">FROM<\/span> films;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"250\" height=\"112\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-RIGHT-JOIN-films-table.png\" alt=\"\" class=\"wp-image-5246\"\/><\/figure>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> * <span class=\"hljs-keyword\">FROM<\/span> film_reviews;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"325\" height=\"138\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-RIGHT-JOIN-film_reviews-table.png\" alt=\"\" class=\"wp-image-5247\"\/><\/figure>\n\n\n\n<p>The film id 1 has two reviews. The film id 2 has 1 review. The film id 3 has no reviews. The review id 4 does not associate with any film.<\/p>\n\n\n\n<h2>Introduction to PostgreSQL RIGHT JOIN clause<\/h2>\n\n\n\n<p>The following statement uses the <code>RIGHT JOIN<\/code> to select data from the <code>films<\/code> and <code>film_reviews<\/code> tables:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> \n   review, \n   title\n<span class=\"hljs-keyword\">FROM<\/span> \n   films\n<span class=\"hljs-keyword\">RIGHT<\/span> <span class=\"hljs-keyword\">JOIN<\/span> film_reviews \n   <span class=\"hljs-keyword\">ON<\/span> film_reviews.film_id = films.film_id;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"351\" height=\"139\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-RIGHT-JOIN-example.png\" alt=\"PostgreSQL RIGHT JOIN example\" class=\"wp-image-5248\"\/><\/figure>\n\n\n\n<p>In this statement, <code>films<\/code> is the left table and <code>film_reviews<\/code> is the right table.<\/p>\n\n\n\n<p>The <code>RIGHT JOIN<\/code> clause starts selecting data from the right table (<code>film_reviews<\/code>). <\/p>\n\n\n\n<p>For each row from the right table (<code>film_reviews<\/code>), it checks if the value in the <code>film_id<\/code> column of the <code>film_reviews<\/code> table equals the value in the <code>film_id<\/code> column of every row from the left table (<code>films<\/code>).<\/p>\n\n\n\n<p>If they are equal, the <code>RIGHT JOIN<\/code> creates a new row that contains columns from both tables specified in the <code>SELECT<\/code> clause and includes this new row in the result set.<\/p>\n\n\n\n<p>Otherwise, the <code>RIGHT JOIN<\/code> still creates a new row that contains columns from both tables and includes this new row in the result set. However, it fills the columns from the left table (<code>films<\/code>) with <code>NULL<\/code>. <\/p>\n\n\n\n<p>In other words, the <code>RIGHT JOIN<\/code> selects all rows from the right table whether or not they have matching rows from the left table. <\/p>\n\n\n\n<p>Based on the data from the <code>films<\/code> and <code>film_reviews<\/code> tables:<\/p>\n\n\n\n<ul><li>The review with id 1 matches with the film id 1.<\/li><li>The review with id 2 matches with film id 2. <\/li><li>The review with id 3 matches with the film id 2. <\/li><li>The review with id 4 doesn&#8217;t match any film therefore the <code>title<\/code> column is filled with NULL.<\/li><\/ul>\n\n\n\n<p>Note that the <code>RIGHT OUTER JOIN<\/code> is the same as <code>RIGHT JOIN<\/code>. The <code>OUTER<\/code> keyword is optional<\/p>\n\n\n\n<p>The following Venn diagram illustrates how the <code>RIGHT JOIN<\/code> works:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"396\" height=\"285\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/12\/PostgreSQL-Join-Right-Join.png\" alt=\"PostgreSQL Join - Right Join\" class=\"wp-image-3678\"\/><\/figure>\n\n\n\n<h2>PostgreSQL RIGHT JOIN with USING syntax <\/h2>\n\n\n\n<p>Because the joined column has the same name (<code>film_id<\/code>), you can use the <code>USING<\/code> syntax in the join predicate like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> review, title\n<span class=\"hljs-keyword\">FROM<\/span> films\n<span class=\"hljs-keyword\">RIGHT<\/span> <span class=\"hljs-keyword\">JOIN<\/span> film_reviews <span class=\"hljs-keyword\">USING<\/span> (film_id);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This query returns the same result as if it used the <code>ON<\/code> clause.<\/p>\n\n\n\n<h2>PostgreSQL RIGHT JOIN with WHERE clause<\/h2>\n\n\n\n<p>To find the rows from the right table that does not have any corresponding rows in the left table, you add a <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-where\/\">WHERE<\/a><\/code> clause like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> review, title\n<span class=\"hljs-keyword\">FROM<\/span> films\n<span class=\"hljs-keyword\">RIGHT<\/span> <span class=\"hljs-keyword\">JOIN<\/span> film_reviews <span class=\"hljs-keyword\">using<\/span> (film_id)\n<span class=\"hljs-keyword\">WHERE<\/span> title <span class=\"hljs-keyword\">IS<\/span> <span class=\"hljs-literal\">NULL<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"348\" height=\"66\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-RIGHT-JOIN-with-WHERE-clause.png\" alt=\"\" class=\"wp-image-5249\"\/><\/figure>\n\n\n\n<p>In this tutorial, you have learned how to use the PostgreSQL <code>RIGHT JOIN<\/code> clause to join data from two tables.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"5242\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-right-join\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL RIGHT JOIN\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"5242\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-right-join\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL RIGHT JOIN\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will how to use the PostgreSQL RIGHT JOIN to select data from two tables.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":16,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL RIGHT JOIN<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-RIGHT-JOIN-films-table.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-RIGHT-JOIN-films-table.png\",\"width\":250,\"height\":112},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/\",\"name\":\"PostgreSQL RIGHT JOIN\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/#primaryimage\"},\"datePublished\":\"2020-07-20T07:19:04+00:00\",\"dateModified\":\"2020-07-20T07:21:50+00:00\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL RIGHT JOIN\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL RIGHT JOIN","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-RIGHT-JOIN-films-table.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-RIGHT-JOIN-films-table.png","width":250,"height":112},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/","name":"PostgreSQL RIGHT JOIN","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/#primaryimage"},"datePublished":"2020-07-20T07:19:04+00:00","dateModified":"2020-07-20T07:21:50+00:00","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL RIGHT JOIN"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5242"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=5242"}],"version-history":[{"count":5,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5242\/revisions"}],"predecessor-version":[{"id":5252,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5242\/revisions\/5252"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=5242"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}