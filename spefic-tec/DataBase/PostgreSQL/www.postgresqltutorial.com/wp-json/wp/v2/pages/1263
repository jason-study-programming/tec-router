{"id":1263,"date":"2015-09-02T19:54:40","date_gmt":"2015-09-03T02:54:40","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=1263"},"modified":"2020-07-09T21:00:19","modified_gmt":"2020-07-10T04:00:19","slug":"postgresql-nullif","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-nullif\/","title":{"rendered":"PostgreSQL NULLIF"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: this tutorial shows you how to use PostgreSQL NULLIF function to handle null values. We will show you some&nbsp;examples of using the NULLIF function.<\/p>\n\n\n\n<h2>PostgreSQL&nbsp;NULLIF function syntax<\/h2>\n\n\n\n<p>The <code>NULLIF<\/code> function is one of the most common conditional expressions provided by PostgreSQL. The following illustrates the syntax of the <code>NULLIF<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">NULLIF(argument_1,argument_2);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>NULLIF<\/code> function returns a null value if <code>argument_1<\/code> equals to <code>argument_2<\/code>, otherwise it returns <code>argument_1<\/code>.<\/p>\n\n\n\n<p>See the following examples:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">NULLIF<\/span> (<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">1<\/span>); <span class=\"hljs-comment\">-- return NULL<\/span>\n\n<span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">NULLIF<\/span> (<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">0<\/span>); <span class=\"hljs-comment\">-- return 1<\/span>\n\n<span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">NULLIF<\/span> (<span class=\"hljs-string\">'A'<\/span>, <span class=\"hljs-string\">'B'<\/span>); <span class=\"hljs-comment\">-- return A<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>PostgreSQL NULLIF function example<\/h2>\n\n\n\n<p>Let&#8217;s take a look at an example of using the <code>NULLIF<\/code> function.<\/p>\n\n\n\n<p>First, we <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-table\/\">create a table<\/a> named <code>posts<\/code> as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> posts (\n  <span class=\"hljs-keyword\">id<\/span> <span class=\"hljs-built_in\">serial<\/span> primary <span class=\"hljs-keyword\">key<\/span>,\n\ttitle <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">255<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n\texcerpt <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">150<\/span>),\n\t<span class=\"hljs-keyword\">body<\/span> <span class=\"hljs-built_in\">TEXT<\/span>,\n\tcreated_at <span class=\"hljs-built_in\">TIMESTAMP<\/span> <span class=\"hljs-keyword\">DEFAULT<\/span> <span class=\"hljs-keyword\">CURRENT_TIMESTAMP<\/span>,\n\tupdated_at <span class=\"hljs-built_in\">TIMESTAMP<\/span>\n);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, we <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-insert\/\">insert some sample data<\/a> into the posts table.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> posts (title, excerpt, <span class=\"hljs-keyword\">body<\/span>)\n<span class=\"hljs-keyword\">VALUES<\/span>\n      (<span class=\"hljs-string\">'test post 1'<\/span>,<span class=\"hljs-string\">'test post excerpt 1'<\/span>,<span class=\"hljs-string\">'test post body 1'<\/span>),\n      (<span class=\"hljs-string\">'test post 2'<\/span>,<span class=\"hljs-string\">''<\/span>,<span class=\"hljs-string\">'test post body 2'<\/span>),\n      (<span class=\"hljs-string\">'test post 3'<\/span>, <span class=\"hljs-literal\">null<\/span> ,<span class=\"hljs-string\">'test post body 3'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, our goal is to display the posts overview page that shows title and excerpt of each posts. In case the excerpt is not provided, we use the first 40 characters of the post body. We can simply use&nbsp;the following query to get all rows in the <code>posts<\/code> table.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">ID<\/span>,\n\ttitle,\n\texcerpt\n<span class=\"hljs-keyword\">FROM<\/span>\n\tposts;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><a href=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/09\/PosgreSQL-NULLIF-Posts-table.png\"><img loading=\"lazy\" width=\"267\" height=\"84\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/09\/PosgreSQL-NULLIF-Posts-table.png\" alt=\"PosgreSQL NULLIF - Posts table\" class=\"wp-image-1265\"\/><\/a><\/figure>\n\n\n\n<p>We see the null value in the excerpt column. To substitute this null value, we can use the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-coalesce\/\">COALESCE function<\/a> as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">id<\/span>,\n\ttitle,\n\t<span class=\"hljs-keyword\">COALESCE<\/span> (excerpt, <span class=\"hljs-keyword\">LEFT<\/span>(<span class=\"hljs-keyword\">body<\/span>, <span class=\"hljs-number\">40<\/span>))\n<span class=\"hljs-keyword\">FROM<\/span>\n\tposts;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><a href=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/09\/PosgreSQL-NULLIF-COALESCE.png\"><img loading=\"lazy\" width=\"268\" height=\"82\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/09\/PosgreSQL-NULLIF-COALESCE.png\" alt=\"PosgreSQL NULLIF - COALESCE\" class=\"wp-image-1266\"\/><\/a><\/figure>\n\n\n\n<p>Unfortunately, there is mix between null value&nbsp;and &#8221; (empty) in the excerpt column. This is why we need to use the <code>NULLIF<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t<span class=\"hljs-keyword\">id<\/span>,\n\ttitle,\n\t<span class=\"hljs-keyword\">COALESCE<\/span> (\n\t\t<span class=\"hljs-keyword\">NULLIF<\/span> (excerpt, <span class=\"hljs-string\">''<\/span>),\n\t\t<span class=\"hljs-keyword\">LEFT<\/span> (<span class=\"hljs-keyword\">body<\/span>, <span class=\"hljs-number\">40<\/span>)\n\t)\n<span class=\"hljs-keyword\">FROM<\/span>\n\tposts;\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Let&#8217;s examine the expression in more detail:<\/p>\n\n\n\n<ul><li>First, the <code>NULLIF<\/code> function returns a null value if the excerpt is empty, otherwise it returns the excerpt. The result of the <code>NULLIF<\/code> function is used by the <code>COALESCE<\/code> function.<\/li><li>Second, the <code>COALESCE<\/code> function checks if the first argument, which is&nbsp;provided by the <code>NULLIF<\/code> function, if it is null, then it returns the first 40 characters of the body; otherwise it returns the excerpt in case the excerpt is not null.<\/li><\/ul>\n\n\n\n<h2>Use NULLIF to prevent division-by-zero error<\/h2>\n\n\n\n<p>Another great example of using the <code>NULLIF<\/code> function is to prevent division-by-zero error. Let&#8217;s take a look at the following example.<\/p>\n\n\n\n<p>First, we <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-table\/\">create a new table<\/a> named members:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> members (\n\t<span class=\"hljs-keyword\">ID<\/span> <span class=\"hljs-built_in\">serial<\/span> PRIMARY <span class=\"hljs-keyword\">KEY<\/span>,\n\tfirst_name <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">50<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n\tlast_name <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">50<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n\tgender <span class=\"hljs-built_in\">SMALLINT<\/span> <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span> <span class=\"hljs-comment\">-- 1: male, 2 female<\/span>\n);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, we <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-insert\/\">insert some rows<\/a> for testing:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> members (\n\tfirst_name,\n\tlast_name,\n\tgender\n)\n<span class=\"hljs-keyword\">VALUES<\/span>\n\t(<span class=\"hljs-string\">'John'<\/span>, <span class=\"hljs-string\">'Doe'<\/span>, <span class=\"hljs-number\">1<\/span>),\n\t(<span class=\"hljs-string\">'David'<\/span>, <span class=\"hljs-string\">'Dave'<\/span>, <span class=\"hljs-number\">1<\/span>),\n\t(<span class=\"hljs-string\">'Bush'<\/span>, <span class=\"hljs-string\">'Lily'<\/span>, <span class=\"hljs-number\">2<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, if we want to calculate the ratio between male and female members, we use the following query:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t(<span class=\"hljs-keyword\">SUM<\/span> (\n\t\t<span class=\"hljs-keyword\">CASE<\/span>\n\t\t<span class=\"hljs-keyword\">WHEN<\/span> gender = <span class=\"hljs-number\">1<\/span> <span class=\"hljs-keyword\">THEN<\/span>\n\t\t\t<span class=\"hljs-number\">1<\/span>\n\t\t<span class=\"hljs-keyword\">ELSE<\/span>\n\t\t\t<span class=\"hljs-number\">0<\/span>\n\t\t<span class=\"hljs-keyword\">END<\/span>\n\t) \/ <span class=\"hljs-keyword\">SUM<\/span> (\n\t\t<span class=\"hljs-keyword\">CASE<\/span>\n\t\t<span class=\"hljs-keyword\">WHEN<\/span> gender = <span class=\"hljs-number\">2<\/span> <span class=\"hljs-keyword\">THEN<\/span>\n\t\t\t<span class=\"hljs-number\">1<\/span>\n\t\t<span class=\"hljs-keyword\">ELSE<\/span>\n\t\t\t<span class=\"hljs-number\">0<\/span>\n\t\t<span class=\"hljs-keyword\">END<\/span>\n\t) ) * <span class=\"hljs-number\">100<\/span> <span class=\"hljs-keyword\">AS<\/span> <span class=\"hljs-string\">\"Male\/Female ratio\"<\/span>\n<span class=\"hljs-keyword\">FROM<\/span>\n\tmembers;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To calculate the total number of male members, we use the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-sum-function\/\">SUM function<\/a> and <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-case\/\">CASE expression<\/a>. If the gender is 1, the <code>CASE<\/code> expression returns 1, otherwise it returns 0; the <code>SUM<\/code> function is used to calculate total of male members. The same logic is also applied for calculating the total number of female members.<\/p>\n\n\n\n<p>Then the total of male members is divided by the total of female members to return&nbsp;the ratio. In this case, it returns 200%, which is correct .<\/p>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/09\/PosgreSQL-NULLIF-division-by-zero.png\"><img loading=\"lazy\" width=\"137\" height=\"43\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/09\/PosgreSQL-NULLIF-division-by-zero.png\" alt=\"PosgreSQL NULLIF - division by zero\" class=\"wp-image-1267\"\/><\/a><\/figure>\n\n\n\n<p>Fourth, let&#8217;s remove&nbsp;the female member:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">DELETE<\/span>\n<span class=\"hljs-keyword\">FROM<\/span>\n\tmembers\n<span class=\"hljs-keyword\">WHERE<\/span>\n\tgender = <span class=\"hljs-number\">2<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>And execute the query to calculate the male\/female ratio again, we got the following error message:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><div><code class=\"hljs language-css\"><span class=\"hljs-selector-attr\">[Err]<\/span> <span class=\"hljs-selector-tag\">ERROR<\/span>:  <span class=\"hljs-selector-tag\">division<\/span> <span class=\"hljs-selector-tag\">by<\/span> <span class=\"hljs-selector-tag\">zero<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The reason is that the number of female is zero. To prevent this division by zero error, we use the <code>NULLIF<\/code> function as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\t(\n\t\t<span class=\"hljs-keyword\">SUM<\/span> (\n\t\t\t<span class=\"hljs-keyword\">CASE<\/span>\n\t\t\t<span class=\"hljs-keyword\">WHEN<\/span> gender = <span class=\"hljs-number\">1<\/span> <span class=\"hljs-keyword\">THEN<\/span>\n\t\t\t\t<span class=\"hljs-number\">1<\/span>\n\t\t\t<span class=\"hljs-keyword\">ELSE<\/span>\n\t\t\t\t<span class=\"hljs-number\">0<\/span>\n\t\t\t<span class=\"hljs-keyword\">END<\/span>\n\t\t) \/ <span class=\"hljs-keyword\">NULLIF<\/span> (\n\t\t\t<span class=\"hljs-keyword\">SUM<\/span> (\n\t\t\t\t<span class=\"hljs-keyword\">CASE<\/span>\n\t\t\t\t<span class=\"hljs-keyword\">WHEN<\/span> gender = <span class=\"hljs-number\">2<\/span> <span class=\"hljs-keyword\">THEN<\/span>\n\t\t\t\t\t<span class=\"hljs-number\">1<\/span>\n\t\t\t\t<span class=\"hljs-keyword\">ELSE<\/span>\n\t\t\t\t\t<span class=\"hljs-number\">0<\/span>\n\t\t\t\t<span class=\"hljs-keyword\">END<\/span>\n\t\t\t),\n\t\t\t<span class=\"hljs-number\">0<\/span>\n\t\t)\n\t) * <span class=\"hljs-number\">100<\/span> <span class=\"hljs-keyword\">AS<\/span> <span class=\"hljs-string\">\"Male\/Female ratio\"<\/span>\n<span class=\"hljs-keyword\">FROM<\/span>\n\tmembers;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>NULLIF<\/code> function checks if the number of female members is zero, it returns null. The total of male members is divided by a null value returns a null value, which is correct.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"137\" height=\"46\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/09\/PosgreSQL-NULLIF-division-by-zero-result.png\" alt=\"PosgreSQL NULLIF - division by zero result\" class=\"wp-image-1268\"\/><\/figure>\n\n\n\n<p>In this tutorial, we have shown you how to apply the&nbsp;NULLIF function&nbsp;to substitute the null values for displaying data and preventing division by zero error.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1263\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-nullif\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL NULLIF\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1263\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-nullif\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL NULLIF\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: this tutorial shows you how to use PostgreSQL NULLIF function to handle null values. We will show you some&nbsp;examples of using the NULLIF function. PostgreSQL&nbsp;NULLIF function syntax The NULLIF function is one of the most common conditional expressions provided by PostgreSQL. The following illustrates the syntax of the NULLIF function: The NULLIF function returns [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":86,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL NULLIF function<\/title>\n<meta name=\"description\" content=\"This tutorial shows you how to apply the PostgreSQL NULLIF function to substitute the null values for displaying data and preventing division by zero error.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-nullif\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-nullif\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/09\/PosgreSQL-NULLIF-Posts-table.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/09\/PosgreSQL-NULLIF-Posts-table.png\",\"width\":267,\"height\":84},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-nullif\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-nullif\/\",\"name\":\"PostgreSQL NULLIF function\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-nullif\/#primaryimage\"},\"datePublished\":\"2015-09-03T02:54:40+00:00\",\"dateModified\":\"2020-07-10T04:00:19+00:00\",\"description\":\"This tutorial shows you how to apply the PostgreSQL NULLIF function to substitute the null values for displaying data and preventing division by zero error.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-nullif\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-nullif\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-nullif\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL NULLIF\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL NULLIF function","description":"This tutorial shows you how to apply the PostgreSQL NULLIF function to substitute the null values for displaying data and preventing division by zero error.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-nullif\/","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-nullif\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/09\/PosgreSQL-NULLIF-Posts-table.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2015\/09\/PosgreSQL-NULLIF-Posts-table.png","width":267,"height":84},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-nullif\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-nullif\/","name":"PostgreSQL NULLIF function","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-nullif\/#primaryimage"},"datePublished":"2015-09-03T02:54:40+00:00","dateModified":"2020-07-10T04:00:19+00:00","description":"This tutorial shows you how to apply the PostgreSQL NULLIF function to substitute the null values for displaying data and preventing division by zero error.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-nullif\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-nullif\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-nullif\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL NULLIF"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1263"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=1263"}],"version-history":[{"count":1,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1263\/revisions"}],"predecessor-version":[{"id":4551,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1263\/revisions\/4551"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=1263"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}