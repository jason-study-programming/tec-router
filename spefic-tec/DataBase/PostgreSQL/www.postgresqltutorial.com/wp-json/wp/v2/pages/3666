{"id":3666,"date":"2018-12-01T22:52:21","date_gmt":"2018-12-02T05:52:21","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=3666"},"modified":"2021-03-13T17:51:11","modified_gmt":"2021-03-14T00:51:11","slug":"postgresql-joins","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-joins\/","title":{"rendered":"PostgreSQL Joins"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about various kinds of PostgreSQL joins including inner join, left join, right join, and full outer join.<\/p>\n\n\n\n<p>PostgreSQL join is used to combine columns from one (<a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/\">self-join<\/a>) or more tables based on the values of the common columns between related tables. The common columns are typically the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-primary-key\/\">primary key<\/a> columns of the first table and <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-foreign-key\/\">foreign key<\/a> columns of the second table.<\/p>\n\n\n\n<p>PostgreSQL supports <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-inner-join\/\">inner join<\/a>,<a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-left-join\/\"> left join<\/a>, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/\">right join<\/a>, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/\">full outer join<\/a>, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-cross-join\/\">cross join<\/a>, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-natural-join\/\">natural join<\/a>, and a special kind of join called <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/\">self-join<\/a>.<\/p>\n\n\n\n<h2>Setting up sample tables<\/h2>\n\n\n\n<p>Suppose you have two tables called <code>basket_a<\/code> and <code>basket_b<\/code> that store fruits:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> basket_a (\n    a <span class=\"hljs-built_in\">INT<\/span> PRIMARY <span class=\"hljs-keyword\">KEY<\/span>,\n    fruit_a <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">100<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>\n);\n\n<span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> basket_b (\n    b <span class=\"hljs-built_in\">INT<\/span> PRIMARY <span class=\"hljs-keyword\">KEY<\/span>,\n    fruit_b <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">100<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>\n);\n\n<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> basket_a (a, fruit_a)\n<span class=\"hljs-keyword\">VALUES<\/span>\n    (<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-string\">'Apple'<\/span>),\n    (<span class=\"hljs-number\">2<\/span>, <span class=\"hljs-string\">'Orange'<\/span>),\n    (<span class=\"hljs-number\">3<\/span>, <span class=\"hljs-string\">'Banana'<\/span>),\n    (<span class=\"hljs-number\">4<\/span>, <span class=\"hljs-string\">'Cucumber'<\/span>);\n\n<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> basket_b (b, fruit_b)\n<span class=\"hljs-keyword\">VALUES<\/span>\n    (<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-string\">'Orange'<\/span>),\n    (<span class=\"hljs-number\">2<\/span>, <span class=\"hljs-string\">'Apple'<\/span>),\n    (<span class=\"hljs-number\">3<\/span>, <span class=\"hljs-string\">'Watermelon'<\/span>),\n    (<span class=\"hljs-number\">4<\/span>, <span class=\"hljs-string\">'Pear'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The tables have some common fruits such as <code>apple<\/code> and <code>orange<\/code>. <\/p>\n\n\n\n<p>The following statement returns data from the <code>basket_a<\/code> table:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large is-resized\"><img loading=\"lazy\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-join-left-table.png\" alt=\"\" class=\"wp-image-4856\" width=\"257\" height=\"138\"\/><\/figure>\n\n\n\n<p>And the following statement returns data from the <code>basket_b<\/code> table:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"258\" height=\"137\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-join-right-table.png\" alt=\"\" class=\"wp-image-4857\"\/><\/figure>\n\n\n\n<h2>PostgreSQL inner join<\/h2>\n\n\n\n<p>The following statement joins the first table (<code>basket_a<\/code>) with the second table (<code>basket_b<\/code>) by matching the values in the <code>fruit_a<\/code> and <code>fruit_b<\/code> columns:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n    a,\n    fruit_a,\n    b,\n    fruit_b\n<span class=\"hljs-keyword\">FROM<\/span>\n    basket_a\n<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> basket_b\n    <span class=\"hljs-keyword\">ON<\/span> fruit_a = fruit_b;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"461\" height=\"89\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-join-inner-join-example.png\" alt=\"\" class=\"wp-image-4640\"\/><\/figure>\n\n\n\n<p>The inner join examines each row in the first table (<code>basket_a<\/code>). It compares the value in the <code>fruit_a<\/code> column with the value in the <code>fruit_b<\/code> column of each row in the second table (<code>basket_b<\/code>). If these values are equal, the inner join creates a new row that contains columns from both tables and adds this new row the result set.<\/p>\n\n\n\n<p>The following Venn diagram illustrates the inner join:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"379\" height=\"288\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/12\/PostgreSQL-Join-Inner-Join.png\" alt=\"PostgreSQL Join - Inner Join\" class=\"wp-image-3675\"\/><\/figure>\n\n\n\n<h2>PostgreSQL left join<\/h2>\n\n\n\n<p>The following statement uses the left join clause to join the <code>basket_a<\/code> table with the <code>basket_b<\/code> table.  In the left join context, the first table is called the left table and the second table is called the right table. <\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n    a,\n    fruit_a,\n    b,\n    fruit_b\n<span class=\"hljs-keyword\">FROM<\/span>\n    basket_a\n<span class=\"hljs-keyword\">LEFT<\/span> <span class=\"hljs-keyword\">JOIN<\/span> basket_b \n   <span class=\"hljs-keyword\">ON<\/span> fruit_a = fruit_b;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"479\" height=\"136\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-join-left-join-example.png\" alt=\"\" class=\"wp-image-4641\"\/><\/figure>\n\n\n\n<p>The left join starts selecting data from the left table. It compares values in the fruit_a column with the values in the fruit_b column in the basket_b table. <\/p>\n\n\n\n<p>If these values are equal, the left join creates a new row that contains columns of both tables and adds this new row to the result set.  (see the row #1 and #2 in the result set).<\/p>\n\n\n\n<p>In case the values do not equal, the left join also creates a new row that contains columns from both tables and adds it to the result set. However, it fills the columns of the right table (<code>basket_b<\/code>) with null. (see the row #3 and #4 in the result set).<\/p>\n\n\n\n<p>The following Venn diagram illustrates the left join:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"378\" height=\"290\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/12\/PostgreSQL-Join-Left-Join.png\" alt=\"PostgreSQL Join - Left Join\" class=\"wp-image-3676\"\/><\/figure>\n\n\n\n<p>To select rows from the left table that do not have matching rows in the right table, you use the left join with a <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-where\/\">WHERE<\/a><\/code> clause. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n    a,\n    fruit_a,\n    b,\n    fruit_b\n<span class=\"hljs-keyword\">FROM<\/span>\n    basket_a\n<span class=\"hljs-keyword\">LEFT<\/span> <span class=\"hljs-keyword\">JOIN<\/span> basket_b \n    <span class=\"hljs-keyword\">ON<\/span> fruit_a = fruit_b\n<span class=\"hljs-keyword\">WHERE<\/span> b <span class=\"hljs-keyword\">IS<\/span> <span class=\"hljs-literal\">NULL<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The output is:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"463\" height=\"88\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-join-left-join-with-where.png\" alt=\"\" class=\"wp-image-4642\"\/><\/figure>\n\n\n\n<p class=\"note\">Note that the <code>LEFT JOIN<\/code> is the same as the <code>LEFT OUTER JOIN<\/code> so you can use them interchangeably.<\/p>\n\n\n\n<p>The following Venn diagram illustrates the left join that returns rows from the left table that do not have matching rows from the right table:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"382\" height=\"318\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/12\/PostgreSQL-Join-Left-Join-with-Where.png\" alt=\"PostgreSQL Join - Left Join with Where\" class=\"wp-image-3677\"\/><\/figure>\n\n\n\n<h2>PostgreSQL right join<\/h2>\n\n\n\n<p>The <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-right-join\/\">right join<\/a> is a reversed version of the left join. The right join starts selecting data from the right table. It compares each value in the fruit_b column of every row in the right table with each value in the fruit_a column of every row in the fruit_a table. <\/p>\n\n\n\n<p>If these values are equal, the right join creates a new row that contains columns from both tables. <\/p>\n\n\n\n<p>In case these values are not equal, the right join also creates a new row that contains columns from both tables. However, it fills the columns in the left table with NULL.<\/p>\n\n\n\n<p>The following statement uses the right join to join the <code>basket_a<\/code> table with the <code>basket_b<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n    a,\n    fruit_a,\n    b,\n    fruit_b\n<span class=\"hljs-keyword\">FROM<\/span>\n    basket_a\n<span class=\"hljs-keyword\">RIGHT<\/span> <span class=\"hljs-keyword\">JOIN<\/span> basket_b <span class=\"hljs-keyword\">ON<\/span> fruit_a = fruit_b;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Here is the output:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"493\" height=\"140\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-join-right-join-example.png\" alt=\"\" class=\"wp-image-4643\"\/><\/figure>\n\n\n\n<p>The following Venn diagram illustrates the right join:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"396\" height=\"285\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/12\/PostgreSQL-Join-Right-Join.png\" alt=\"PostgreSQL Join - Right Join\" class=\"wp-image-3678\"\/><\/figure>\n\n\n\n<p>Similarly, you can get rows from the right table that do not have matching rows from the left table by adding a <code>WHERE<\/code> clause as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n    a,\n    fruit_a,\n    b,\n    fruit_b\n<span class=\"hljs-keyword\">FROM<\/span>\n    basket_a\n<span class=\"hljs-keyword\">RIGHT<\/span> <span class=\"hljs-keyword\">JOIN<\/span> basket_b \n   <span class=\"hljs-keyword\">ON<\/span> fruit_a = fruit_b\n<span class=\"hljs-keyword\">WHERE<\/span> a <span class=\"hljs-keyword\">IS<\/span> <span class=\"hljs-literal\">NULL<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"461\" height=\"85\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-join-right-join-with-where.png\" alt=\"\" class=\"wp-image-4644\"\/><\/figure>\n\n\n\n<p class=\"note\">The <code>RIGHT JOIN<\/code> and <code>RIGHT OUTER JOIN<\/code> are the same therefore you can use them interchangeably.<\/p>\n\n\n\n<p>The following Venn diagram illustrates the right join that returns rows from the right table that do not have matching rows in the left table:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"377\" height=\"316\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/12\/PostgreSQL-Join-Right-Join-with-Where.png\" alt=\"PostgreSQL Join - Right Join with Where\" class=\"wp-image-3683\"\/><\/figure>\n\n\n\n<h2>PostgreSQL full outer join<\/h2>\n\n\n\n<p>The <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-full-outer-join\/\">full outer join<\/a> or full join returns a result set that contains all rows from both left and right tables, with the matching rows from both sides if available. In case there is no match, the columns of the table will be filled with NULL.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n    a,\n    fruit_a,\n    b,\n    fruit_b\n<span class=\"hljs-keyword\">FROM<\/span>\n    basket_a\n<span class=\"hljs-keyword\">FULL<\/span> <span class=\"hljs-keyword\">OUTER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> basket_b \n    <span class=\"hljs-keyword\">ON<\/span> fruit_a = fruit_b;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"467\" height=\"184\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-join-full-outer-join-example.png\" alt=\"\" class=\"wp-image-4638\"\/><\/figure>\n\n\n\n<p>The following Venn diagram illustrates the full outer join:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"370\" height=\"265\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/12\/PostgreSQL-Join-Full-Outer-Join.png\" alt=\"PostgreSQL Join - Full Outer Join\" class=\"wp-image-3680\"\/><\/figure>\n\n\n\n<p>To return rows in a table that do not have matching rows in the other, you use the full join with a <code>WHERE<\/code> clause like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n    a,\n    fruit_a,\n    b,\n    fruit_b\n<span class=\"hljs-keyword\">FROM<\/span>\n    basket_a\n<span class=\"hljs-keyword\">FULL<\/span> <span class=\"hljs-keyword\">JOIN<\/span> basket_b \n   <span class=\"hljs-keyword\">ON<\/span> fruit_a = fruit_b\n<span class=\"hljs-keyword\">WHERE<\/span> a <span class=\"hljs-keyword\">IS<\/span> <span class=\"hljs-literal\">NULL<\/span> <span class=\"hljs-keyword\">OR<\/span> b <span class=\"hljs-keyword\">IS<\/span> <span class=\"hljs-literal\">NULL<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Here is the result:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"483\" height=\"135\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-join-full-outer-join-with-where.png\" alt=\"\" class=\"wp-image-4639\"\/><\/figure>\n\n\n\n<p>The following Venn diagram illustrates the full outer join that returns rows from a table that do not have the corresponding rows in the other table:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"382\" height=\"304\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/12\/PostgreSQL-Join-Full-Outer-Join-with-Where.png\" alt=\"PostgreSQL Join - Full Outer Join with Where\" class=\"wp-image-3681\"\/><\/figure>\n\n\n\n<p>The following picture shows all the PostgreSQL joins that we discussed so far with the detailed syntax:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"872\" height=\"528\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/12\/PostgreSQL-Joins.png\" alt=\"PostgreSQL Joins\" class=\"wp-image-3686\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/12\/PostgreSQL-Joins.png 872w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/12\/PostgreSQL-Joins-768x465.png 768w\" sizes=\"(max-width: 872px) 100vw, 872px\" \/><\/figure>\n\n\n\n<p>In this tutorial, you have learned how to use various kinds of PostgreSQL joins to combine data from multiple related tables.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"3666\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-joins\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Joins\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"3666\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-joins\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Joins\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn visually how to use various kinds of PostgreSQL joins including inner join, left join, right join, and outer join.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":12,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL Joins: A Visual Explanation of PostgreSQL Joins<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn visually how to use various kinds of PostgreSQL joins including inner join, left join, right join, and outer join.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-joins\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"8 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-joins\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-join-left-table.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-join-left-table.png\",\"width\":256,\"height\":137},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-joins\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-joins\/\",\"name\":\"PostgreSQL Joins: A Visual Explanation of PostgreSQL Joins\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-joins\/#primaryimage\"},\"datePublished\":\"2018-12-02T05:52:21+00:00\",\"dateModified\":\"2021-03-14T00:51:11+00:00\",\"description\":\"In this tutorial, you will learn visually how to use various kinds of PostgreSQL joins including inner join, left join, right join, and outer join.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-joins\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-joins\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-joins\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL Joins\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL Joins: A Visual Explanation of PostgreSQL Joins","description":"In this tutorial, you will learn visually how to use various kinds of PostgreSQL joins including inner join, left join, right join, and outer join.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-joins\/","twitter_misc":{"Est. reading time":"8 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-joins\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-join-left-table.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-join-left-table.png","width":256,"height":137},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-joins\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-joins\/","name":"PostgreSQL Joins: A Visual Explanation of PostgreSQL Joins","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-joins\/#primaryimage"},"datePublished":"2018-12-02T05:52:21+00:00","dateModified":"2021-03-14T00:51:11+00:00","description":"In this tutorial, you will learn visually how to use various kinds of PostgreSQL joins including inner join, left join, right join, and outer join.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-joins\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-joins\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-joins\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL Joins"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3666"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=3666"}],"version-history":[{"count":5,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3666\/revisions"}],"predecessor-version":[{"id":5965,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3666\/revisions\/5965"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=3666"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}