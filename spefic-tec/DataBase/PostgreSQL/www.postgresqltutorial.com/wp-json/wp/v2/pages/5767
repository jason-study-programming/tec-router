{"id":5767,"date":"2020-08-01T19:01:16","date_gmt":"2020-08-02T02:01:16","guid":{"rendered":"https:\/\/www.postgresqltutorial.com\/?page_id=5767"},"modified":"2020-08-01T19:04:06","modified_gmt":"2020-08-02T02:04:06","slug":"postgresql-drop-view","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/","title":{"rendered":"PostgreSQL Drop View"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PostgreSQL <code>DROP VIEW<\/code> statement to remove one or more views from the database.<\/p>\n\n\n\n<h3>Introduction to PostgreSQL DROP VIEW statement<\/h3>\n\n\n\n<p>The <code>DROP VIEW<\/code> statement removes a <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/\">view<\/a> from the database. The following illustrates the syntax of the <code>DROP VIEW<\/code> statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><div><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">DROP<\/span> <span class=\"hljs-selector-tag\">VIEW<\/span> <span class=\"hljs-selector-attr\">[IF EXISTS]<\/span> <span class=\"hljs-selector-tag\">view_name<\/span>\n<span class=\"hljs-selector-attr\">[CASCADE | RESTRICT]<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax:<\/p>\n\n\n\n<ul><li>First, specify the name of the view after the <code>DROP VIEW<\/code> keywords.<\/li><li>Second, use the <code>IF EXISTS<\/code> option to drop a view only if it exists. If you don&#8217;t use the <code>IF EXISTS<\/code> option and drop a view that does not exist, PostgreSQL will issue an error. However, if you use the <code>IF EXISTS<\/code> option, PostgreSQL issues a notice instead.<\/li><li>Third, use the <code>RESTRICT<\/code> option to reject the removal of the view if there are any objects depending on it. The <code>RESTRICT<\/code> option is the default. If you use the <code>CASCADE<\/code> option, the <code>DROP VIEW<\/code> automatically drops objects that depend on view and all objects that depend on those objects.<\/li><\/ul>\n\n\n\n<p>To remove multiple views using a single statement, you specify a comma-separated list of view names after the <code>DROP VIEW<\/code> keywords like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">VIEW<\/span> [<span class=\"hljs-keyword\">IF<\/span> <span class=\"hljs-keyword\">EXISTS<\/span>] view_name1, view_name2, ...;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To execute the <code>DROP VIEW<\/code> statement, you must be the owner of the view.<\/p>\n\n\n\n<h2>PostgreSQL DROP VIEW statement examples<\/h2>\n\n\n\n<p>See the following <code>film<\/code>, <code>film_category<\/code>, and <code>category<\/code> tables from the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-sample-database\/\">sample database<\/a>:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"660\" height=\"305\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/08\/film-film_category-category-tables.png\" alt=\"film film_category category tables\" class=\"wp-image-3043\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/08\/film-film_category-category-tables.png 660w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/08\/film-film_category-category-tables-300x139.png 300w\" sizes=\"(max-width: 660px) 100vw, 660px\" \/><\/figure>\n\n\n\n<p>Let&#8217;s create new views for practising.<\/p>\n\n\n\n<p>The following statement creates a view based on the information from those tables:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">VIEW<\/span> film_master \n<span class=\"hljs-keyword\">AS<\/span>\n<span class=\"hljs-keyword\">SELECT<\/span> \n\tfilm_id, \n\ttitle, \n\trelease_year, \n\tlength, \n\t<span class=\"hljs-type\">name<\/span> category\n<span class=\"hljs-keyword\">FROM<\/span> \n\tfilm\n<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> film_category \n\t<span class=\"hljs-keyword\">USING<\/span> (film_id)\n<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> category \n\t<span class=\"hljs-keyword\">USING<\/span>(category_id);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following statement creates a view called <code>horror_film<\/code> based on the <code>film_master<\/code> view:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">VIEW<\/span> horror_film \n<span class=\"hljs-keyword\">AS<\/span>\n<span class=\"hljs-keyword\">SELECT<\/span> \n\tfilm_id, \n\ttitle, \n\trelease_year, \n\tlength \n<span class=\"hljs-keyword\">FROM<\/span> \n\tfilm_master\n<span class=\"hljs-keyword\">WHERE<\/span> \n\tcategory = <span class=\"hljs-string\">'Horror'<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>And the following statement creates also a view called <code>comedy_film<\/code> based on the <code>film_master<\/code> view:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">VIEW<\/span> comedy_film \n<span class=\"hljs-keyword\">AS<\/span>\n<span class=\"hljs-keyword\">SELECT<\/span> \n\tfilm_id, \n\ttitle, \n\trelease_year, \n\tlength \n<span class=\"hljs-keyword\">FROM<\/span> \n\tfilm_master\n<span class=\"hljs-keyword\">WHERE<\/span> \n\tcategory = <span class=\"hljs-string\">'Comedy'<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following statement creates a view that returns the number of films by category:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">VIEW<\/span> film_category_stat\n<span class=\"hljs-keyword\">AS<\/span>\n<span class=\"hljs-keyword\">SELECT<\/span> \n\t<span class=\"hljs-type\">name<\/span>, \n\tCOUNT(film_id) \n<span class=\"hljs-keyword\">FROM<\/span> category\n<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> film_category <span class=\"hljs-keyword\">USING<\/span> (category_id)\n<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> film <span class=\"hljs-keyword\">USING<\/span> (film_id)\n<span class=\"hljs-keyword\">GROUP<\/span> <span class=\"hljs-keyword\">BY<\/span> <span class=\"hljs-type\">name<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following creates a view that returns the total length of films for each category:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">VIEW<\/span> film_length_stat\n<span class=\"hljs-keyword\">AS<\/span>\n<span class=\"hljs-keyword\">SELECT<\/span> \n\t<span class=\"hljs-type\">name<\/span>, \n\tSUM(length) film_length\n<span class=\"hljs-keyword\">FROM<\/span> category\n<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> film_category <span class=\"hljs-keyword\">USING<\/span> (category_id)\n<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> film <span class=\"hljs-keyword\">USING<\/span> (film_id)\n<span class=\"hljs-keyword\">GROUP<\/span> <span class=\"hljs-keyword\">BY<\/span> <span class=\"hljs-type\">name<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>1) Using PostgreSQL DROP VIEW to drop one view<\/h3>\n\n\n\n<p>The following example uses the <code>DROP VIEW<\/code> statement to drop the <code>comedy_film<\/code> view:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">VIEW<\/span> comedy_film;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>2) Using PostgreSQL DROP VIEW statement to drop a view that has dependent objects<\/h3>\n\n\n\n<p>The following statement uses the <code>DROP VIEW<\/code> statement to drop the <code>film_master<\/code> view:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">VIEW<\/span> film_master;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>PostgreSQL issued an error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">ERROR:  cannot drop view film_master because other objects depend on it\nDETAIL:  view horror_film depends on view film_master\nHINT:  Use DROP ... CASCADE to drop the dependent objects too.\nSQL state: 2BP01<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The film_master has a dependent object which is the view <code>horror_film<\/code>. <\/p>\n\n\n\n<p>To drop the view <code>film_master<\/code>, you need to drop its dependent object first or use the <code>CASCADE<\/code> option like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">VIEW<\/span> film_master \n<span class=\"hljs-keyword\">CASCADE<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This statement drops the <code>film_master<\/code> view as well as its dependent object which is the <code>horror_film<\/code>. It issued the following notice:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"HTTP\" data-shcb-language-slug=\"http\"><div><code class=\"hljs language-http\"><span class=\"hljs-attribute\">NOTICE<\/span>:  drop cascades to view horror_film<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTTP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">http<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>3) Using PostgreSQL DROP VIEW to drop multiple views<\/h3>\n\n\n\n<p>The following statement uses a single <code>DROP VIEW<\/code> statement to drop multiple views:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">DROP<\/span> <span class=\"hljs-keyword\">VIEW<\/span> film_length_stat, film_category_stat;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use the <code>DROP VIEW<\/code> statement to remove one or more views from the database.<\/li><li>Use the <code>IF EXISTS<\/code> option to remove a view if it exists.<\/li><li>Use the <code>CASCADE<\/code> option to remove a view and its dependent objects recursively.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"5767\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Drop View\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"5767\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Drop View\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the PostgreSQL DROP VIEW statement to remove one or more views from the database.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":1041,"menu_order":1,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL DROP VIEW Statement Explained By Practical Examples<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to use the PostgreSQL DROP VIEW statement to remove one or more views from the database.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/08\/film-film_category-category-tables.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/08\/film-film_category-category-tables.png\",\"width\":660,\"height\":305,\"caption\":\"film film_category category tables\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/\",\"name\":\"PostgreSQL DROP VIEW Statement Explained By Practical Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/#primaryimage\"},\"datePublished\":\"2020-08-02T02:01:16+00:00\",\"dateModified\":\"2020-08-02T02:04:06+00:00\",\"description\":\"In this tutorial, you will learn how to use the PostgreSQL DROP VIEW statement to remove one or more views from the database.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Views\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL Drop View\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL DROP VIEW Statement Explained By Practical Examples","description":"In this tutorial, you will learn how to use the PostgreSQL DROP VIEW statement to remove one or more views from the database.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/08\/film-film_category-category-tables.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/08\/film-film_category-category-tables.png","width":660,"height":305,"caption":"film film_category category tables"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/","name":"PostgreSQL DROP VIEW Statement Explained By Practical Examples","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/#primaryimage"},"datePublished":"2020-08-02T02:01:16+00:00","dateModified":"2020-08-02T02:04:06+00:00","description":"In this tutorial, you will learn how to use the PostgreSQL DROP VIEW statement to remove one or more views from the database.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-drop-view\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Views","item":"https:\/\/www.postgresqltutorial.com\/postgresql-views\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL Drop View"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5767"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=5767"}],"version-history":[{"count":5,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5767\/revisions"}],"predecessor-version":[{"id":5772,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5767\/revisions\/5772"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1041"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=5767"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}