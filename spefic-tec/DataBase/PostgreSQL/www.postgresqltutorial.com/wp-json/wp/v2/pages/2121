{"id":2121,"date":"2016-06-16T21:04:53","date_gmt":"2016-06-17T04:04:53","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=2121"},"modified":"2020-08-02T21:08:43","modified_gmt":"2020-08-03T04:08:43","slug":"query","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/","title":{"rendered":"PostgreSQL Python: Querying Data"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to query data from the PostgreSQL tables in Python using psycopg database adapter.<\/p>\n\n\n\n<h2>The steps for querying data from PostgreSQL table in Python<\/h2>\n\n\n\n<p>To query data from one or more PostgreSQL tables in Python, you use the following steps.<\/p>\n\n\n\n<p>First, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/\">establish a connection to the PostgreSQL database server<\/a> by calling the <code>connect()<\/code> function of the <code>psycopg<\/code> module.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\">conn = psycopg2.connect(dsn)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If the connection was created successfully, the <code>connect()<\/code> function returns a new <code>connection<\/code> object, otherwise, it throws a <code>DatabaseError<\/code> exception.<\/p>\n\n\n\n<p>Next, create a new cursor by calling the <code>cursor()<\/code> method of the <code>connection<\/code> object. The <code>cursor<\/code> object is used to execute <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-select\/\">SELECT<\/a> statements.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\">cur = conn.cursor()<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Then, execute a <code>SELECT<\/code> statement by calling the <code>execute()<\/code> method. If you want to pass values to the <code>SELECT<\/code> statement, you use the placeholder &nbsp;( <code>%s<\/code>) in the <code>SELECT<\/code> statement and bind the input values when you call the <code>execute()<\/code> method as follows.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\">cur.execute(sql, (value1,value2))<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>After that, process the result set returned by the stored procedure using the &nbsp;<code>fetchone()<\/code>, &nbsp;<code>fetchall()<\/code>, or &nbsp;<code>fetchmany()<\/code> method.<\/p>\n\n\n\n<ul><li>The &nbsp;<code>fetchone()<\/code> fetches the next row in the result set. It returns a single tuple or <code>None<\/code> when no more row is available.<\/li><li>The &nbsp;<code>fetchmany(size=cursor.arraysize)<\/code> fetches the next set of rows specified by the <code>size<\/code> parameter. If you omit this parameter, the &nbsp;<code>arraysize<\/code> will determine the number of rows to be fetched. The &nbsp;<code>fetchmany()<\/code> method returns a list of tuples or an empty list if no more rows available.<\/li><li>The &nbsp;<code>fetchall()<\/code> fetches all rows in the result set and returns a list of tuples. If there are no rows to fetch, the&nbsp;&nbsp;<code>fetchall()<\/code> method returns an empty list.<\/li><\/ul>\n\n\n\n<p>Finally, close the communication with the PostgreSQL by calling the <code>close()<\/code> method of the <code>cursor<\/code> and <code>connection<\/code> objects<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\">cur.close()\nconn.close()<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Querying data using fetchone() method<\/h2>\n\n\n\n<p>For the demonstrations, we will use the <code>parts<\/code>, <code>vendors<\/code>, and <code>vendor_parts<\/code> tables in the <code>suppliers<\/code> database that we created in the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/create-tables\/\">creating tables tutorial<\/a><\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"694\" height=\"340\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-Python-Sample-Database-Diagram.png\" alt=\"PostgreSQL Python Sample Database Diagram\" class=\"wp-image-2076\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-Python-Sample-Database-Diagram.png 694w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-Python-Sample-Database-Diagram-300x147.png 300w\" sizes=\"(max-width: 694px) 100vw, 694px\" \/><\/figure>\n\n\n\n<p>The following <code>get_vendor()<\/code> function selects data from the <code>vendors<\/code> table and fetches the rows using the &nbsp;<code>fetchone()<\/code> method.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">get_vendors<\/span><span class=\"hljs-params\">()<\/span>:<\/span>\n    <span class=\"hljs-string\">\"\"\" query data from the vendors table \"\"\"<\/span>\n    conn = <span class=\"hljs-literal\">None<\/span>\n    <span class=\"hljs-keyword\">try<\/span>:\n        params = config()\n        conn = psycopg2.connect(**params)\n        cur = conn.cursor()\n        cur.execute(<span class=\"hljs-string\">\"SELECT vendor_id, vendor_name FROM vendors ORDER BY vendor_name\"<\/span>)\n        print(<span class=\"hljs-string\">\"The number of parts: \"<\/span>, cur.rowcount)\n        row = cur.fetchone()\n\n        <span class=\"hljs-keyword\">while<\/span> row <span class=\"hljs-keyword\">is<\/span> <span class=\"hljs-keyword\">not<\/span> <span class=\"hljs-literal\">None<\/span>:\n            print(row)\n            row = cur.fetchone()\n\n        cur.close()\n    <span class=\"hljs-keyword\">except<\/span> (Exception, psycopg2.DatabaseError) <span class=\"hljs-keyword\">as<\/span> error:\n        print(error)\n    <span class=\"hljs-keyword\">finally<\/span>:\n        <span class=\"hljs-keyword\">if<\/span> conn <span class=\"hljs-keyword\">is<\/span> <span class=\"hljs-keyword\">not<\/span> <span class=\"hljs-literal\">None<\/span>:\n            conn.close()<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following shows the output of the <code>get_vendors()<\/code> function.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\"><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    get_vendors()<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">The number <span class=\"hljs-keyword\">of<\/span> parts:  <span class=\"hljs-number\">7<\/span>\n(<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-string\">'3M Corp'<\/span>)\n(<span class=\"hljs-number\">2<\/span>, <span class=\"hljs-string\">'AKM Semiconductor Inc.'<\/span>)\n(<span class=\"hljs-number\">3<\/span>, <span class=\"hljs-string\">'Asahi Glass Co Ltd.'<\/span>)\n(<span class=\"hljs-number\">4<\/span>, <span class=\"hljs-string\">'Daikin Industries Ltd.'<\/span>)\n(<span class=\"hljs-number\">5<\/span>, <span class=\"hljs-string\">'Dynacast International Inc.'<\/span>)\n(<span class=\"hljs-number\">6<\/span>, <span class=\"hljs-string\">'Foster Electric Co. Ltd.'<\/span>)\n(<span class=\"hljs-number\">7<\/span>, <span class=\"hljs-string\">'Murata Manufacturing Co. Ltd.'<\/span>)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Querying data using fetchall() method<\/h2>\n\n\n\n<p>The following <code>get_parts()<\/code> function uses the <code>fetchall()<\/code> method of the cursor object to fetch rows from the result set and displays all the parts in the <code>parts<\/code> table.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">get_parts<\/span><span class=\"hljs-params\">()<\/span>:<\/span>\n    <span class=\"hljs-string\">\"\"\" query parts from the parts table \"\"\"<\/span>\n    conn = <span class=\"hljs-literal\">None<\/span>\n    <span class=\"hljs-keyword\">try<\/span>:\n        params = config()\n        conn = psycopg2.connect(**params)\n        cur = conn.cursor()\n        cur.execute(<span class=\"hljs-string\">\"SELECT part_id, part_name FROM parts ORDER BY part_name\"<\/span>)\n        rows = cur.fetchall()\n        print(<span class=\"hljs-string\">\"The number of parts: \"<\/span>, cur.rowcount)\n        <span class=\"hljs-keyword\">for<\/span> row <span class=\"hljs-keyword\">in<\/span> rows:\n            print(row)\n        cur.close()\n    <span class=\"hljs-keyword\">except<\/span> (Exception, psycopg2.DatabaseError) <span class=\"hljs-keyword\">as<\/span> error:\n        print(error)\n    <span class=\"hljs-keyword\">finally<\/span>:\n        <span class=\"hljs-keyword\">if<\/span> conn <span class=\"hljs-keyword\">is<\/span> <span class=\"hljs-keyword\">not<\/span> <span class=\"hljs-literal\">None<\/span>:\n            conn.close()<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\"><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    get_parts()\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\">The number of parts:  <span class=\"hljs-number\">6<\/span>\n(<span class=\"hljs-number\">4<\/span>, <span class=\"hljs-string\">'Antenna'<\/span>)\n(<span class=\"hljs-number\">5<\/span>, <span class=\"hljs-string\">'Home Button'<\/span>)\n(<span class=\"hljs-number\">6<\/span>, <span class=\"hljs-string\">'LTE Modem'<\/span>)\n(<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-string\">'SIM Tray'<\/span>)\n(<span class=\"hljs-number\">2<\/span>, <span class=\"hljs-string\">'Speaker'<\/span>)\n(<span class=\"hljs-number\">3<\/span>, <span class=\"hljs-string\">'Vibrator'<\/span>)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Querying data using fetchmany() method<\/h2>\n\n\n\n<p>The following <code>get_suppliers()<\/code> function selects parts and vendors data using the <code>fetchmany()<\/code> method.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">iter_row<\/span><span class=\"hljs-params\">(cursor, size=<span class=\"hljs-number\">10<\/span>)<\/span>:<\/span>\n    <span class=\"hljs-keyword\">while<\/span> <span class=\"hljs-literal\">True<\/span>:\n        rows = cursor.fetchmany(size)\n        <span class=\"hljs-keyword\">if<\/span> <span class=\"hljs-keyword\">not<\/span> rows:\n            <span class=\"hljs-keyword\">break<\/span>\n        <span class=\"hljs-keyword\">for<\/span> row <span class=\"hljs-keyword\">in<\/span> rows:\n            <span class=\"hljs-keyword\">yield<\/span> row\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">get_part_vendors<\/span><span class=\"hljs-params\">()<\/span>:<\/span>\n    <span class=\"hljs-string\">\"\"\" query part and vendor data from multiple tables\"\"\"<\/span>\n    conn = <span class=\"hljs-literal\">None<\/span>\n    <span class=\"hljs-keyword\">try<\/span>:\n        params = config()\n        conn = psycopg2.connect(**params)\n        cur = conn.cursor()\n        cur.execute(<span class=\"hljs-string\">\"\"\"\n            SELECT part_name, vendor_name\n            FROM parts\n            INNER JOIN vendor_parts ON vendor_parts.part_id = parts.part_id\n            INNER JOIN vendors ON vendors.vendor_id = vendor_parts.vendor_id\n            ORDER BY part_name;\n        \"\"\"<\/span>)\n        <span class=\"hljs-keyword\">for<\/span> row <span class=\"hljs-keyword\">in<\/span> iter_row(cur, <span class=\"hljs-number\">10<\/span>):\n            print(row)\n        cur.close()\n    <span class=\"hljs-keyword\">except<\/span> (Exception, psycopg2.DatabaseError) <span class=\"hljs-keyword\">as<\/span> error:\n        print(error)\n    <span class=\"hljs-keyword\">finally<\/span>:\n        <span class=\"hljs-keyword\">if<\/span> conn <span class=\"hljs-keyword\">is<\/span> <span class=\"hljs-keyword\">not<\/span> <span class=\"hljs-literal\">None<\/span>:\n            conn.close()<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\"><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    get_part_vendors()<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">(<span class=\"hljs-string\">'Antenna'<\/span>, <span class=\"hljs-string\">'Foster Electric Co. Ltd.'<\/span>)\n(<span class=\"hljs-string\">'Antenna'<\/span>, <span class=\"hljs-string\">'Murata Manufacturing Co. Ltd.'<\/span>)\n(<span class=\"hljs-string\">'Home Button'<\/span>, <span class=\"hljs-string\">'Dynacast International Inc.'<\/span>)\n(<span class=\"hljs-string\">'Home Button'<\/span>, <span class=\"hljs-string\">'3M Corp'<\/span>)\n(<span class=\"hljs-string\">'LTE Modem'<\/span>, <span class=\"hljs-string\">'Dynacast International Inc.'<\/span>)\n(<span class=\"hljs-string\">'LTE Modem'<\/span>, <span class=\"hljs-string\">'3M Corp'<\/span>)\n(<span class=\"hljs-string\">'SIM Tray'<\/span>, <span class=\"hljs-string\">'AKM Semiconductor Inc.'<\/span>)\n(<span class=\"hljs-string\">'SIM Tray'<\/span>, <span class=\"hljs-string\">'3M Corp'<\/span>)\n(<span class=\"hljs-string\">'Speaker'<\/span>, <span class=\"hljs-string\">'Daikin Industries Ltd.'<\/span>)\n(<span class=\"hljs-string\">'Speaker'<\/span>, <span class=\"hljs-string\">'Asahi Glass Co Ltd.'<\/span>)\n(<span class=\"hljs-string\">'Vibrator'<\/span>, <span class=\"hljs-string\">'Dynacast International Inc.'<\/span>)\n(<span class=\"hljs-string\">'Vibrator'<\/span>, <span class=\"hljs-string\">'Foster Electric Co. Ltd.'<\/span>)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, we have shown you various ways to select data from the PostgreSQL tables in Python using the&nbsp;<code>fetchone()<\/code>, <code>fetchall()<\/code>, and <code>fetchmany()<\/code> methods.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2121\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Python: Querying Data\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2121\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Python: Querying Data\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to query data from the PostgreSQL tables in Python using psycopg database adapter.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":2071,"menu_order":8,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL Python: Querying Data<\/title>\n<meta name=\"description\" content=\"This tutorial shows you various ways to query data from PostgreSQL table in Python using psycopg.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-Python-Sample-Database-Diagram.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-Python-Sample-Database-Diagram.png\",\"width\":694,\"height\":340},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/\",\"name\":\"PostgreSQL Python: Querying Data\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/#primaryimage\"},\"datePublished\":\"2016-06-17T04:04:53+00:00\",\"dateModified\":\"2020-08-03T04:08:43+00:00\",\"description\":\"This tutorial shows you various ways to query data from PostgreSQL table in Python using psycopg.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Python\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL Python: Querying Data\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL Python: Querying Data","description":"This tutorial shows you various ways to query data from PostgreSQL table in Python using psycopg.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-Python-Sample-Database-Diagram.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-Python-Sample-Database-Diagram.png","width":694,"height":340},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/","name":"PostgreSQL Python: Querying Data","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/#primaryimage"},"datePublished":"2016-06-17T04:04:53+00:00","dateModified":"2020-08-03T04:08:43+00:00","description":"This tutorial shows you various ways to query data from PostgreSQL table in Python using psycopg.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/query\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Python","item":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL Python: Querying Data"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2121"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=2121"}],"version-history":[{"count":2,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2121\/revisions"}],"predecessor-version":[{"id":5824,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2121\/revisions\/5824"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2071"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=2121"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}