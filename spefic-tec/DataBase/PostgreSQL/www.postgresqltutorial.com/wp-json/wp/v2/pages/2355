{"id":2355,"date":"2016-06-27T01:20:07","date_gmt":"2016-06-27T08:20:07","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=2355"},"modified":"2020-07-20T23:23:44","modified_gmt":"2020-07-21T06:23:44","slug":"postgresql-char-varchar-text","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-char-varchar-text\/","title":{"rendered":"PostgreSQL Character Types: CHAR, VARCHAR, and TEXT"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about the PostgreSQL character data types including <code>CHAR<\/code>, <code>VARCHAR<\/code>, and <code>TEXT<\/code>, and\u00a0learn how to select the right character types for your tables.<\/p>\n\n\n\n<h2>Introduction to the PostgreSQL character types<\/h2>\n\n\n\n<p>PostgreSQL provides three primary character types: <code>CHARACTER(n)<\/code> or <code>CHAR(n)<\/code>, <code>CHARACTER VARYINGING(n)<\/code> or <code>VARCHAR(n)<\/code>, and <code>TEXT<\/code>, where <code>n<\/code> is a positive integer.<\/p>\n\n\n\n<p>The following table illstrate the character types in PostgreSQL:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><td><strong>Character Types<\/strong><\/td><td><strong>Description<\/strong><\/td><\/tr><\/thead><tbody><tr><td><code>CHARACTER VARYING(n)<\/code>,\u00a0<code>VARCHAR(n)<\/code><\/td><td>variable-length with length limit<\/td><\/tr><tr><td><code>CHARACTER(n)<\/code>,\u00a0<code>CHAR(n)<\/code><\/td><td>fixed-length, blank padded<\/td><\/tr><tr><td><code>TEXT<\/code>, <code>VARCHAR<\/code><\/td><td>variable unlimited length<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p>Both <code>CHAR(n)<\/code> and <code>VARCHAR(n) <\/code>can store up to <code>n<\/code> characters. If you try to store a string that has more than <code>n<\/code> characters, PostgreSQL will issue an error.<\/p>\n\n\n\n<p>However, one exception is that if the excessive characters are all spaces, PostgreSQL truncates the spaces to the maximum length (<code>n<\/code>) and stores the characters.<\/p>\n\n\n\n<p>If a string explicitly casts to a <code>CHAR(n)<\/code>\u00a0or <code>VARCHAR(n)<\/code>, PostgreSQL will truncate the string to <code>n<\/code> characters before inserting it into the table.<\/p>\n\n\n\n<p>The <code>TEXT<\/code> data type can store a string with unlimited length.<\/p>\n\n\n\n<p>If you do not specify the n integer for the <code>VARCHAR<\/code> data type, it behaves like the <code>TEXT<\/code> datatype. The performance of the <code>VARCHAR<\/code> (without the size <code>n<\/code>) and <code>TEXT<\/code> are the same.<\/p>\n\n\n\n<p>The only advantage of specifying the length specifier for the <code>VARCHAR<\/code> data type is that PostgreSQL will issue an error if you attempt to insert a string that has more than <code>n<\/code> characters into the <code>VARCHAR(n)<\/code> column.<\/p>\n\n\n\n<p>Unlike <code>VARCHAR<\/code>, The <code>CHARACTER<\/code> or \u00a0<code>CHAR<\/code> without the length specifier (<code>n<\/code>) is the same as the <code>CHARACTER(1)<\/code> or <code>CHAR(1)<\/code>.<\/p>\n\n\n\n<p>Different from other database systems, in PostgreSQL, there is no performance difference among three character types. <\/p>\n\n\n\n<p>In most cases, you should use <code>TEXT<\/code>or <code>VARCHAR<\/code>. And you use the <code>VARCHAR(n)<\/code> when you want PostgreSQL to check for the length.<\/p>\n\n\n\n<h2>PostgreSQL character type examples<\/h2>\n\n\n\n<p>Let&#8217;s take a look at an example to see how the <code>CHAR<\/code> , <code>VARCHAR<\/code> , and <code>TEXT<\/code> datatypes work.<\/p>\n\n\n\n<p>First, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-table\/\">create a new table<\/a> called character_tests:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> character_tests (\n\t<span class=\"hljs-keyword\">id<\/span> <span class=\"hljs-built_in\">serial<\/span> PRIMARY <span class=\"hljs-keyword\">KEY<\/span>,\n\tx <span class=\"hljs-built_in\">CHAR<\/span> (<span class=\"hljs-number\">1<\/span>),\n\ty <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">10<\/span>),\n\tz <span class=\"hljs-built_in\">TEXT<\/span>\n);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Then, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-insert\/\">insert a new row<\/a> into the <code>character_tests<\/code> table.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> character_tests (x, y, z)\n<span class=\"hljs-keyword\">VALUES<\/span>(<span class=\"hljs-string\">'Yes'<\/span>,<span class=\"hljs-string\">'This is a test for varchar'<\/span>,<span class=\"hljs-string\">'This is a very long text for the PostgreSQL text column'<\/span>\n\t);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>PostgreSQL issued an error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">ERROR:  value too long for type character(1)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This is because the data type of the <code>x<\/code> column is <code>char(1)<\/code> and we tried to insert a string with three characters into this column. Let&#8217;s fix it:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> character_tests (x, y, z)\n<span class=\"hljs-keyword\">VALUES<\/span>(\t<span class=\"hljs-string\">'Y'<\/span>,<span class=\"hljs-string\">'This is a test for varchar'<\/span>,<span class=\"hljs-string\">'This is a very long text for the PostgreSQL text column'<\/span>\t);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>PostgreSQL issues a different\u00a0error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">ERROR:  value too long for type character varying(10)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This is because we tried to insert a string with more than 10 characters into the column <code>y<\/code> that has the <code>varchar(10)<\/code> datatype.<\/p>\n\n\n\n<p>The following statement inserts a new row into the <code>character_tests<\/code> table successfully.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> character_tests (x, y, z)\n<span class=\"hljs-keyword\">VALUES<\/span>(\t<span class=\"hljs-string\">'Y'<\/span>,<span class=\"hljs-string\">'varchar(n)'<\/span>,<span class=\"hljs-string\">'This is a very long text for the PostgreSQL text column'<\/span>\n\t);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> * <span class=\"hljs-keyword\">FROM<\/span> character_tests;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\"> id | x |     y      |                            z\n----+---+------------+---------------------------------------------------------\n  1 | Y | varchar(n) | This is a very long text for the PostgreSQL text column\n(1 row)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>PostgreSQL supports <code>CHAR<\/code>, <code>VARCHAR<\/code>, and <code>TEXT<\/code> data types. The <code>CHAR<\/code> is fixed-length character type while the <code>VARCHAR<\/code> and <code>TEXT<\/code> are varying length character types.<\/li><li>Use <code>VARCHAR(n)<\/code> if you want to validate the length of the string (<code>n<\/code>) before inserting into or updating to a column. <\/li><li><code>VARCHAR<\/code>  (without the length specifier) and <code>TEXT<\/code> are equivalent.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2355\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-char-varchar-text\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Character Types: CHAR, VARCHAR, and TEXT\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2355\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-char-varchar-text\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Character Types: CHAR, VARCHAR, and TEXT\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn about the PostgreSQL character data types including CHAR, VARCHAR, and TEXT, and learn how to select the right character types for your tables.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":68,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL Character Types: CHAR, VARCHAR, And TEXT<\/title>\n<meta name=\"description\" content=\"This tutorial introduces you to PostgreSQL character data types including char, varchar, and text, and give you tips to choose the suitable one for tables.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-char-varchar-text\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-char-varchar-text\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-char-varchar-text\/\",\"name\":\"PostgreSQL Character Types: CHAR, VARCHAR, And TEXT\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"datePublished\":\"2016-06-27T08:20:07+00:00\",\"dateModified\":\"2020-07-21T06:23:44+00:00\",\"description\":\"This tutorial introduces you to PostgreSQL character data types including char, varchar, and text, and give you tips to choose the suitable one for tables.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-char-varchar-text\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-char-varchar-text\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-char-varchar-text\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL Character Types: CHAR, VARCHAR, and TEXT\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL Character Types: CHAR, VARCHAR, And TEXT","description":"This tutorial introduces you to PostgreSQL character data types including char, varchar, and text, and give you tips to choose the suitable one for tables.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-char-varchar-text\/","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-char-varchar-text\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-char-varchar-text\/","name":"PostgreSQL Character Types: CHAR, VARCHAR, And TEXT","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"datePublished":"2016-06-27T08:20:07+00:00","dateModified":"2020-07-21T06:23:44+00:00","description":"This tutorial introduces you to PostgreSQL character data types including char, varchar, and text, and give you tips to choose the suitable one for tables.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-char-varchar-text\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-char-varchar-text\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-char-varchar-text\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL Character Types: CHAR, VARCHAR, and TEXT"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2355"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=2355"}],"version-history":[{"count":5,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2355\/revisions"}],"predecessor-version":[{"id":5317,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2355\/revisions\/5317"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=2355"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}