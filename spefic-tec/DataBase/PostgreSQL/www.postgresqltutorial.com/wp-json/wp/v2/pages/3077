{"id":3077,"date":"2017-08-17T02:49:09","date_gmt":"2017-08-17T09:49:09","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=3077"},"modified":"2021-03-13T18:34:49","modified_gmt":"2021-03-14T01:34:49","slug":"postgresql-to_timestamp","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-date-functions\/postgresql-to_timestamp\/","title":{"rendered":"PostgreSQL TO_TIMESTAMP Function"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PostgreSQL <code>TO_TIMESTAMP()<\/code>  function to convert a string to a timestamp based on a specified format<\/p>\n\n\n\n<p>The PostgreSQL <code>TO_TIMESTAMP()<\/code> function converts a string to a <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-timestamp\/\">timestamp<\/a> according to the specified format.<\/p>\n\n\n\n<h2>Syntax<\/h2>\n\n\n\n<p>The following illustrates the syntax of <code>TO_TIMESTAMP()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">TO_TIMESTAMP(timestamp, format)<\/code><\/div><\/pre>\n\n\n<h2>Arguments<\/h2>\n\n\n\n<p>The <code>TO_TIMESTAMP()<\/code> function requires two arguments:<\/p>\n\n\n\n<p><strong>1) <code>timestamp<\/code><\/strong><\/p>\n\n\n\n<p>The <code>timestamp<\/code> is a string that represents a timestamp value in the format specified by <code>format<\/code>.<\/p>\n\n\n\n<p><strong>2) <code>format<\/code><\/strong><\/p>\n\n\n\n<p>The format for <code>timestamp<\/code> argument.<\/p>\n\n\n\n<p>To construct <code>format<\/code> strings, you use the following template patterns for formatting date and time values.<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td><strong>Pattern<\/strong><\/td><td><strong>Description<\/strong><\/td><\/tr><tr><td>Y,YYY<\/td><td>year in 4 digits with comma<\/td><\/tr><tr><td>YYYY<\/td><td>year in 4 digits<\/td><\/tr><tr><td>YYY<\/td><td>last 3 digits of year<\/td><\/tr><tr><td>YY<\/td><td>last 2 digits of year<\/td><\/tr><tr><td>Y<\/td><td>The last digit of year<\/td><\/tr><tr><td>IYYY<\/td><td>ISO 8601 week-numbering year (4 or more digits)<\/td><\/tr><tr><td>IYY<\/td><td>Last 3 digits of ISO 8601 week-numbering year<\/td><\/tr><tr><td>IY<\/td><td>Last 2 digits of ISO 8601 week-numbering year<\/td><\/tr><tr><td>I<\/td><td>Last digit of ISO 8601 week-numbering year<\/td><\/tr><tr><td>BC,&nbsp;bc,&nbsp;AD&nbsp;or&nbsp;ad<\/td><td>Era indicator without periods<\/td><\/tr><tr><td>B.C.,&nbsp;b.c.,&nbsp;A.D.&nbsp;ora.d.<\/td><td>Era indicator with periods<\/td><\/tr><tr><td>MONTH<\/td><td>English month name in uppercase<\/td><\/tr><tr><td>Month<\/td><td>Full capitalized English&nbsp;month name<\/td><\/tr><tr><td>month<\/td><td>Full lowercase English month name<\/td><\/tr><tr><td>MON<\/td><td>Abbreviated uppercase month name&nbsp;e.g., JAN, FEB, etc.<\/td><\/tr><tr><td>Mon<\/td><td>Abbreviated capitalized month name&nbsp;e.g, Jan, Feb, &nbsp;etc.<\/td><\/tr><tr><td>mon<\/td><td>Abbreviated lowercase month name&nbsp;e.g., jan, feb, etc.<\/td><\/tr><tr><td>MM<\/td><td>month number&nbsp;from 01 to 12<\/td><\/tr><tr><td>DAY<\/td><td>Full uppercase day name<\/td><\/tr><tr><td>Day<\/td><td>Full capitalized day name<\/td><\/tr><tr><td>day<\/td><td>Full lowercase day name<\/td><\/tr><tr><td>DY<\/td><td>Abbreviated uppercase day name<\/td><\/tr><tr><td>Dy<\/td><td>Abbreviated capitalized day name<\/td><\/tr><tr><td>dy<\/td><td>Abbreviated lowercase day name<\/td><\/tr><tr><td>DDD<\/td><td>Day of year (001-366)<\/td><\/tr><tr><td>IDDD<\/td><td>Day of ISO 8601 week-numbering year (001-371; day 1 of the year is Monday of the first ISO week)<\/td><\/tr><tr><td>DD<\/td><td>Day of month (01-31)<\/td><\/tr><tr><td>D<\/td><td>Day of the week, Sunday (1) to Saturday (7)<\/td><\/tr><tr><td>ID<\/td><td>ISO 8601 day of the week, Monday (1) to Sunday (7)<\/td><\/tr><tr><td>W<\/td><td>Week of month (1-5) (the first week starts on the first day of the month)<\/td><\/tr><tr><td>WW<\/td><td>Week number of year (1-53) (the first week starts on the first day of the year)<\/td><\/tr><tr><td>IW<\/td><td>Week number of ISO 8601 week-numbering year (01-53; the first Thursday of the year is in week 1)<\/td><\/tr><tr><td>CC<\/td><td>Century&nbsp;e.g, 21, 22, etc.<\/td><\/tr><tr><td>J<\/td><td>Julian Day (integer days since November 24, 4714 BC at midnight UTC)<\/td><\/tr><tr><td>RM<\/td><td>Month in upper case Roman numerals (I-XII; &gt;<\/td><\/tr><tr><td>rm<\/td><td>Month in lowercase Roman numerals (i-xii; &gt;<\/td><\/tr><tr><td>HH<\/td><td>Hour of day (0-12)<\/td><\/tr><tr><td>HH12<\/td><td>Hour of day (0-12)<\/td><\/tr><tr><td>HH24<\/td><td>Hour of day (0-23)<\/td><\/tr><tr><td>MI<\/td><td>Minute (0-59)<\/td><\/tr><tr><td>SS<\/td><td>Second (0-59)<\/td><\/tr><tr><td>MS<\/td><td>Millisecond (000-9999)<\/td><\/tr><tr><td>US<\/td><td>Microsecond (000000-999999)<\/td><\/tr><tr><td>SSSS<\/td><td>Seconds past midnight (0-86399)<\/td><\/tr><tr><td>AM, am, PM or pm<\/td><td>Meridiem indicator (without periods)<\/td><\/tr><tr><td>A.M., a.m., P.M. or p.m.<\/td><td>Meridiem indicator (with periods)<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Return Value<\/h2>\n\n\n\n<p>The PostgreSQL <code>TO_TIMESTAMP()<\/code> function returns a timestamp with time zone.<\/p>\n\n\n\n<h2>Examples<\/h2>\n\n\n\n<p>The following statement uses the <code>TO_TIMESTAMP()<\/code> function to convert a string to a timestamp:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> TO_TIMESTAMP(\n    <span class=\"hljs-string\">'2017-03-31 9:30:20'<\/span>,\n    <span class=\"hljs-string\">'YYYY-MM-DD HH:MI:SS'<\/span>\n);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><div><code class=\"hljs language-css\">      <span class=\"hljs-selector-tag\">to_timestamp<\/span>\n<span class=\"hljs-selector-tag\">------------------------<\/span>\n 2017<span class=\"hljs-selector-tag\">-03-31<\/span> 09<span class=\"hljs-selector-pseudo\">:30<\/span><span class=\"hljs-selector-pseudo\">:20-07<\/span>\n(1 <span class=\"hljs-selector-tag\">row<\/span>)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example:<\/p>\n\n\n\n<ul><li>YYYY is the four-digit year 2017<\/li><li>MM is the month 03<\/li><li>DD is the day 31<\/li><li>HH is the hour 9<\/li><li>MI is the minute 30<\/li><li>SS is the second 20<\/li><\/ul>\n\n\n\n<h2>Remarks<\/h2>\n\n\n\n<p>1) The <code>TO_TIMESTAMP()<\/code> function skips spaces in the input string unless the fixed format global option (<code>FX<\/code> prefix) is used.<\/p>\n\n\n\n<p>This example uses multiple spaces in the input string:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">SELECT \n    TO_TIMESTAMP(<span class=\"hljs-string\">'2017     Aug'<\/span>,<span class=\"hljs-string\">'YYYY MON'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>TO_TIMESTAMP()<\/code> function just omits the spaces and returns the correct timestamp value:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><div><code class=\"hljs language-css\">      <span class=\"hljs-selector-tag\">to_timestamp<\/span>\n<span class=\"hljs-selector-tag\">------------------------<\/span>\n 2017<span class=\"hljs-selector-tag\">-08-01<\/span> 00<span class=\"hljs-selector-pseudo\">:00<\/span><span class=\"hljs-selector-pseudo\">:00-07<\/span>\n(1 <span class=\"hljs-selector-tag\">row<\/span>)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, the following example returns an error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">SELECT \n    TO_TIMESTAMP(<span class=\"hljs-string\">'2017     Aug'<\/span>,<span class=\"hljs-string\">'FXYYYY MON'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">ERROR:  invalid value \"\" for \"MON\"\nDETAIL:  The given value did not match any of the allowed values for this field.\nSQL state: 22007<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Because the <code>FX<\/code> option instructs the <code>TO_TIMESTAMP()<\/code> to accept the input string with one space only.<\/p>\n\n\n\n<p>2) The <code>TO_TIMESTAMP()<\/code> function validates the input string with minimal error checking. It will try to convert the input string to a valid timestamp as much as possible that sometimes yields unexpected results.<\/p>\n\n\n\n<p>The following example uses an invalid timestamp value:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">SELECT \n    TO_TIMESTAMP(<span class=\"hljs-string\">'2017-02-31 30:8:00'<\/span>, <span class=\"hljs-string\">'YYYY-MM-DD HH24:MI:SS'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>It returns an error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">ERROR:  date\/time field value out of range: \"2017-02-31 30:8:00\"\nSQL state: 22008<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>3) When converting a string to a timestamp, the <code>TO_TIMESTAMP()<\/code>\u00a0function treats milliseconds or microseconds as seconds after the decimal point.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">SELECT \n    TO_TIMESTAMP(<span class=\"hljs-string\">'01-01-2017 10:2'<\/span>, <span class=\"hljs-string\">'DD-MM-YYYY SS:MS'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The result is:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><div><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">to_timestamp<\/span>\n<span class=\"hljs-selector-tag\">--------------------------<\/span>\n 2017<span class=\"hljs-selector-tag\">-01-01<\/span> 00<span class=\"hljs-selector-pseudo\">:00<\/span><span class=\"hljs-selector-pseudo\">:10.2-07<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, 2 is not 2 millisecond but 200. It means that:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">SELECT \n        TO_TIMESTAMP(<span class=\"hljs-string\">'01-01-2017 10:2'<\/span>, <span class=\"hljs-string\">'DD-MM-YYYY SS:MS'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>and<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">SELECT \n        TO_TIMESTAMP(<span class=\"hljs-string\">'01-01-2017 10:200'<\/span>, <span class=\"hljs-string\">'DD-MM-YYYY SS:MS'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>returns the same result.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"Shell Session\" data-shcb-language-slug=\"shell\"><div><code class=\"hljs language-shell\">2017-01-01 00:00:10.2-07<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Shell Session<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">shell<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To get 2 milliseconds, you must use <code>01-01-2017 10:002<\/code>. In this case, <code>002<\/code> is interpreted as <code>0.002<\/code> seconds, which is equivalent to 2 milliseconds.<\/p>\n\n\n\n<p>4) If the year is less than four digits, the <code>TO_TIMESTAMP()<\/code> will adjust it to the nearest year e.g., 99 becomes 1999, 17 becomes 2017.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">SELECT\n    TO_TIMESTAMP(<span class=\"hljs-string\">'12 31 99 12:45'<\/span>, <span class=\"hljs-string\">'MM DD YY HH:MI'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The output is:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><div><code class=\"hljs language-css\">      <span class=\"hljs-selector-tag\">to_timestamp<\/span>\n<span class=\"hljs-selector-tag\">------------------------<\/span>\n 1999<span class=\"hljs-selector-tag\">-12-31<\/span> 00<span class=\"hljs-selector-pseudo\">:45<\/span><span class=\"hljs-selector-pseudo\">:00+07<\/span>\n(1 <span class=\"hljs-selector-tag\">row<\/span>)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Consider the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">SELECT\n      TO_TIMESTAMP(<span class=\"hljs-string\">'12 31 16 12:45'<\/span>, <span class=\"hljs-string\">'MM DD YY HH:MI'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The nearest year of 16 is 2016, therefore, it returns the following result:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><div><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">to_timestamp<\/span>\n<span class=\"hljs-selector-tag\">------------------------<\/span>\n 2016<span class=\"hljs-selector-tag\">-12-31<\/span> 00<span class=\"hljs-selector-pseudo\">:45<\/span><span class=\"hljs-selector-pseudo\">:00-07<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned how to use the PostgreSQL <code>TO_TIMESTAMP()<\/code> function to convert a string to a timestamp.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"3077\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-date-functions\/postgresql-to_timestamp\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL TO_TIMESTAMP Function\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"3077\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-date-functions\/postgresql-to_timestamp\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL TO_TIMESTAMP Function\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>This tutorial shows you how to use the PostgreSQL TO_TIMESTAMP to convert a string to a timestamp<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":2955,"menu_order":35,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL TO_TIMESTAMP() Function By Practical Examples<\/title>\n<meta name=\"description\" content=\"This tutorial shows you how to use the PostgreSQL TO_TIMESTAMP() function to convert a string to a timestamp\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-to_timestamp\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-to_timestamp\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-to_timestamp\/\",\"name\":\"PostgreSQL TO_TIMESTAMP() Function By Practical Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"datePublished\":\"2017-08-17T09:49:09+00:00\",\"dateModified\":\"2021-03-14T01:34:49+00:00\",\"description\":\"This tutorial shows you how to use the PostgreSQL TO_TIMESTAMP() function to convert a string to a timestamp\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-to_timestamp\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-to_timestamp\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-to_timestamp\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Date Functions\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-date-functions\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL TO_TIMESTAMP Function\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL TO_TIMESTAMP() Function By Practical Examples","description":"This tutorial shows you how to use the PostgreSQL TO_TIMESTAMP() function to convert a string to a timestamp","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-to_timestamp\/","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-to_timestamp\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-to_timestamp\/","name":"PostgreSQL TO_TIMESTAMP() Function By Practical Examples","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"datePublished":"2017-08-17T09:49:09+00:00","dateModified":"2021-03-14T01:34:49+00:00","description":"This tutorial shows you how to use the PostgreSQL TO_TIMESTAMP() function to convert a string to a timestamp","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-to_timestamp\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-to_timestamp\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-to_timestamp\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Date Functions","item":"https:\/\/www.postgresqltutorial.com\/postgresql-date-functions\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL TO_TIMESTAMP Function"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3077"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=3077"}],"version-history":[{"count":4,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3077\/revisions"}],"predecessor-version":[{"id":5973,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3077\/revisions\/5973"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2955"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=3077"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}