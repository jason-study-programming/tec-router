{"id":166,"date":"2012-08-27T00:58:04","date_gmt":"2012-08-27T07:58:04","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=166"},"modified":"2021-03-13T17:59:58","modified_gmt":"2021-03-14T00:59:58","slug":"postgresql-order-by","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-order-by\/","title":{"rendered":"PostgreSQL ORDER BY"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to sort the result set returned from the <code>SELECT<\/code>statement by using the&nbsp;<strong>PostgreSQL ORDER BY <\/strong>clause<strong>.<\/strong><\/p>\n\n\n\n<h2>Introduction to PostgreSQL <code>ORDER BY<\/code> clause<\/h2>\n\n\n\n<p>When you query data from a table, the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-select\/\">SELECT<\/a><\/code> statement returns rows in an unspecified order. To sort the rows of the result set, you use the <code>ORDER BY<\/code>&nbsp;clause in the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-select\/\">SELECT<\/a><\/code> statement.<\/p>\n\n\n\n<p>The <code>ORDER BY<\/code> clause allows you to sort rows returned by a&nbsp;<code>SELECT<\/code> clause in ascending or descending order based on a sort expression.<\/p>\n\n\n\n<p>The following illustrates the syntax of the <code>ORDER BY<\/code>&nbsp;clause:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\tselect_list\n<span class=\"hljs-keyword\">FROM<\/span>\n\ttable_name\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span>\n\tsort_expression1 [<span class=\"hljs-keyword\">ASC<\/span> | <span class=\"hljs-keyword\">DESC<\/span>],\n        ...\n\tsort_expressionN [<span class=\"hljs-keyword\">ASC<\/span> | <span class=\"hljs-keyword\">DESC<\/span>];<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax:<\/p>\n\n\n\n<ul><li>First, specify a sort expression, which can be a column or an expression, that you want to sort after the  <code>ORDER BY<\/code> keywords. If you want to sort the result set based on multiple columns or expressions, you need to place a comma (<code>,<\/code>) between two columns or expressions to separate them.<\/li><li>Second, you use the&nbsp;<code>ASC<\/code> option to sort rows in ascending order and the <code>DESC<\/code> option to sort rows in descending order. If you omit the <code>ASC<\/code> or <code>DESC<\/code> option, the <code>ORDER BY<\/code>&nbsp;uses <code>ASC<\/code> by default.<\/li><\/ul>\n\n\n\n<p>PostgreSQL evaluates the clauses in the <code>SELECT<\/code> statment in the following order: <code>FROM<\/code>, <code>SELECT<\/code>, and <code>ORDER BY<\/code>:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"531\" height=\"84\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-ORDER-BY.png\" alt=\"\" class=\"wp-image-4834\"\/><\/figure>\n\n\n\n<p>Due to the order of evaluation, if you have a column alias in the <code>SELECT<\/code> clause, you can use it in the <code>ORDER BY<\/code> clause.<\/p>\n\n\n\n<p>Let\u2019s take some examples of using the PostgreSQL <code>ORDER BY<\/code>&nbsp;clause.<\/p>\n\n\n\n<h2>PostgreSQL <code>ORDER BY<\/code> examples<\/h2>\n\n\n\n<p>We will use the <code>customer<\/code> table in the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-sample-database\/\">sample database<\/a> for the demonstration.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"206\" height=\"256\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/customer.png\" alt=\"customer table\" class=\"wp-image-4011\"\/><\/figure>\n\n\n\n<h3>1) Using PostgreSQL <code>ORDER BY<\/code> clause to sort rows by one column<\/h3>\n\n\n\n<p>The following query uses the <code>ORDER BY<\/code> clause to sort customers by their first names in ascending order:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\tfirst_name,\n\tlast_name\n<span class=\"hljs-keyword\">FROM<\/span>\n\tcustomer\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span>\n\tfirst_name <span class=\"hljs-keyword\">ASC<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"327\" height=\"360\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/12\/PostgreSQL-ORDER-BY-one-column-example.png\" alt=\"PostgreSQL ORDER BY one column example\" class=\"wp-image-4435\"\/><\/figure>\n\n\n\n<p>Since the <code>ASC<\/code> option is the default, you can omit it in the <code>ORDER BY<\/code> clause like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\tfirst_name,\n\tlast_name\n<span class=\"hljs-keyword\">FROM<\/span>\n\tcustomer\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span>\n\tfirst_name;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>2) Using PostgreSQL <code>ORDER BY<\/code> clause to sort rows by one column in descending order<\/h3>\n\n\n\n<p>The following statement selects the first name and last name from the <code>customer<\/code> table and sorts the rows by values in the last name column in descending order:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n       first_name,\n       last_name\n<span class=\"hljs-keyword\">FROM<\/span>\n       customer\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span>\n       last_name <span class=\"hljs-keyword\">DESC<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"328\" height=\"408\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/12\/PostgreSQL-ORDER-BY-one-column-desc-example.png\" alt=\"PostgreSQL ORDER BY one column DESC example\" class=\"wp-image-4436\"\/><\/figure>\n\n\n\n<h3>3) Using PostgreSQL <code>ORDER BY<\/code> clause to sort rows by multiple columns<\/h3>\n\n\n\n<p>The following statement selects the first name and last name from the customer table and sorts the rows by the first name in ascending order and last name in descending order:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\tfirst_name,\n\tlast_name\n<span class=\"hljs-keyword\">FROM<\/span>\n\tcustomer\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span>\n\tfirst_name <span class=\"hljs-keyword\">ASC<\/span>,\n\tlast_name <span class=\"hljs-keyword\">DESC<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"347\" height=\"515\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/12\/PostgreSQL-ORDER-BY-multiple-columns.png\" alt=\"PostgreSQL ORDER BY multiple columns\" class=\"wp-image-4437\"\/><\/figure>\n\n\n\n<p>In this example, the ORDER BY clause sorts rows by values in the first name column first. And then it sorts the sorted rows by values in the last name column.<\/p>\n\n\n\n<p>As you can see clearly from the output, two customers with the same first name <code>Kelly<\/code> have the last name sorted in descending order.<\/p>\n\n\n\n<h3>4) Using PostgreSQL <code>ORDER BY<\/code> clause to sort rows by expressions<\/h3>\n\n\n\n<p>The <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-length-function\/\">LENGTH()<\/a><\/code> function accepts a string and returns the length of that string. <\/p>\n\n\n\n<p>The following statement selects the first names and their lengths. It sorts the rows by the lengths of the first names:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> \n\tfirst_name,\n\t<span class=\"hljs-keyword\">LENGTH<\/span>(first_name) <span class=\"hljs-keyword\">len<\/span>\n<span class=\"hljs-keyword\">FROM<\/span>\n\tcustomer\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> \n\t<span class=\"hljs-keyword\">len<\/span> <span class=\"hljs-keyword\">DESC<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"260\" height=\"338\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/12\/PostgreSQL-ORDER-BY-expressions.png\" alt=\"PostgreSQL ORDER BY expressions\" class=\"wp-image-4438\"\/><\/figure>\n\n\n\n<p>Because the <code>ORDER BY<\/code> clause is evaluated after the <code>SELECT<\/code> clause, the column alias <code>len<\/code> is available and can be used in the <code>ORDER BY<\/code> clause.<\/p>\n\n\n\n<h2>PostgreSQL ORDER BY clause and NULL<\/h2>\n\n\n\n<p>In the database world, <code>NULL<\/code> is a marker that indicates the missing data or the data is unknown at the time of recording.<\/p>\n\n\n\n<p>When you sort rows that contains <code>NULL<\/code>, you can specify the order of <code>NULL<\/code> with other non-null values by using the <code>NULLS FIRST<\/code> or <code>NULLS LAST<\/code> option of the <code>ORDER BY<\/code> clause:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><div><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">ORDER<\/span> <span class=\"hljs-selector-tag\">BY<\/span> <span class=\"hljs-selector-tag\">sort_expresssion<\/span> <span class=\"hljs-selector-attr\">[ASC | DESC]<\/span> <span class=\"hljs-selector-attr\">[NULLS FIRST | NULLS LAST]<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>NULLS FIRST<\/code> option places <code>NULL<\/code> before other non-null values and the <code>NULL LAST<\/code> option places <code>NULL<\/code> after other non-null values.<\/p>\n\n\n\n<p>Let&#8217;s <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-table\/\">create a table<\/a> for the demonstration.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-comment\">-- create a new table<\/span>\n<span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> sort_demo(\n\t<span class=\"hljs-keyword\">num<\/span> <span class=\"hljs-built_in\">INT<\/span>\n);\n\n<span class=\"hljs-comment\">-- insert some data<\/span>\n<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> sort_demo(<span class=\"hljs-keyword\">num<\/span>)\n<span class=\"hljs-keyword\">VALUES<\/span>(<span class=\"hljs-number\">1<\/span>),(<span class=\"hljs-number\">2<\/span>),(<span class=\"hljs-number\">3<\/span>),(<span class=\"hljs-literal\">null<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p class=\"note\">Note that you don&#8217;t need to understand the <code>CREATE TABLE<\/code> and <code>INSERT<\/code> statements. You just need to execute it from <code>pgAdmin<\/code> or <code>psql<\/code> to create the <code>sort_demo<\/code> table and insert data into it.<\/p>\n\n\n\n<p>The following query returns data from the <code>sort_demo<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> <span class=\"hljs-keyword\">num<\/span>\n<span class=\"hljs-keyword\">FROM<\/span> sort_demo\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> <span class=\"hljs-keyword\">num<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"95\" height=\"139\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-ORDER-ASC-NULLS-LAST.png\" alt=\"\" class=\"wp-image-4722\"\/><\/figure>\n\n\n\n<p>In this example, the <code>ORDER BY<\/code> clause sorts values in the <code>num<\/code> column of the <code>sort_demo<\/code> table in ascending order. It places <code>NULL<\/code> after other values.<\/p>\n\n\n\n<p>So if you use the <code>ASC<\/code> option, the <code>ORDER BY<\/code> clause uses the <code>NULLS LAST<\/code> option by default. Therefore, the following query returns the same result:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> <span class=\"hljs-keyword\">num<\/span>\n<span class=\"hljs-keyword\">FROM<\/span> sort_demo\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> <span class=\"hljs-keyword\">num<\/span> <span class=\"hljs-keyword\">NULLS<\/span> <span class=\"hljs-keyword\">LAST<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To place <code>NULL<\/code> before other non-null values, you use the <code>NULLS FIRST<\/code> option:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> <span class=\"hljs-keyword\">num<\/span>\n<span class=\"hljs-keyword\">FROM<\/span> sort_demo\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> <span class=\"hljs-keyword\">num<\/span> <span class=\"hljs-keyword\">NULLS<\/span> <span class=\"hljs-keyword\">FIRST<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"93\" height=\"138\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-ORDER-ASC-NULLS-FIRST.png\" alt=\"\" class=\"wp-image-4721\"\/><\/figure>\n\n\n\n<p>The following statement sorts values in the <code>num<\/code> column of the <code>sort_demo<\/code> table in descending order:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> <span class=\"hljs-keyword\">num<\/span>\n<span class=\"hljs-keyword\">FROM<\/span> sort_demo\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> <span class=\"hljs-keyword\">num<\/span> <span class=\"hljs-keyword\">DESC<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"92\" height=\"137\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-ORDER-DESC-NULLS-FIRST.png\" alt=\"\" class=\"wp-image-4724\"\/><\/figure>\n\n\n\n<p>As you can see clearly from the output, the <code>ORDER BY<\/code> clause with the <code>DESC<\/code> option uses the <code>NULLS FIRST<\/code> by default.<\/p>\n\n\n\n<p>To reverse the order, you can use the <code>NULLS LAST<\/code> option:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> <span class=\"hljs-keyword\">num<\/span>\n<span class=\"hljs-keyword\">FROM<\/span> sort_demo\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> <span class=\"hljs-keyword\">num<\/span> <span class=\"hljs-keyword\">DESC<\/span> <span class=\"hljs-keyword\">NULLS<\/span> <span class=\"hljs-keyword\">LAST<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"94\" height=\"141\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-ORDER-DESC-NULLS-LAST.png\" alt=\"\" class=\"wp-image-4723\"\/><\/figure>\n\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use the <code>ORDER BY<\/code> clause in the <code>SELECT<\/code> statement to sort rows.<\/li><li>Use the <code>ASC<\/code> option to sort rows in ascending order and <code>DESC<\/code> option to sort rows in descending order. The <code>ORDER BY<\/code> clause uses the <code>ASC<\/code> option by default.<\/li><li>Use <code>NULLS FIRST<\/code> and <code>NULLS LAST<\/code> options to explicitly specify the order of <code>NULL<\/code> with other non-null values.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"166\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-order-by\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL ORDER BY\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"166\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-order-by\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL ORDER BY\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>This tutorial shows you how to use the PostgreSQL ORDER BY clause to sort result set returned by a query in ascending or descending order.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":3,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL ORDER BY<\/title>\n<meta name=\"description\" content=\"This tutorial shows you how to use the PostgreSQL ORDER BY clause to sort result set returned by a query in ascending or descending order.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-order-by\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"7 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-order-by\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-ORDER-BY.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-ORDER-BY.png\",\"width\":531,\"height\":84},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-order-by\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-order-by\/\",\"name\":\"PostgreSQL ORDER BY\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-order-by\/#primaryimage\"},\"datePublished\":\"2012-08-27T07:58:04+00:00\",\"dateModified\":\"2021-03-14T00:59:58+00:00\",\"description\":\"This tutorial shows you how to use the PostgreSQL ORDER BY clause to sort result set returned by a query in ascending or descending order.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-order-by\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-order-by\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-order-by\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL ORDER BY\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL ORDER BY","description":"This tutorial shows you how to use the PostgreSQL ORDER BY clause to sort result set returned by a query in ascending or descending order.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-order-by\/","twitter_misc":{"Est. reading time":"7 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-order-by\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-ORDER-BY.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-ORDER-BY.png","width":531,"height":84},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-order-by\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-order-by\/","name":"PostgreSQL ORDER BY","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-order-by\/#primaryimage"},"datePublished":"2012-08-27T07:58:04+00:00","dateModified":"2021-03-14T00:59:58+00:00","description":"This tutorial shows you how to use the PostgreSQL ORDER BY clause to sort result set returned by a query in ascending or descending order.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-order-by\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-order-by\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-order-by\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL ORDER BY"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/166"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=166"}],"version-history":[{"count":5,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/166\/revisions"}],"predecessor-version":[{"id":5909,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/166\/revisions\/5909"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=166"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}