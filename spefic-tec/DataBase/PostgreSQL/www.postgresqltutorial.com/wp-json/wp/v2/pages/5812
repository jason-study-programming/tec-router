{"id":5812,"date":"2020-08-02T20:38:42","date_gmt":"2020-08-03T03:38:42","guid":{"rendered":"https:\/\/www.postgresqltutorial.com\/?page_id=5812"},"modified":"2020-08-02T20:53:41","modified_gmt":"2020-08-03T03:53:41","slug":"postgresql-python-call-postgresql-functions","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/postgresql-python-call-postgresql-functions\/","title":{"rendered":"PostgreSQL Python: Call PostgreSQL Functions"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to call PostgreSQL functions from a Python program.<\/p>\n\n\n\n<h2>Calling a PostgreSQL function in Python steps<\/h2>\n\n\n\n<p>To call a PostgreSQL function from a Python program, you use the following steps:<\/p>\n\n\n\n<p>First, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/connect\/\">create a new database connection<\/a> to the PostgreSQL database server by calling the <code>connect()<\/code> function of the <code>psycopg2<\/code> module.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\">conn = psycopg2.connect(dsn)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>connect()<\/code> method returns a new instance of the <code>connection<\/code> class.<\/p>\n\n\n\n<p>Next, create a new cursor by calling the <code>cursor()<\/code> method of the connection object.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">cur = conn.cursor()<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Then, pass the name of the function and the optional input values to the <code>callproc()<\/code> method of the cursor object.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">cur.callproc('function_name', (value1,value2))<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Internally, the \u00a0<code>callproc()<\/code> method translates the function call and input values into the following statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\">SELECT * FROM function_name(value1,value2);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Therefore, you can use the <code>execute()<\/code> method of the cursor object to call a function as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\">cur.execute(<span class=\"hljs-string\">\"SELECT * FROM function_name( %s,%s); \"<\/span>,(value1,value2))<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Both statements have the same effect.<\/p>\n\n\n\n<p>After that, process the result set returned by the function using the <code>fetchone()<\/code>, \u00a0<code>fetchall()<\/code>, or \u00a0<code>fetchmany()<\/code> method.<\/p>\n\n\n\n<p>Finally, call the <code>close()<\/code> method of the <code>cursor<\/code> and <code>connection<\/code> objects to close the communication with the PostgreSQL database server.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\">cur.close()\nconn.close()<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Calling a function example<\/h2>\n\n\n\n<p>The following <code>get_parts_by_vendors()<\/code> function returns a list of parts provided by a specified vendor.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">OR<\/span> <span class=\"hljs-keyword\">REPLACE<\/span> <span class=\"hljs-keyword\">FUNCTION<\/span> get_parts_by_vendor(<span class=\"hljs-keyword\">id<\/span> <span class=\"hljs-built_in\">integer<\/span>)\n  <span class=\"hljs-keyword\">RETURNS<\/span> <span class=\"hljs-keyword\">TABLE<\/span>(part_id <span class=\"hljs-built_in\">INTEGER<\/span>, part_name <span class=\"hljs-built_in\">VARCHAR<\/span>) <span class=\"hljs-keyword\">AS<\/span>\n$$\n<span class=\"hljs-keyword\">BEGIN<\/span>\n <span class=\"hljs-keyword\">RETURN<\/span> <span class=\"hljs-keyword\">QUERY<\/span>\n\n <span class=\"hljs-keyword\">SELECT<\/span> parts.part_id, parts.part_name\n <span class=\"hljs-keyword\">FROM<\/span> parts\n <span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> vendor_parts <span class=\"hljs-keyword\">on<\/span> vendor_parts.part_id = parts.part_id\n <span class=\"hljs-keyword\">WHERE<\/span> vendor_id = <span class=\"hljs-keyword\">id<\/span>;\n\n<span class=\"hljs-keyword\">END<\/span>; $$\n\nLANGUAGE plpgsql;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following <code>get_parts()<\/code> function calls the <code>get_parts_by_vendors()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\"><span class=\"hljs-comment\">#!\/usr\/bin\/python<\/span>\n<span class=\"hljs-keyword\">import<\/span> psycopg2\n<span class=\"hljs-keyword\">from<\/span> config <span class=\"hljs-keyword\">import<\/span> config\n\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">get_parts<\/span><span class=\"hljs-params\">(vendor_id)<\/span>:<\/span>\n    <span class=\"hljs-string\">\"\"\" get parts provided by a vendor specified by the vendor_id \"\"\"<\/span>\n    conn = <span class=\"hljs-literal\">None<\/span>\n    <span class=\"hljs-keyword\">try<\/span>:\n        <span class=\"hljs-comment\"># read database configuration<\/span>\n        params = config()\n        <span class=\"hljs-comment\"># connect to the PostgreSQL database<\/span>\n        conn = psycopg2.connect(**params)\n        <span class=\"hljs-comment\"># create a cursor object for execution<\/span>\n        cur = conn.cursor()\n        <span class=\"hljs-comment\"># another way to call a function<\/span>\n        <span class=\"hljs-comment\"># cur.execute(\"SELECT * FROM get_parts_by_vendor( %s); \",(vendor_id,))<\/span>\n        cur.callproc(<span class=\"hljs-string\">'get_parts_by_vendor'<\/span>, (vendor_id,))\n        <span class=\"hljs-comment\"># process the result set<\/span>\n        row = cur.fetchone()\n        <span class=\"hljs-keyword\">while<\/span> row <span class=\"hljs-keyword\">is<\/span> <span class=\"hljs-keyword\">not<\/span> <span class=\"hljs-literal\">None<\/span>:\n            print(row)\n            row = cur.fetchone()\n        <span class=\"hljs-comment\"># close the communication with the PostgreSQL database server<\/span>\n        cur.close()\n    <span class=\"hljs-keyword\">except<\/span> (Exception, psycopg2.DatabaseError) <span class=\"hljs-keyword\">as<\/span> error:\n        print(error)\n    <span class=\"hljs-keyword\">finally<\/span>:\n        <span class=\"hljs-keyword\">if<\/span> conn <span class=\"hljs-keyword\">is<\/span> <span class=\"hljs-keyword\">not<\/span> <span class=\"hljs-literal\">None<\/span>:\n            conn.close()<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following calls the <code>get_parts()<\/code> function to get a list of parts provided by the vendor with id 1:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><div><code class=\"hljs language-python\"><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    get_parts(<span class=\"hljs-number\">1<\/span>)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned step by step how to call a PostgreSQL function in Python.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"5812\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/postgresql-python-call-postgresql-functions\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Python: Call PostgreSQL Functions\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"5812\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/postgresql-python-call-postgresql-functions\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Python: Call PostgreSQL Functions\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to call PostgreSQL functions from a Python program.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":2071,"menu_order":5,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL Python: Call PostgreSQL Functions<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to call PostgreSQL functions from a Python program.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/postgresql-python-call-postgresql-functions\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/postgresql-python-call-postgresql-functions\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/postgresql-python-call-postgresql-functions\/\",\"name\":\"PostgreSQL Python: Call PostgreSQL Functions\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"datePublished\":\"2020-08-03T03:38:42+00:00\",\"dateModified\":\"2020-08-03T03:53:41+00:00\",\"description\":\"In this tutorial, you will learn how to call PostgreSQL functions from a Python program.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/postgresql-python-call-postgresql-functions\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/postgresql-python-call-postgresql-functions\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/postgresql-python-call-postgresql-functions\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Python\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-python\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL Python: Call PostgreSQL Functions\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL Python: Call PostgreSQL Functions","description":"In this tutorial, you will learn how to call PostgreSQL functions from a Python program.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/postgresql-python-call-postgresql-functions\/","twitter_misc":{"Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/postgresql-python-call-postgresql-functions\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/postgresql-python-call-postgresql-functions\/","name":"PostgreSQL Python: Call PostgreSQL Functions","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"datePublished":"2020-08-03T03:38:42+00:00","dateModified":"2020-08-03T03:53:41+00:00","description":"In this tutorial, you will learn how to call PostgreSQL functions from a Python program.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/postgresql-python-call-postgresql-functions\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-python\/postgresql-python-call-postgresql-functions\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/postgresql-python-call-postgresql-functions\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Python","item":"https:\/\/www.postgresqltutorial.com\/postgresql-python\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL Python: Call PostgreSQL Functions"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5812"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=5812"}],"version-history":[{"count":4,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5812\/revisions"}],"predecessor-version":[{"id":5817,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/5812\/revisions\/5817"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2071"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=5812"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}