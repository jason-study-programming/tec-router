{"id":4242,"date":"2019-05-24T17:53:00","date_gmt":"2019-05-25T00:53:00","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=4242"},"modified":"2020-04-11T03:53:00","modified_gmt":"2020-04-11T10:53:00","slug":"postgresql-cume_dist-function","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-window-function\/postgresql-cume_dist-function\/","title":{"rendered":"PostgreSQL CUME_DIST Function"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PostgreSQL <code>CUME_DIST()<\/code> function to calculate the cumulative distribution of a value within a set of values.<\/p>\n\n\n\n<h2>PostgreSQL <code>CUME_DIST()<\/code> function overview<\/h2>\n\n\n\n<p>Sometimes, you may want to create a report that shows the top or bottom x% values from a data set, for example, top 1% of products by revenue. Fortunately, PostgreSQL provides us with the <code>CUME_DIST()<\/code> function to calculate it.<\/p>\n\n\n\n<p>The <code>CUME_DIST()<\/code> function returns the cumulative distribution of a value within a set of values. In other words, it returns the relative position of a value in a set of values.<\/p>\n\n\n\n<p>The syntax of the <code>CUME_DIST()<\/code> function is as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"> CUME_DIST() OVER (\n    [PARTITION BY partition_expression, ... ]\n    ORDER BY sort_expression [ASC | DESC], ...\n)\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Let&#8217;s examine this syntax in detail.<\/p>\n\n\n\n<h3><code>PARTITION BY<\/code> clause<\/h3>\n\n\n\n<p>The <code>PARTITION BY<\/code> clause divides rows into multiple partitions to which the function is applied.<\/p>\n\n\n\n<p>The <code>PARTITION BY<\/code> clause is optional. If you skip it, the <code>CUME_DIST()<\/code> function will treat the whole result set as a single partition.<\/p>\n\n\n\n<h3><code>ORDER BY<\/code> clause<\/h3>\n\n\n\n<p>The <code>ORDER BY<\/code> clause sorts rows in each partition to which the <code>CUME_DIST()<\/code> function is applied.<\/p>\n\n\n\n<h3>Return value<\/h3>\n\n\n\n<p>The <code>CUME_DIST()<\/code> a double precision value which is greater than 0 and less than or equal to 1:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">0 &lt; CUME_DIST() &lt;= 1\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The function returns the same cumulative distribution values for the same tie values.<\/p>\n\n\n\n<h2>PostgreSQL <code>CUME_DIST()<\/code> examples<\/h2>\n\n\n\n<p>First, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-table\/\">create a new table<\/a> named <code>sales_stats<\/code> that stores the&nbsp; sales revenue by employees:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> sales_stats(\n    <span class=\"hljs-keyword\">name<\/span> <span class=\"hljs-built_in\">VARCHAR<\/span>(<span class=\"hljs-number\">100<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n    <span class=\"hljs-keyword\">year<\/span> <span class=\"hljs-built_in\">SMALLINT<\/span> <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span> <span class=\"hljs-keyword\">CHECK<\/span> (<span class=\"hljs-keyword\">year<\/span> &gt; <span class=\"hljs-number\">0<\/span>),\n    amount <span class=\"hljs-built_in\">DECIMAL<\/span>(<span class=\"hljs-number\">10<\/span>,<span class=\"hljs-number\">2<\/span>) <span class=\"hljs-keyword\">CHECK<\/span> (amount &gt;= <span class=\"hljs-number\">0<\/span>),\n    PRIMARY <span class=\"hljs-keyword\">KEY<\/span> (<span class=\"hljs-keyword\">name<\/span>,<span class=\"hljs-keyword\">year<\/span>)\n);\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-insert\/\">insert<\/a> some rows into the <code>sales_stats<\/code> table:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> \n    sales_stats(<span class=\"hljs-keyword\">name<\/span>, <span class=\"hljs-keyword\">year<\/span>, amount)\n<span class=\"hljs-keyword\">VALUES<\/span>\n    (<span class=\"hljs-string\">'John Doe'<\/span>,<span class=\"hljs-number\">2018<\/span>,<span class=\"hljs-number\">120000<\/span>),\n    (<span class=\"hljs-string\">'Jane Doe'<\/span>,<span class=\"hljs-number\">2018<\/span>,<span class=\"hljs-number\">110000<\/span>),\n    (<span class=\"hljs-string\">'Jack Daniel'<\/span>,<span class=\"hljs-number\">2018<\/span>,<span class=\"hljs-number\">150000<\/span>),\n    (<span class=\"hljs-string\">'Yin Yang'<\/span>,<span class=\"hljs-number\">2018<\/span>,<span class=\"hljs-number\">30000<\/span>),\n    (<span class=\"hljs-string\">'Stephane Heady'<\/span>,<span class=\"hljs-number\">2018<\/span>,<span class=\"hljs-number\">200000<\/span>),\n    (<span class=\"hljs-string\">'John Doe'<\/span>,<span class=\"hljs-number\">2019<\/span>,<span class=\"hljs-number\">150000<\/span>),\n    (<span class=\"hljs-string\">'Jane Doe'<\/span>,<span class=\"hljs-number\">2019<\/span>,<span class=\"hljs-number\">130000<\/span>),\n    (<span class=\"hljs-string\">'Jack Daniel'<\/span>,<span class=\"hljs-number\">2019<\/span>,<span class=\"hljs-number\">180000<\/span>),\n    (<span class=\"hljs-string\">'Yin Yang'<\/span>,<span class=\"hljs-number\">2019<\/span>,<span class=\"hljs-number\">25000<\/span>),\n    (<span class=\"hljs-string\">'Stephane Heady'<\/span>,<span class=\"hljs-number\">2019<\/span>,<span class=\"hljs-number\">270000<\/span>);\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following examples help you get a better understanding of the <code>CUME_DIST()<\/code> function.<\/p>\n\n\n\n<h3>1) Using PostgreSQL <code>CUME_DIST()<\/code> function over a result set example<\/h3>\n\n\n\n<p>The following example returns the sales amount percentile for each sales employee in 2018:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> \n    <span class=\"hljs-keyword\">name<\/span>,\n    <span class=\"hljs-keyword\">year<\/span>, \n    amount,\n    <span class=\"hljs-keyword\">CUME_DIST<\/span>() <span class=\"hljs-keyword\">OVER<\/span> (\n        <span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> amount\n    ) \n<span class=\"hljs-keyword\">FROM<\/span> \n    sales_stats\n<span class=\"hljs-keyword\">WHERE<\/span> \n    <span class=\"hljs-keyword\">year<\/span> = <span class=\"hljs-number\">2018<\/span>;\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Here is the output:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"553\" height=\"178\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-CUME_DIST-Function-over-a-result-set-example.png\" alt=\"PostgreSQL CUME_DIST Function over a result set example\" class=\"wp-image-4243\"\/><\/figure>\n\n\n\n<p>As clearly shown in the output, we can find that 80% of sales employees have sales less than or equal to 150K in 2018.<\/p>\n\n\n\n<h3>2) Using PostgreSQL <code>CUME_DIST()<\/code> function over a partition example<\/h3>\n\n\n\n<p>The following example uses the <code>CUME_DIST()<\/code> function to calculate the sales percentile for each sales employee in 2018 and 2019.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> \n    <span class=\"hljs-keyword\">name<\/span>,\n\t<span class=\"hljs-keyword\">year<\/span>,\n\tamount,\n    <span class=\"hljs-keyword\">CUME_DIST<\/span>() <span class=\"hljs-keyword\">OVER<\/span> (\n\t\t<span class=\"hljs-keyword\">PARTITION<\/span> <span class=\"hljs-keyword\">BY<\/span> <span class=\"hljs-keyword\">year<\/span>\n        <span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> amount\n    )\n<span class=\"hljs-keyword\">FROM<\/span> \n    sales_stats;\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Here is the output:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"565\" height=\"313\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-CUME_DIST-Function-over-a-partition-example.png\" alt=\"PostgreSQL CUME_DIST Function over a partition example\" class=\"wp-image-4244\"\/><\/figure>\n\n\n\n<p>In this example:<\/p>\n\n\n\n<ul><li>The <code>PARTITION BY<\/code>clause divided the rows into two partitions by the year 2018 and 2019.<\/li><li>The <code>ORDER BY<\/code> clause sorted sales amount of every employee in each partition from high to low to which the <code>CUME_DIST()<\/code> function is applied.<\/li><\/ul>\n\n\n\n<p>In this tutorial, you have learned how to use the PostgreSQL <code>CUME_DIST()<\/code> function to calculate the cumulative distribution of a value in a group of values.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"4242\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-window-function\/postgresql-cume_dist-function\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL CUME_DIST Function\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"4242\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-window-function\/postgresql-cume_dist-function\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL CUME_DIST Function\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use the PostgreSQL CUME_DIST() function to calculate the cumulative distribution of a value within a set of values.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":1737,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL CUME_DIST Function By Practical Examples<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will learn how to use the PostgreSQL CUME_DIST() function to calculate the cumulative distribution of a value within a set of values.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-cume_dist-function\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-cume_dist-function\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-CUME_DIST-Function-over-a-result-set-example.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-CUME_DIST-Function-over-a-result-set-example.png\",\"width\":553,\"height\":178,\"caption\":\"PostgreSQL CUME_DIST Function over a result set example\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-cume_dist-function\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-cume_dist-function\/\",\"name\":\"PostgreSQL CUME_DIST Function By Practical Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-cume_dist-function\/#primaryimage\"},\"datePublished\":\"2019-05-25T00:53:00+00:00\",\"dateModified\":\"2020-04-11T10:53:00+00:00\",\"description\":\"In this tutorial, you will learn how to use the PostgreSQL CUME_DIST() function to calculate the cumulative distribution of a value within a set of values.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-cume_dist-function\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-cume_dist-function\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-cume_dist-function\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Window Functions\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-window-function\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL CUME_DIST Function\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL CUME_DIST Function By Practical Examples","description":"In this tutorial, you will learn how to use the PostgreSQL CUME_DIST() function to calculate the cumulative distribution of a value within a set of values.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-cume_dist-function\/","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-cume_dist-function\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-CUME_DIST-Function-over-a-result-set-example.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/PostgreSQL-CUME_DIST-Function-over-a-result-set-example.png","width":553,"height":178,"caption":"PostgreSQL CUME_DIST Function over a result set example"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-cume_dist-function\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-cume_dist-function\/","name":"PostgreSQL CUME_DIST Function By Practical Examples","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-cume_dist-function\/#primaryimage"},"datePublished":"2019-05-25T00:53:00+00:00","dateModified":"2020-04-11T10:53:00+00:00","description":"In this tutorial, you will learn how to use the PostgreSQL CUME_DIST() function to calculate the cumulative distribution of a value within a set of values.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-cume_dist-function\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-cume_dist-function\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-cume_dist-function\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Window Functions","item":"https:\/\/www.postgresqltutorial.com\/postgresql-window-function\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL CUME_DIST Function"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/4242"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=4242"}],"version-history":[{"count":0,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/4242\/revisions"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1737"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=4242"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}