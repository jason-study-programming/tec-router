{"id":1390,"date":"2015-09-18T08:46:21","date_gmt":"2015-09-18T15:46:21","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=1390"},"modified":"2020-07-23T02:53:34","modified_gmt":"2020-07-23T09:53:34","slug":"plpgsql-loop-statements","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-loop-statements\/","title":{"rendered":"PL\/pgSQL Loop Statements"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn about the PL\/pgSQL loop statement that executes a block of code repeatedly.<\/p>\n\n\n\n<h2>Introduction to PL\/pgSQL Loop statement<\/h2>\n\n\n\n<p>The <code>loop<\/code> defines an unconditional loop that executes a block of code repeatedly until terminated by an <code>exit<\/code> or <code>return<\/code> statement. <\/p>\n\n\n\n<p>The following illustrates the syntax of the <code>loop<\/code> statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-symbol\">&lt;&lt;label&gt;&gt;<\/span>\n<span class=\"hljs-keyword\">loop<\/span>\n   statements;\n<span class=\"hljs-keyword\">end<\/span> <span class=\"hljs-keyword\">loop<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Typically, you use an <code><a href=\"https:\/\/www.postgresqltutorial.com\/plpgsql-if-else-statements\/\">if<\/a><\/code> statement inside the loop to terminate it based on a condition like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-symbol\">&lt;&lt;label&gt;&gt;<\/span>\n<span class=\"hljs-keyword\">loop<\/span>\n   statements;\n   <span class=\"hljs-keyword\">if<\/span> condition <span class=\"hljs-keyword\">then<\/span>\n      <span class=\"hljs-keyword\">exit<\/span>;\n   <span class=\"hljs-keyword\">end<\/span> <span class=\"hljs-keyword\">if<\/span>;\n<span class=\"hljs-keyword\">end<\/span> <span class=\"hljs-keyword\">loop<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>It&#8217;s possible to place a loop statement inside another loop statement. When a <code>loop<\/code> statement is placed inside another <code>loop<\/code> statement, it is called a nested loop:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-symbol\">&lt;&lt;outer&gt;&gt;<\/span>\n<span class=\"hljs-keyword\">loop<\/span> \n   statements;\n   <span class=\"hljs-symbol\">&lt;&lt;inner&gt;&gt;<\/span>\n   <span class=\"hljs-keyword\">loop<\/span>\n     <span class=\"hljs-comment\">\/* ... *\/<\/span>\n     <span class=\"hljs-keyword\">exit<\/span> <span class=\"hljs-symbol\">&lt;&lt;inner&gt;&gt;<\/span>\n   <span class=\"hljs-keyword\">end<\/span> <span class=\"hljs-keyword\">loop<\/span>;\n<span class=\"hljs-keyword\">end<\/span> <span class=\"hljs-keyword\">loop<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>When you have nested loops, you need to use the loop label so that you can specify it in the <code>exit<\/code> and <code>continue<\/code> statement to indicate which loop these statements refer to.<\/p>\n\n\n\n<h2>PL\/pgSQL loop statement example<\/h2>\n\n\n\n<p>The following example shows how to use the <code>loop<\/code> statement to calculate the Fibonacci sequence number.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">do<\/span> $$<span class=\"pgsql\">\n<span class=\"hljs-keyword\">declare<\/span>\n   n <span class=\"hljs-type\">integer<\/span>:= <span class=\"hljs-number\">10<\/span>;\n   fib <span class=\"hljs-type\">integer<\/span> := <span class=\"hljs-number\">0<\/span>;\n   counter <span class=\"hljs-type\">integer<\/span> := <span class=\"hljs-number\">0<\/span> ; \n   i <span class=\"hljs-type\">integer<\/span> := <span class=\"hljs-number\">0<\/span> ; \n   j <span class=\"hljs-type\">integer<\/span> := <span class=\"hljs-number\">1<\/span> ;\n<span class=\"hljs-keyword\">begin<\/span>\n\t<span class=\"hljs-keyword\">if<\/span> (n &lt; <span class=\"hljs-number\">1<\/span>) <span class=\"hljs-keyword\">then<\/span>\n\t\tfib := <span class=\"hljs-number\">0<\/span> ;\n\t<span class=\"hljs-keyword\">end<\/span> <span class=\"hljs-keyword\">if<\/span>; \n\t<span class=\"hljs-keyword\">loop<\/span> \n\t\t<span class=\"hljs-keyword\">exit<\/span> <span class=\"hljs-keyword\">when<\/span> counter = n ; \n\t\tcounter := counter + <span class=\"hljs-number\">1<\/span> ; \n\t\t<span class=\"hljs-keyword\">select<\/span> j, i + j <span class=\"hljs-keyword\">into<\/span> i,\tj ;\n\t<span class=\"hljs-keyword\">end<\/span> <span class=\"hljs-keyword\">loop<\/span>; \n\tfib := i;\n    <span class=\"hljs-keyword\">raise<\/span> <span class=\"hljs-keyword\">notice<\/span> <span class=\"hljs-string\">'%'<\/span>, fib; \n<span class=\"hljs-keyword\">end<\/span>; $$<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"HTTP\" data-shcb-language-slug=\"http\"><div><code class=\"hljs language-http\"><span class=\"hljs-attribute\">NOTICE<\/span>:  55<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTTP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">http<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The block calculates the nth Fibonacci number of an integer (<code>n<\/code>). <\/p>\n\n\n\n<p>By definition, Fibonacci numbers are a sequence of integers starting with 0 and 1, and each subsequent number is the sum of the two previous numbers, for example, 1, 1, 2 (1+1), 3 (2+1), 5 (3 +2), 8 (5+3), &#8230;<\/p>\n\n\n\n<p>In the declaration section, the <code>counter<\/code> variable is initialized to zero (0). The loop is terminated when <code>counter<\/code> equals <code>n<\/code>. The following select statement swaps values of two variables <code>i<\/code> and <code>j<\/code> :<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">SELECT<\/span> j, i + j <span class=\"hljs-keyword\">INTO<\/span> i,\tj ;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned how to use the PL\/pgSQL loop statement to create unconditional loops.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1390\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-loop-statements\/\"\n\t\t\t\tdata-post-title=\"PL\/pgSQL Loop Statements\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1390\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-loop-statements\/\"\n\t\t\t\tdata-post-title=\"PL\/pgSQL Loop Statements\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you will learn how to use various kinds of PL\/pgSQL loop statements that execute a block of statements repeatedly.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":788,"menu_order":12,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PL\/pgSQL Loop Statements<\/title>\n<meta name=\"description\" content=\"in this tutorial, we will introduce you to various kinds of PL\/pgSQL loop statements that execute a block of statements repeatedly.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-loop-statements\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-loop-statements\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-loop-statements\/\",\"name\":\"PL\/pgSQL Loop Statements\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"datePublished\":\"2015-09-18T15:46:21+00:00\",\"dateModified\":\"2020-07-23T09:53:34+00:00\",\"description\":\"in this tutorial, we will introduce you to various kinds of PL\/pgSQL loop statements that execute a block of statements repeatedly.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-loop-statements\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-loop-statements\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-loop-statements\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL PL\/pgSQL\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PL\/pgSQL Loop Statements\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PL\/pgSQL Loop Statements","description":"in this tutorial, we will introduce you to various kinds of PL\/pgSQL loop statements that execute a block of statements repeatedly.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-loop-statements\/","twitter_misc":{"Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-loop-statements\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-loop-statements\/","name":"PL\/pgSQL Loop Statements","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"datePublished":"2015-09-18T15:46:21+00:00","dateModified":"2020-07-23T09:53:34+00:00","description":"in this tutorial, we will introduce you to various kinds of PL\/pgSQL loop statements that execute a block of statements repeatedly.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-loop-statements\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-loop-statements\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-loop-statements\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL PL\/pgSQL","item":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/"},{"@type":"ListItem","position":3,"name":"PL\/pgSQL Loop Statements"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1390"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=1390"}],"version-history":[{"count":5,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1390\/revisions"}],"predecessor-version":[{"id":5465,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1390\/revisions\/5465"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/788"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=1390"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}