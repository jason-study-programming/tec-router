{"id":2035,"date":"2016-06-12T06:31:52","date_gmt":"2016-06-12T13:31:52","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=2035"},"modified":"2022-02-09T07:55:54","modified_gmt":"2022-02-09T14:55:54","slug":"query","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/","title":{"rendered":"PostgreSQL PHP: Querying Data"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn to query data from the PostgreSQL database in PHP using PDO.<\/p>\n\n\n\n<h2 id=\"querying-all-rows-in-a-table\">Querying all rows in a table<\/h2>\n\n\n\n<p>To query all rows from a table in the PostgreSQL database, you use the following steps:<\/p>\n\n\n\n<ol><li>First, <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-php\/connect\/\">connect to the PostgreSQL database<\/a> by creating a new PDO object.<\/li><li>Second, call the <code>query()<\/code> method of the PDO object. The query() method accepts a <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-select\/\">SELECT<\/a> statement as the argument. The query method returns a <code>PDOStatement<\/code> object.<\/li><li>Third, fetch the next rows from the result by calling the fetch() method of the PDOstatement object.&nbsp;The fetch_style argument of the <code>fetch()<\/code> method controls how the result returned.&nbsp;For example, the <code>PDO::FETCH_ASSOC<\/code> instructs the <code>fetch()<\/code> method to return the result set as an array indexed by column name.<\/li><\/ol>\n\n\n\n<p>We will use the <code>stocks<\/code> table created in the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-php\/create-tables\/\">creating table tutorial<\/a> for the demonstration. Let&#8217;s create a new class  <code>StockDB<\/code> for storing all the methods that select data from the <code>stocks<\/code> table.<\/p>\n\n\n\n<p>The following <code>all()<\/code> method selects all rows in the <code>stocks<\/code> table.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><div><code class=\"hljs language-php\">   <span class=\"hljs-comment\">\/**\n     * Return all rows in the stocks table\n     * <span class=\"hljs-doctag\">@return<\/span> array\n     *\/<\/span>\n    <span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">all<\/span><span class=\"hljs-params\">()<\/span> <\/span>{\n        $stmt = <span class=\"hljs-keyword\">$this<\/span>-&gt;pdo-&gt;query(<span class=\"hljs-string\">'SELECT id, symbol, company '<\/span>\n                . <span class=\"hljs-string\">'FROM stocks '<\/span>\n                . <span class=\"hljs-string\">'ORDER BY symbol'<\/span>);\n        $stocks = [];\n        <span class=\"hljs-keyword\">while<\/span> ($row = $stmt-&gt;fetch(\\PDO::FETCH_ASSOC)) {\n            $stocks[] = [\n                <span class=\"hljs-string\">'id'<\/span> =&gt; $row[<span class=\"hljs-string\">'id'<\/span>],\n                <span class=\"hljs-string\">'symbol'<\/span> =&gt; $row[<span class=\"hljs-string\">'symbol'<\/span>],\n                <span class=\"hljs-string\">'company'<\/span> =&gt; $row[<span class=\"hljs-string\">'company'<\/span>]\n            ];\n        }\n        <span class=\"hljs-keyword\">return<\/span> $stocks;\n    }<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To test the <code>all()<\/code> method, we use the following code in the <code>index.php<\/code> file.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"199\" height=\"146\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-PHP-Query-Example.png\" alt=\"PostgreSQL PHP Query Example\" class=\"wp-image-2036\"\/><\/figure>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">&lt;?php\nrequire 'vendor\/autoload.php';\n\n<span class=\"hljs-keyword\">use<\/span> PostgreSQLTutorial\\<span class=\"hljs-keyword\">Connection<\/span> <span class=\"hljs-keyword\">as<\/span> <span class=\"hljs-keyword\">Connection<\/span>;\n<span class=\"hljs-keyword\">use<\/span> PostgreSQLTutorial\\StockDB <span class=\"hljs-keyword\">as<\/span> StockDB;\n\ntry {\n    \/\/ connect to the PostgreSQL database\n    $pdo = Connection::get()-&gt;connect();\n    \/\/ \n    $stockDB = new StockDB($pdo);\n    \/\/ get all stocks data\n    $stocks = $stockDB-&gt;all();\n} catch (\\PDOException $e) {\n    echo $e-&gt;getMessage();\n}\n?&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;PostgreSQL PHP Querying Data Demo&lt;\/title&gt;\n        &lt;link rel=\"stylesheet\" href=\"https:\/\/cdn.rawgit.com\/twbs\/bootstrap\/v4-dev\/dist\/css\/bootstrap.css\"&gt;\n    &lt;\/head&gt;\n    &lt;body&gt;\n        &lt;div class=\"container\"&gt;\n            &lt;h1&gt;Stock List&lt;\/h1&gt;\n            &lt;table class=\"table table-bordered\"&gt;\n                &lt;thead&gt;\n                    &lt;tr&gt;\n                        &lt;th&gt;ID&lt;\/th&gt;\n                        &lt;th&gt;Symbol&lt;\/th&gt;\n                        &lt;th&gt;Company&lt;\/th&gt;\n                    &lt;\/tr&gt;\n                &lt;\/thead&gt;\n                &lt;tbody&gt;\n                    &lt;?php foreach ($stocks as $stock) : ?&gt;\n                        &lt;tr&gt;\n                            &lt;td&gt;&lt;?php echo htmlspecialchars($stock['id']) ?&gt;&lt;\/td&gt;\n                            &lt;td&gt;&lt;?php echo htmlspecialchars($stock['symbol']); ?&gt;&lt;\/td&gt;\n                            &lt;td&gt;&lt;?php echo htmlspecialchars($stock['company']); ?&gt;&lt;\/td&gt;\n                        &lt;\/tr&gt;\n                    &lt;?php endforeach; ?&gt;\n                &lt;\/tbody&gt;\n            &lt;\/table&gt;\n        &lt;\/div&gt;\n    &lt;\/body&gt;\n&lt;\/html&gt;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The first part of the index.php is to connect to the PostgreSQL database and get all rows in the stocks table. The second part shows the data in HTML format.<\/p>\n\n\n\n<p>The following screenshot illustrates the output of the index.php file.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"681\" height=\"307\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-PHP-Query-all-rows-example.png\" alt=\"PostgreSQL PHP Query all rows example\" class=\"wp-image-2037\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-PHP-Query-all-rows-example.png 681w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-PHP-Query-all-rows-example-300x135.png 300w\" sizes=\"(max-width: 681px) 100vw, 681px\" \/><\/figure>\n\n\n\n<h2 id=\"querying-a-specific-row-in-a-table\">Querying a specific row in a table<\/h2>\n\n\n\n<p>To query a specific row in a table, you use the following steps:<\/p>\n\n\n\n<ol><li>First, connect to the PostgreSQL database by creating a new PDO object.<\/li><li>Next, prepare the SELECT statement for execution by calling the <code>prepare()<\/code> method of the PDO object. The <code>prepare()<\/code> method returns an instance of the PDOStatement class.<\/li><li>Then, bind the values to the statement by using the <code>bindValue()<\/code> method.<\/li><li>After that, execute the SELECT statement by calling the <code>execute()<\/code> method of the PDOStatement object.<\/li><li>Finally, fetch the next row in the result using the <code>fetch()<\/code> method. If the SELECT statement returns 1 row, you can use the fetchObject() method to return an object.<\/li><\/ol>\n\n\n\n<p>The following <code>findByPK()<\/code> method selects a row in the stocks table based on a specified id and returns a Stock object.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><div><code class=\"hljs language-php\">   <span class=\"hljs-comment\">\/**\n     * Find stock by id\n     * <span class=\"hljs-doctag\">@param<\/span> int $id\n     * <span class=\"hljs-doctag\">@return<\/span> a stock object\n     *\/<\/span>\n    <span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function<\/span> <span class=\"hljs-title\">findByPK<\/span><span class=\"hljs-params\">($id)<\/span> <\/span>{\n        <span class=\"hljs-comment\">\/\/ prepare SELECT statement<\/span>\n        $stmt = <span class=\"hljs-keyword\">$this<\/span>-&gt;pdo-&gt;prepare(<span class=\"hljs-string\">'SELECT id, symbol, company\n                                       FROM stocks\n                                      WHERE id = :id'<\/span>);\n        <span class=\"hljs-comment\">\/\/ bind value to the :id parameter<\/span>\n        $stmt-&gt;bindValue(<span class=\"hljs-string\">':id'<\/span>, $id);\n        \n        <span class=\"hljs-comment\">\/\/ execute the statement<\/span>\n        $stmt-&gt;execute();\n\n        <span class=\"hljs-comment\">\/\/ return the result set as an object<\/span>\n        <span class=\"hljs-keyword\">return<\/span> $stmt-&gt;fetchObject();\n    }<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To test the <code>findByPK()<\/code> method, we create a new PHP file named <code>stock.php<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><div><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php<\/span>\n<span class=\"hljs-keyword\">require<\/span> <span class=\"hljs-string\">'vendor\/autoload.php'<\/span>;\n\n<span class=\"hljs-keyword\">use<\/span> <span class=\"hljs-title\">PostgreSQLTutorial<\/span>\\<span class=\"hljs-title\">Connection<\/span> <span class=\"hljs-title\">as<\/span> <span class=\"hljs-title\">Connection<\/span>;\n<span class=\"hljs-keyword\">use<\/span> <span class=\"hljs-title\">PostgreSQLTutorial<\/span>\\<span class=\"hljs-title\">StockDB<\/span> <span class=\"hljs-title\">as<\/span> <span class=\"hljs-title\">StockDB<\/span>;\n\n<span class=\"hljs-keyword\">try<\/span> {\n    <span class=\"hljs-comment\">\/\/ connect to the PostgreSQL database<\/span>\n    $pdo = Connection::get()-&gt;connect();\n    <span class=\"hljs-comment\">\/\/ <\/span>\n    $stockDB = <span class=\"hljs-keyword\">new<\/span> StockDB($pdo);\n    <span class=\"hljs-comment\">\/\/ get all stocks data<\/span>\n    $stock = $stockDB-&gt;findByPK(<span class=\"hljs-number\">1<\/span>);\n    \n    var_dump($stock);\n    \n} <span class=\"hljs-keyword\">catch<\/span> (\\PDOException $e) {\n    <span class=\"hljs-keyword\">echo<\/span> $e-&gt;getMessage();\n}<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Run the stock.php file, we get the following result.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><div><code class=\"hljs language-php\">object(stdClass)[<span class=\"hljs-number\">6<\/span>]\n  <span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-string\">'id'<\/span> =&gt; int <span class=\"hljs-number\">1<\/span>\n  <span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-string\">'symbol'<\/span> =&gt; string <span class=\"hljs-string\">'MSFT'<\/span> (length=<span class=\"hljs-number\">4<\/span>)\n  <span class=\"hljs-keyword\">public<\/span> <span class=\"hljs-string\">'company'<\/span> =&gt; string <span class=\"hljs-string\">'Microsoft Corporation'<\/span> (length=<span class=\"hljs-number\">21<\/span>)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned various ways to query data from the tables in the PostgreSQL database using PHP PDO.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2035\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL PHP: Querying Data\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2035\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL PHP: Querying Data\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you will learn to query data from the PostgreSQL database in PHP using PDO. Querying all rows in a table To query all rows from a table in the PostgreSQL database, you use the following steps: First, connect to the PostgreSQL database by creating a new PDO object. Second, call the [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":1980,"menu_order":4,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL PHP: Queying Data From PostgreSQL Tables<\/title>\n<meta name=\"description\" content=\"In this tutorial, you will step by step learn how to query data from the tables in the PostgreSQL database using PHP PDO.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-PHP-Query-Example.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-PHP-Query-Example.png\",\"width\":199,\"height\":146},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/\",\"name\":\"PostgreSQL PHP: Queying Data From PostgreSQL Tables\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/#primaryimage\"},\"datePublished\":\"2016-06-12T13:31:52+00:00\",\"dateModified\":\"2022-02-09T14:55:54+00:00\",\"description\":\"In this tutorial, you will step by step learn how to query data from the tables in the PostgreSQL database using PHP PDO.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL PHP\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-php\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL PHP: Querying Data\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL PHP: Queying Data From PostgreSQL Tables","description":"In this tutorial, you will step by step learn how to query data from the tables in the PostgreSQL database using PHP PDO.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-PHP-Query-Example.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2016\/06\/PostgreSQL-PHP-Query-Example.png","width":199,"height":146},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/","name":"PostgreSQL PHP: Queying Data From PostgreSQL Tables","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/#primaryimage"},"datePublished":"2016-06-12T13:31:52+00:00","dateModified":"2022-02-09T14:55:54+00:00","description":"In this tutorial, you will step by step learn how to query data from the tables in the PostgreSQL database using PHP PDO.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-php\/query\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL PHP","item":"https:\/\/www.postgresqltutorial.com\/postgresql-php\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL PHP: Querying Data"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2035"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=2035"}],"version-history":[{"count":2,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2035\/revisions"}],"predecessor-version":[{"id":6100,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2035\/revisions\/6100"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1980"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=2035"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}