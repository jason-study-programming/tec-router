{"id":3224,"date":"2017-08-19T03:42:10","date_gmt":"2017-08-19T10:42:10","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=3224"},"modified":"2020-07-09T20:51:04","modified_gmt":"2020-07-10T03:51:04","slug":"postgresql-any","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-any\/","title":{"rendered":"PostgreSQL ANY Operator"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PostgreSQL <code>ANY<\/code> operator to compare a scalar value with a set of values returned by a subquery.<\/p>\n\n\n\n<h2>Introduction to PostgreSQL ANY operator<\/h2>\n\n\n\n<p>The PostgreSQL <code>ANY<\/code> operator compares a value to a set of values returned by a subquery. The following illustrates the syntax of &nbsp;the <code>ANY<\/code> operator:<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">expresion operator ANY(subquery)<\/code><\/div><\/pre>\n\n\n<p>In this syntax:<\/p>\n\n\n\n<ul><li>The <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-subquery\/\">subquery<\/a> must return exactly one column.<\/li><li>The <code>ANY<\/code> operator must be preceded by one of the following comparison operator =, &lt;=, &gt;, &lt;, &gt; and &lt;&gt;<\/li><li>The <code>ANY<\/code> operator returns true if any value of the subquery meets the condition, otherwise, it returns false.<\/li><\/ul>\n\n\n\n<p>Note that <code>SOME<\/code> is a synonym for <code>ANY<\/code>, meaning that you can substitute <code>SOME<\/code> for <code>ANY<\/code> in any SQL statement.<\/p>\n\n\n\n<h2>PostgreSQL ANY examples<\/h2>\n\n\n\n<p>We will use the following <code>film<\/code> and <code>film_category<\/code>tables in the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-sample-database\/\">sample database<\/a> for the demonstration.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"434\" height=\"305\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/08\/film-and-film_category-tables.png\" alt=\"film and film_category table\" class=\"wp-image-3226\" srcset=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/08\/film-and-film_category-tables.png 434w, https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/08\/film-and-film_category-tables-300x211.png 300w\" sizes=\"(max-width: 434px) 100vw, 434px\" \/><\/figure>\n\n\n\n<p>The following example returns the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-max-function\/\">maximum<\/a> length of film grouped by film category:<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">SELECT\n    MAX( length )\nFROM\n    film\nINNER JOIN film_category\n        USING(film_id)\nGROUP BY\n    category_id;<\/code><\/div><\/pre>\n\n\n<p>You can use this query as a subquery in the following statement that finds the films whose lengths are greater than or equal to the maximum length of any film category :<\/p>\n\n\n<pre class=\"wp-block-code\"><div><code class=\"hljs\">SELECT title\nFROM film\nWHERE length &gt;= ANY(\n    SELECT MAX( length )\n    FROM film\n    INNER JOIN film_category USING(film_id)\n    GROUP BY  category_id );<\/code><\/div><\/pre>\n\n\n<p>Here is the result:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"116\" height=\"171\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/08\/PostgreSQL-ANY-example.png\" alt=\"PostgreSQL ANY example\" class=\"wp-image-3232\"\/><\/figure>\n\n\n\n<p>For each film category, the subquery finds the maximum length. The outer query looks at all these values and determines which film&#8217;s lengths are greater than or equal to any film category&#8217;s maximum length.<\/p>\n\n\n\n<p>Note that if the subquery does not return any rows, the entire query returns an empty result set.<\/p>\n\n\n\n<h2>ANY vs. IN<\/h2>\n\n\n\n<p>The <code>= ANY<\/code> is equivalent to <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-in\/\"><code>IN<\/code><\/a> operator.<\/p>\n\n\n\n<p>The following example gets the film whose category is either <code>Action<\/code> or <code>Drama<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">SELECT\n    title,\n    category_id\nFROM\n    film\nINNER JOIN film_category\n        USING(film_id)\nWHERE\n    category_id = ANY(\n        SELECT\n            category_id\n        FROM\n            category\n        WHERE\n            NAME = <span class=\"hljs-string\">'Action'<\/span>\n            OR NAME = <span class=\"hljs-string\">'Drama'<\/span>\n    );<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The result is:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"235\" height=\"173\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/08\/PostgreSQL-ANY-and-IN-example.png\" alt=\"PostgreSQL ANY and IN example\" class=\"wp-image-3227\"\/><\/figure>\n\n\n\n<p>The following statement uses the <code>IN<\/code> operator which produces the same result:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><div><code class=\"hljs language-javascript\">SELECT\n    title,\n    category_id\nFROM\n    film\nINNER JOIN film_category\n        USING(film_id)\nWHERE\n    category_id IN(\n        SELECT\n            category_id\n        FROM\n            category\n        WHERE\n            NAME = <span class=\"hljs-string\">'Action'<\/span>\n            OR NAME = <span class=\"hljs-string\">'Drama'<\/span>\n    );<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Note that the <code>&lt;&gt; ANY<\/code> operator is different from <code>NOT IN<\/code>. The following expression:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><div><code class=\"hljs language-xml\">x <span class=\"hljs-tag\">&lt;&gt;<\/span> ANY (a,b,c) <\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>is equivalent to<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"HTML, XML\" data-shcb-language-slug=\"xml\"><div><code class=\"hljs language-xml\">x <span class=\"hljs-tag\">&lt;&gt;<\/span> a OR <span class=\"hljs-tag\">&lt;&gt;<\/span> b OR x <span class=\"hljs-tag\">&lt;&gt;<\/span> c<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">HTML, XML<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">xml<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned how to use the PostgreSQL <code>ANY<\/code> operator to compare a value to a set of values returned by a subquery.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"3224\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-any\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL ANY Operator\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"3224\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-any\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL ANY Operator\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>This tutorial shows you how to use the PostgreSQL ANY operator to compare a value to a set of values returned by a subquery.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":30,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgresQL ANY \/ SOME Operator By Practical Examples<\/title>\n<meta name=\"description\" content=\"This tutorial shows you how to use the PostgreSQL ANY operator to compare a value to a set of values returned by a subquery.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-any\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-any\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/08\/film-and-film_category-tables.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/08\/film-and-film_category-tables.png\",\"width\":434,\"height\":305},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-any\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-any\/\",\"name\":\"PostgresQL ANY \/ SOME Operator By Practical Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-any\/#primaryimage\"},\"datePublished\":\"2017-08-19T10:42:10+00:00\",\"dateModified\":\"2020-07-10T03:51:04+00:00\",\"description\":\"This tutorial shows you how to use the PostgreSQL ANY operator to compare a value to a set of values returned by a subquery.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-any\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-any\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-any\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL ANY Operator\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgresQL ANY \/ SOME Operator By Practical Examples","description":"This tutorial shows you how to use the PostgreSQL ANY operator to compare a value to a set of values returned by a subquery.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-any\/","twitter_misc":{"Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-any\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/08\/film-and-film_category-tables.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2017\/08\/film-and-film_category-tables.png","width":434,"height":305},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-any\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-any\/","name":"PostgresQL ANY \/ SOME Operator By Practical Examples","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-any\/#primaryimage"},"datePublished":"2017-08-19T10:42:10+00:00","dateModified":"2020-07-10T03:51:04+00:00","description":"This tutorial shows you how to use the PostgreSQL ANY operator to compare a value to a set of values returned by a subquery.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-any\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-any\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-any\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL ANY Operator"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3224"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=3224"}],"version-history":[{"count":1,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3224\/revisions"}],"predecessor-version":[{"id":4532,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3224\/revisions\/4532"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=3224"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}