{"id":3380,"date":"2018-03-10T01:02:31","date_gmt":"2018-03-10T08:02:31","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=3380"},"modified":"2020-07-12T04:02:13","modified_gmt":"2020-07-12T11:02:13","slug":"postgresql-self-join","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-self-join\/","title":{"rendered":"PostgreSQL Self-Join"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to use the PostgreSQL self-join technique to compare rows within the same table.<\/p>\n\n\n\n<h2>Introduction to PostgreSQL self-join<\/h2>\n\n\n\n<p>A self-join is a regular join that joins a table to itself. In practice, you typically use a self-join to query hierarchical data or to compare rows within the same table.<\/p>\n\n\n\n<p>To form a self-join, you specify the same table twice with <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-alias\/\">different table aliases<\/a> and provide the join predicate after the <code>ON<\/code> keyword.<\/p>\n\n\n\n<p>The following query uses an <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-inner-join\/\">INNER JOIN<\/a><\/code> that joins the table to itself:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> select_list\n<span class=\"hljs-keyword\">FROM<\/span> table_name t1\n<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> table_name t2 <span class=\"hljs-keyword\">ON<\/span> join_predicate;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax, the <code>table_name<\/code> is joined to itself using the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-inner-join\/\">INNER JOIN<\/a><\/code> clause. <\/p>\n\n\n\n<p>Also, you can use the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-left-join\/\">LEFT JOIN<\/a><\/code> or <code>RIGHT JOIN<\/code> clause to join table to itself like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> select_list\n<span class=\"hljs-keyword\">FROM<\/span> table_name t1\n<span class=\"hljs-keyword\">LEFT<\/span> <span class=\"hljs-keyword\">JOIN<\/span> table_name t2 <span class=\"hljs-keyword\">ON<\/span> join_predicate;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>PostgreSQL self-join examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using self-joins.<\/p>\n\n\n\n<h3>1) Querying hierarchical data example<\/h3>\n\n\n\n<p>Let&#8217;s set up a sample table for the demonstration.<\/p>\n\n\n\n<p>Suppose, you have the following organization structure:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"748\" height=\"319\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/PostgreSQL-Self-Join-Reporting-Structure.png\" alt=\"PostgreSQL Self Join - Reporting Structure\" class=\"wp-image-3390\"\/><\/figure>\n\n\n\n<p>The following statements create the <code>employee<\/code> table and insert some sample data into the table.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">TABLE<\/span> employee (\n\temployee_id <span class=\"hljs-built_in\">INT<\/span> PRIMARY <span class=\"hljs-keyword\">KEY<\/span>,\n\tfirst_name <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">255<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n\tlast_name <span class=\"hljs-built_in\">VARCHAR<\/span> (<span class=\"hljs-number\">255<\/span>) <span class=\"hljs-keyword\">NOT<\/span> <span class=\"hljs-literal\">NULL<\/span>,\n\tmanager_id <span class=\"hljs-built_in\">INT<\/span>,\n\t<span class=\"hljs-keyword\">FOREIGN<\/span> <span class=\"hljs-keyword\">KEY<\/span> (manager_id) \n\t<span class=\"hljs-keyword\">REFERENCES<\/span> employee (employee_id) \n\t<span class=\"hljs-keyword\">ON<\/span> <span class=\"hljs-keyword\">DELETE<\/span> <span class=\"hljs-keyword\">CASCADE<\/span>\n);\n<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> employee (\n\temployee_id,\n\tfirst_name,\n\tlast_name,\n\tmanager_id\n)\n<span class=\"hljs-keyword\">VALUES<\/span>\n\t(<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-string\">'Windy'<\/span>, <span class=\"hljs-string\">'Hays'<\/span>, <span class=\"hljs-literal\">NULL<\/span>),\n\t(<span class=\"hljs-number\">2<\/span>, <span class=\"hljs-string\">'Ava'<\/span>, <span class=\"hljs-string\">'Christensen'<\/span>, <span class=\"hljs-number\">1<\/span>),\n\t(<span class=\"hljs-number\">3<\/span>, <span class=\"hljs-string\">'Hassan'<\/span>, <span class=\"hljs-string\">'Conner'<\/span>, <span class=\"hljs-number\">1<\/span>),\n\t(<span class=\"hljs-number\">4<\/span>, <span class=\"hljs-string\">'Anna'<\/span>, <span class=\"hljs-string\">'Reeves'<\/span>, <span class=\"hljs-number\">2<\/span>),\n\t(<span class=\"hljs-number\">5<\/span>, <span class=\"hljs-string\">'Sau'<\/span>, <span class=\"hljs-string\">'Norman'<\/span>, <span class=\"hljs-number\">2<\/span>),\n\t(<span class=\"hljs-number\">6<\/span>, <span class=\"hljs-string\">'Kelsie'<\/span>, <span class=\"hljs-string\">'Hays'<\/span>, <span class=\"hljs-number\">3<\/span>),\n\t(<span class=\"hljs-number\">7<\/span>, <span class=\"hljs-string\">'Tory'<\/span>, <span class=\"hljs-string\">'Goff'<\/span>, <span class=\"hljs-number\">3<\/span>),\n\t(<span class=\"hljs-number\">8<\/span>, <span class=\"hljs-string\">'Salley'<\/span>, <span class=\"hljs-string\">'Lester'<\/span>, <span class=\"hljs-number\">3<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this <code>employee<\/code> table, the <code>manager_id<\/code> column references the <code>employee_id<\/code> column. The value in the manager_id column shows the manager that the employee directly reports to. When the value in the <code>manager_id<\/code> column is null, that employee does not report to anyone. In other words, he or she is the top manager.<\/p>\n\n\n\n<p>The following query uses the self-join to find who reports to whom:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n    e.first_name || <span class=\"hljs-string\">' '<\/span> || e.last_name employee,\n    m .first_name || <span class=\"hljs-string\">' '<\/span> || m .last_name manager\n<span class=\"hljs-keyword\">FROM<\/span>\n    employee e\n<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> employee m <span class=\"hljs-keyword\">ON<\/span> m .employee_id = e.manager_id\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> manager;\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"294\" height=\"210\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Self-Join-query-hierarchical-data.png\" alt=\"PostgreSQL Self-Join - query hierarchical data\" class=\"wp-image-4878\"\/><\/figure>\n\n\n\n<p>This query references the <code>employees<\/code> table twice, one as the employee and the other as the manager. It uses table aliases <code>e<\/code> for the employee and <code>m<\/code> for the\u00a0manager.<\/p>\n\n\n\n<p>The join predicate finds employee\/manager pair by matching values in the <code>employee_id<\/code> and <code>manager_id<\/code> columns.<\/p>\n\n\n\n<p>Notice that the top manager does not appear on the output.<\/p>\n\n\n\n<p>To include the top manager in the result set, you use the <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-left-join\/\">LEFT JOIN<\/a><\/code> instead of <code><a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-inner-join\/\">INNER JOIN<\/a><\/code> clause as shown in the following query:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n    e.first_name || <span class=\"hljs-string\">' '<\/span> || e.last_name employee,\n    m .first_name || <span class=\"hljs-string\">' '<\/span> || m .last_name manager\n<span class=\"hljs-keyword\">FROM<\/span>\n    employee e\n<span class=\"hljs-keyword\">LEFT<\/span> <span class=\"hljs-keyword\">JOIN<\/span> employee m <span class=\"hljs-keyword\">ON<\/span> m .employee_id = e.manager_id\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span> manager;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"331\" height=\"240\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Self-Join-query-hierarchical-data-with-left-join.png\" alt=\"PostgreSQL Self-Join - query hierarchical data with left join\" class=\"wp-image-4877\"\/><\/figure>\n\n\n\n<h3>2) Comparing the rows with the same table<\/h3>\n\n\n\n<p>See the following <code>film<\/code> table from the DVD rental database:<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" width=\"181\" height=\"306\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/film_table.png\" alt=\"Film Table\" class=\"wp-image-3449\"\/><\/figure>\n\n\n\n<p>The following query finds all pair of films that have the same length,<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n    f1.title,\n    f2.title,\n    f1.length\n<span class=\"hljs-keyword\">FROM<\/span>\n    film f1\n<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> film f2 \n    <span class=\"hljs-keyword\">ON<\/span> f1.film_id &lt;&gt; f2.film_id <span class=\"hljs-keyword\">AND<\/span> \n       f1.length = f2.length;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"447\" height=\"312\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Self-Join-compare-rows-within-the-same-table.png\" alt=\"PostgreSQL Self-Join - compare rows within the same table\" class=\"wp-image-4876\"\/><\/figure>\n\n\n\n<p>The join predicate matches two different films (<code>f1.film_id &lt;> f2.film_id<\/code>) that have the same length (<code>f1.length = f2.length<\/code>)<\/p>\n\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>A PostgreSQL self-join is a regular join that joins a table to itself using the <code>INNER JOIN<\/code> or <code>LEFT JOIN<\/code>.<\/li><li>Self-joins are very useful to query hierarchical data or to compare rows within the same table.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"3380\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-self-join\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Self-Join\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"3380\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-tutorial\/postgresql-self-join\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Self-Join\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>This tutorial shows you how to use the PostgreSQL self-join technique to join a table to itself.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":7,"menu_order":17,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PostgreSQL Self-join By Practical Examples<\/title>\n<meta name=\"description\" content=\"This tutorial shows you how to use the PostgreSQL self-join technique to join a table to itself.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/PostgreSQL-Self-Join-Reporting-Structure.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/PostgreSQL-Self-Join-Reporting-Structure.png\",\"width\":748,\"height\":319,\"caption\":\"PostgreSQL Self Join - Reporting Structure\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/\",\"name\":\"PostgreSQL Self-join By Practical Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/#primaryimage\"},\"datePublished\":\"2018-03-10T08:02:31+00:00\",\"dateModified\":\"2020-07-12T11:02:13+00:00\",\"description\":\"This tutorial shows you how to use the PostgreSQL self-join technique to join a table to itself.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Tutorial\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL Self-Join\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PostgreSQL Self-join By Practical Examples","description":"This tutorial shows you how to use the PostgreSQL self-join technique to join a table to itself.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/PostgreSQL-Self-Join-Reporting-Structure.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2018\/03\/PostgreSQL-Self-Join-Reporting-Structure.png","width":748,"height":319,"caption":"PostgreSQL Self Join - Reporting Structure"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/","name":"PostgreSQL Self-join By Practical Examples","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/#primaryimage"},"datePublished":"2018-03-10T08:02:31+00:00","dateModified":"2020-07-12T11:02:13+00:00","description":"This tutorial shows you how to use the PostgreSQL self-join technique to join a table to itself.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-self-join\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Tutorial","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL Self-Join"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3380"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=3380"}],"version-history":[{"count":5,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3380\/revisions"}],"predecessor-version":[{"id":4883,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/3380\/revisions\/4883"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/7"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=3380"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}