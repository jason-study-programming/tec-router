{"id":2393,"date":"2016-07-04T19:22:24","date_gmt":"2016-07-05T02:22:24","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=2393"},"modified":"2020-04-11T03:53:25","modified_gmt":"2020-04-11T10:53:25","slug":"postgresql-recursive-view","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-recursive-view\/","title":{"rendered":"PostgreSQL Recursive View"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to create a PostgreSQL recursive view using the CREATE RECURSIVE&nbsp;VIEW statement.<\/p>\n\n\n\n<h2>Introduction to the PostgreSQL recursive view<\/h2>\n\n\n\n<p>PostgreSQL 9.3 added a new syntax for creating recursive views specified in the standard SQL. The <code>CREATE RECURSIVE VIEW<\/code> statement is syntax sugar for a standard <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-recursive-query\/\">recursive query<\/a>.<\/p>\n\n\n\n<p>The following illustrates the <code>CREATE RECURSIVE VIEW<\/code> syntax:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">RECURSIVE<\/span> <span class=\"hljs-keyword\">VIEW<\/span> view_name(<span class=\"hljs-keyword\">columns<\/span>) <span class=\"hljs-keyword\">AS<\/span>\n<span class=\"hljs-keyword\">SELECT<\/span> <span class=\"hljs-keyword\">columns<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>First, specify the name of the view that you want to create in the <code>CREATE RECURSIVE VIEW<\/code> clause. You can add an optional schema-qualified to the name of the view.<\/p>\n\n\n\n<p>Second, add the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-select\/\">SELECT statement<\/a> to query data from base tables. The <code>SELECT<\/code> statement references the <code>view_name<\/code> to make the view recursive.<\/p>\n\n\n\n<p>This statement above is equivalent to the following statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">VIEW<\/span> view_name \n<span class=\"hljs-keyword\">AS<\/span>\n  <span class=\"hljs-keyword\">WITH<\/span> <span class=\"hljs-keyword\">RECURSIVE<\/span> cte_name (<span class=\"hljs-keyword\">columns<\/span>) <span class=\"hljs-keyword\">AS<\/span> (\n\u00a0   <span class=\"hljs-keyword\">SELECT<\/span> ...)\n  <span class=\"hljs-keyword\">SELECT<\/span> <span class=\"hljs-keyword\">columns<\/span> <span class=\"hljs-keyword\">FROM<\/span> cte_name;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Creating recursive view example<\/h2>\n\n\n\n<p>We will use the <code>employees<\/code> table created in the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-recursive-query\/\">recursive query tutorial<\/a> for the demonstration.<\/p>\n\n\n\n<p>The following recursive query returns the employee and their managers up to the CEO level using a common table expression or CTE.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">WITH<\/span> <span class=\"hljs-keyword\">RECURSIVE<\/span> reporting_line <span class=\"hljs-keyword\">AS<\/span> (\n\t<span class=\"hljs-keyword\">SELECT<\/span>\n\t\temployee_id,\n\t\tfull_name <span class=\"hljs-keyword\">AS<\/span> subordinates\n\t<span class=\"hljs-keyword\">FROM<\/span>\n\t\temployees\n\t<span class=\"hljs-keyword\">WHERE<\/span>\n\t\tmanager_id <span class=\"hljs-keyword\">IS<\/span> <span class=\"hljs-literal\">NULL<\/span>\n\t<span class=\"hljs-keyword\">UNION<\/span> <span class=\"hljs-keyword\">ALL<\/span>\n\t\t<span class=\"hljs-keyword\">SELECT<\/span>\n\t\t\te.employee_id,\n\t\t\t(\n\t\t\t\trl.subordinates || <span class=\"hljs-string\">' &gt; '<\/span> || e.full_name\n\t\t\t) <span class=\"hljs-keyword\">AS<\/span> subordinates\n\t\t<span class=\"hljs-keyword\">FROM<\/span>\n\t\t\temployees e\n\t\t<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> reporting_line rl <span class=\"hljs-keyword\">ON<\/span> e.manager_id = rl.employee_id\n) <span class=\"hljs-keyword\">SELECT<\/span>\n\temployee_id,\n\tsubordinates\n<span class=\"hljs-keyword\">FROM<\/span>\n\treporting_line\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span>\n\temployee_id;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"> employee_id |                         subordinates\n<span class=\"hljs-comment\">-------------+--------------------------------------------------------------<\/span>\n           1 | Michael North\n           2 | Michael North &gt; Megan Berry\n           3 | Michael North &gt; Sarah Berry\n           4 | Michael North &gt; Zoe Black\n           5 | Michael North &gt; Tim James\n           6 | Michael North &gt; Megan Berry &gt; Bella Tucker\n           7 | Michael North &gt; Megan Berry &gt; Ryan Metcalfe\n           8 | Michael North &gt; Megan Berry &gt; Max Mills\n           9 | Michael North &gt; Megan Berry &gt; Benjamin Glover\n          10 | Michael North &gt; Sarah Berry &gt; Carolyn Henderson\n          11 | Michael North &gt; Sarah Berry &gt; Nicola Kelly\n          12 | Michael North &gt; Sarah Berry &gt; Alexandra Climo\n          13 | Michael North &gt; Sarah Berry &gt; Dominic King\n          14 | Michael North &gt; Zoe Black &gt; Leonard Gray\n          15 | Michael North &gt; Zoe Black &gt; Eric Rampling\n          16 | Michael North &gt; Megan Berry &gt; Ryan Metcalfe &gt; Piers Paige\n          17 | Michael North &gt; Megan Berry &gt; Ryan Metcalfe &gt; Ryan Henderson\n          18 | Michael North &gt; Megan Berry &gt; Max Mills &gt; Frank Tucker\n          19 | Michael North &gt; Megan Berry &gt; Max Mills &gt; Nathan Ferguson\n          20 | Michael North &gt; Megan Berry &gt; Max Mills &gt; Kevin Rampling\n(20 rows)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>You can use the <code>CREATE RECURSIVE VIEW<\/code> statement to convert the query into a recursive view as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">RECURSIVE<\/span> <span class=\"hljs-keyword\">VIEW<\/span> reporting_line (employee_id, subordinates) <span class=\"hljs-keyword\">AS<\/span> \n<span class=\"hljs-keyword\">SELECT<\/span>\n\temployee_id,\n\tfull_name <span class=\"hljs-keyword\">AS<\/span> subordinates\n<span class=\"hljs-keyword\">FROM<\/span>\n\temployees\n<span class=\"hljs-keyword\">WHERE<\/span>\n\tmanager_id <span class=\"hljs-keyword\">IS<\/span> <span class=\"hljs-literal\">NULL<\/span>\n<span class=\"hljs-keyword\">UNION<\/span> <span class=\"hljs-keyword\">ALL<\/span>\n\t<span class=\"hljs-keyword\">SELECT<\/span>\n\t\te.employee_id,\n\t\t(\n\t\t\trl.subordinates || <span class=\"hljs-string\">' &gt; '<\/span> || e.full_name\n\t\t) <span class=\"hljs-keyword\">AS<\/span> subordinates\n\t<span class=\"hljs-keyword\">FROM<\/span>\n\t\temployees e\n\t<span class=\"hljs-keyword\">INNER<\/span> <span class=\"hljs-keyword\">JOIN<\/span> reporting_line rl <span class=\"hljs-keyword\">ON<\/span> e.manager_id = rl.employee_id;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To see the reporting line of the employee id 10, you query directly from the view:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span>\n\tsubordinates\n<span class=\"hljs-keyword\">FROM<\/span>\n\treporting_line\n<span class=\"hljs-keyword\">WHERE<\/span>\n\temployee_id = <span class=\"hljs-number\">10<\/span>;\n<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">                  subordinates\n<span class=\"hljs-comment\">-------------------------------------------------<\/span>\n Michael North &gt; Sarah Berry &gt; Carolyn Henderson\n(1 row)<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned how to create PostgreSQL recursive view based on a recursive query.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2393\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-recursive-view\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Recursive View\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2393\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-recursive-view\/\"\n\t\t\t\tdata-post-title=\"PostgreSQL Recursive View\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you will learn how to create a PostgreSQL recursive view using the CREATE RECURSIVE&nbsp;VIEW statement. Introduction to the PostgreSQL recursive view PostgreSQL 9.3 added a new syntax for creating recursive views specified in the standard SQL. The CREATE RECURSIVE VIEW statement is syntax sugar for a standard recursive query. The following [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":1041,"menu_order":5,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>How To Create a PostgreSQL Recursive View<\/title>\n<meta name=\"description\" content=\"This tutorial shows you step by step how to create a PostgreSQL recursive view using the CREATE RECURSIVE VIEW statement.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-recursive-view\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-recursive-view\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-recursive-view\/\",\"name\":\"How To Create a PostgreSQL Recursive View\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"datePublished\":\"2016-07-05T02:22:24+00:00\",\"dateModified\":\"2020-04-11T10:53:25+00:00\",\"description\":\"This tutorial shows you step by step how to create a PostgreSQL recursive view using the CREATE RECURSIVE VIEW statement.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-recursive-view\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-recursive-view\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-recursive-view\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Views\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"PostgreSQL Recursive View\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"How To Create a PostgreSQL Recursive View","description":"This tutorial shows you step by step how to create a PostgreSQL recursive view using the CREATE RECURSIVE VIEW statement.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-recursive-view\/","twitter_misc":{"Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-recursive-view\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-recursive-view\/","name":"How To Create a PostgreSQL Recursive View","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"datePublished":"2016-07-05T02:22:24+00:00","dateModified":"2020-04-11T10:53:25+00:00","description":"This tutorial shows you step by step how to create a PostgreSQL recursive view using the CREATE RECURSIVE VIEW statement.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-recursive-view\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-recursive-view\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-recursive-view\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Views","item":"https:\/\/www.postgresqltutorial.com\/postgresql-views\/"},{"@type":"ListItem","position":3,"name":"PostgreSQL Recursive View"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2393"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=2393"}],"version-history":[{"count":1,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2393\/revisions"}],"predecessor-version":[{"id":5766,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2393\/revisions\/5766"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1041"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=2393"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}