{"id":1712,"date":"2015-10-12T02:56:51","date_gmt":"2015-10-12T09:56:51","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=1712"},"modified":"2020-07-24T01:30:52","modified_gmt":"2020-07-24T08:30:52","slug":"plpgsql-function-returns-a-table","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/","title":{"rendered":"How to Develop a PL\/pgSQL Function That Returns a Table"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you will learn how to develop PostgreSQL functions that return a table.<\/p>\n\n\n\n<p>To define a function that returns a table, you use the following form of the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-create-function\/\">create function<\/a> statement:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">create<\/span> <span class=\"hljs-keyword\">or replace<\/span> <span class=\"hljs-keyword\">function<\/span> function_name (\n   parameter_list\n) \n<span class=\"hljs-keyword\">returns<\/span> <span class=\"hljs-keyword\">table<\/span> ( column_list ) \n<span class=\"hljs-keyword\">language<\/span> plpgsql\n<span class=\"hljs-keyword\">as<\/span> $$<span class=\"pgsql\">\n<span class=\"hljs-keyword\">declare<\/span> \n<span class=\"hljs-comment\">-- variable declaration<\/span>\n<span class=\"hljs-keyword\">begin<\/span>\n<span class=\"hljs-comment\">-- body<\/span>\n<span class=\"hljs-keyword\">end<\/span>; $$<\/span> <\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Instead of returning a single value, this syntax allows you to return a table with a specified column list:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">returns<\/span> <span class=\"hljs-keyword\">table<\/span> ( column_list ) <\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>We will use the <code>film<\/code> table from the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-sample-database\/\">sample database<\/a> for the demonstration:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"244\" height=\"319\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/film.png\" alt=\"\" class=\"wp-image-4017\"\/><\/figure>\n\n\n\n<p>The following function returns all films whose titles match a particular pattern using <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-like\/\">ILIKE operator<\/a>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">create<\/span> <span class=\"hljs-keyword\">or replace<\/span> <span class=\"hljs-keyword\">function<\/span> get_film (\n  p_pattern <span class=\"hljs-type\">varchar<\/span>\n) \n\t<span class=\"hljs-keyword\">returns<\/span> <span class=\"hljs-keyword\">table<\/span> (\n\t\tfilm_title <span class=\"hljs-type\">varchar<\/span>,\n\t\tfilm_release_year <span class=\"hljs-type\">int<\/span>\n\t) \n\t<span class=\"hljs-keyword\">language<\/span> plpgsql\n<span class=\"hljs-keyword\">as<\/span> $$<span class=\"pgsql\">\n<span class=\"hljs-keyword\">begin<\/span>\n\t<span class=\"hljs-keyword\">return query<\/span> \n\t\t<span class=\"hljs-keyword\">select<\/span>\n\t\t\ttitle,\n\t\t\trelease_year::<span class=\"hljs-type\">integer<\/span>\n\t\t<span class=\"hljs-keyword\">from<\/span>\n\t\t\tfilm\n\t\t<span class=\"hljs-keyword\">where<\/span>\n\t\t\ttitle <span class=\"hljs-keyword\">ilike<\/span> p_pattern;\n<span class=\"hljs-keyword\">end<\/span>;$$<\/span><\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This <code>get_film(varchar)<\/code> accepts one&nbsp;parameter <code>p_pattern<\/code> which is a pattern that you want to&nbsp;match with the film title.<\/p>\n\n\n\n<p>The function returns a query that is the result of a select statement. Note that the columns in the result set must be the same as the columns in the table defined after the <code>returns table<\/code> clause.<\/p>\n\n\n\n<p>Because the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-data-types\/\">data type<\/a> of <code>release_year<\/code> column from the <code>film<\/code> table is not integer, you need to cast it to an integer using the cast operator <code>::<\/code>.<\/p>\n\n\n\n<p>The folowing shows how to call the <code>get_film()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">SELECT<\/span> * <span class=\"hljs-keyword\">FROM<\/span> get_film (<span class=\"hljs-string\">'Al%'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"290\" height=\"287\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Function-returns-table.png\" alt=\"\" class=\"wp-image-5518\"\/><\/figure>\n\n\n\n<p>If you call the function using the following statement, PostgreSQL returns a table that consists of one column that holds an array of rows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PostgreSQL SQL dialect and PL\/pgSQL\" data-shcb-language-slug=\"pgsql\"><div><code class=\"hljs language-pgsql\"><span class=\"hljs-keyword\">SELECT<\/span> get_film (<span class=\"hljs-string\">'Al%'<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PostgreSQL SQL dialect and PL\/pgSQL<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">pgsql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"206\" height=\"286\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Function-returns-table-example.png\" alt=\"\" class=\"wp-image-5517\"\/><\/figure>\n\n\n\n<p>In practice, you often&nbsp;process each individual row before appending&nbsp;it in the function&#8217;s result set:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">create<\/span> <span class=\"hljs-keyword\">or<\/span> <span class=\"hljs-keyword\">replace<\/span> <span class=\"hljs-keyword\">function<\/span> get_film (\n\tp_pattern <span class=\"hljs-built_in\">varchar<\/span>,\n\tp_year <span class=\"hljs-built_in\">int<\/span>\n) \n<span class=\"hljs-keyword\">returns<\/span> <span class=\"hljs-keyword\">table<\/span> (\n\tfilm_title <span class=\"hljs-built_in\">varchar<\/span>,\n\tfilm_release_year <span class=\"hljs-built_in\">int<\/span>\n) \n<span class=\"hljs-keyword\">language<\/span> plpgsql\n<span class=\"hljs-keyword\">as<\/span> $$\n<span class=\"hljs-keyword\">declare<\/span> \n    var_r <span class=\"hljs-built_in\">record<\/span>;\n<span class=\"hljs-keyword\">begin<\/span>\n\t<span class=\"hljs-keyword\">for<\/span> var_r <span class=\"hljs-keyword\">in<\/span>(\n            <span class=\"hljs-keyword\">select<\/span> title, release_year \n            <span class=\"hljs-keyword\">from<\/span> film \n\t     <span class=\"hljs-keyword\">where<\/span> title <span class=\"hljs-keyword\">ilike<\/span> p_pattern <span class=\"hljs-keyword\">and<\/span> \n\t\t    release_year = p_year\n        ) <span class=\"hljs-keyword\">loop<\/span>  film_title := <span class=\"hljs-keyword\">upper<\/span>(var_r.title) ; \n\t\tfilm_release_year := var_r.release_year;\n           return next;\n\t<span class=\"hljs-keyword\">end<\/span> <span class=\"hljs-keyword\">loop<\/span>;\n<span class=\"hljs-keyword\">end<\/span>; $$ <\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we created the <code>get_film(varchar,int)<\/code> that accepts two parameters:<\/p>\n\n\n\n<ul><li>The <code>p_pattern<\/code>  is used to search for films.<\/li><li>The p_year is the release year of the films.<\/li><\/ul>\n\n\n\n<p>In the function body, we used a <code>for loop<\/code> staetment to process the query row by row.<\/p>\n\n\n\n<p>The <code>return next<\/code> statement adds a&nbsp;row to the returned table of the function. <\/p>\n\n\n\n<p>The following illustrates how to call the <code>get_film()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT<\/span> * <span class=\"hljs-keyword\">FROM<\/span> get_film (<span class=\"hljs-string\">'%er'<\/span>, <span class=\"hljs-number\">2006<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"291\" height=\"313\" src=\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2020\/07\/PostgreSQL-Function-returns-table-row-by-row.png\" alt=\"\" class=\"wp-image-5519\"\/><\/figure>\n\n\n\n<p class=\"note\">Note that this example is for the demonstration purposes.<\/p>\n\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use the <code>returns table (column_list)<\/code> in the <code>create function<\/code> to define a function that returns a table (or result set).<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1712\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/\"\n\t\t\t\tdata-post-title=\"How to Develop a PL\/pgSQL Function That Returns a Table\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1712\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/\"\n\t\t\t\tdata-post-title=\"How to Develop a PL\/pgSQL Function That Returns a Table\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, we will show you how to develop PostgreSQL functions that return a table.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":788,"menu_order":20,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>PL\/pgSQL Function Returns A Table<\/title>\n<meta name=\"description\" content=\"In this tutorial, we will show you how to develop PostgreSQL functions that return a table.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/#primaryimage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/film.png\",\"contentUrl\":\"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/film.png\",\"width\":244,\"height\":319},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/\",\"name\":\"PL\/pgSQL Function Returns A Table\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/#primaryimage\"},\"datePublished\":\"2015-10-12T09:56:51+00:00\",\"dateModified\":\"2020-07-24T08:30:52+00:00\",\"description\":\"In this tutorial, we will show you how to develop PostgreSQL functions that return a table.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL PL\/pgSQL\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"How to Develop a PL\/pgSQL Function That Returns a Table\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"PL\/pgSQL Function Returns A Table","description":"In this tutorial, we will show you how to develop PostgreSQL functions that return a table.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/","twitter_misc":{"Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/#primaryimage","url":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/film.png","contentUrl":"https:\/\/www.postgresqltutorial.com\/wp-content\/uploads\/2019\/05\/film.png","width":244,"height":319},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/","name":"PL\/pgSQL Function Returns A Table","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/#primaryimage"},"datePublished":"2015-10-12T09:56:51+00:00","dateModified":"2020-07-24T08:30:52+00:00","description":"In this tutorial, we will show you how to develop PostgreSQL functions that return a table.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/plpgsql-function-returns-a-table\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL PL\/pgSQL","item":"https:\/\/www.postgresqltutorial.com\/postgresql-plpgsql\/"},{"@type":"ListItem","position":3,"name":"How to Develop a PL\/pgSQL Function That Returns a Table"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1712"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=1712"}],"version-history":[{"count":5,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1712\/revisions"}],"predecessor-version":[{"id":5525,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1712\/revisions\/5525"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/788"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=1712"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}