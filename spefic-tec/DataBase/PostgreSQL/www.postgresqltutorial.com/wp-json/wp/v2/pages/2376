{"id":2376,"date":"2016-07-01T20:50:51","date_gmt":"2016-07-02T03:50:51","guid":{"rendered":"http:\/\/www.postgresqltutorial.com\/?page_id=2376"},"modified":"2020-04-11T03:53:25","modified_gmt":"2020-04-11T10:53:25","slug":"postgresql-views-with-check-option","status":"publish","type":"page","link":"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-views-with-check-option\/","title":{"rendered":"Creating Updatable Views Using the WITH CHECK OPTION Clause"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, we will show you how to create an updatable view using the <code>WITH CHECK OPTION<\/code> clause to ensure that the changes to the base tables through the view satisfy the view-defining condition.<\/p>\n\n\n\n<h2>Introduction to the WITH CHECK OPTION clause<\/h2>\n\n\n\n<p>In the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-updatable-views\/\">creating updatable view tutorial<\/a>, you have learned how to create an updatable view that allows you to change the data of the base table through the view.<\/p>\n\n\n\n<p>Let&#8217;s take a look at the <code>city<\/code> and <code>country<\/code> tables in the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-sample-database\/\">sample database<\/a>.<\/p>\n\n\n\n<p>The following statement creates an updatable view named <code>usa_city<\/code> that returns all cities in the&nbsp;Untied States.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">VIEW<\/span> usa_city <span class=\"hljs-keyword\">AS<\/span> <span class=\"hljs-keyword\">SELECT<\/span>\n\tcity_id,\n\tcity,\n\tcountry_id\n<span class=\"hljs-keyword\">FROM<\/span>\n\tcity\n<span class=\"hljs-keyword\">WHERE<\/span>\n\tcountry_id = <span class=\"hljs-number\">103<\/span>\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span>\n\tcity;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following statement inserts a new row into the <code>city<\/code> table through the usa_city.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> usa_city (city, country_id)\n<span class=\"hljs-keyword\">VALUES<\/span> (<span class=\"hljs-string\">'Birmingham'<\/span>, <span class=\"hljs-number\">102<\/span>);\n\n<span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> usa_city (city, country_id)\n<span class=\"hljs-keyword\">VALUES<\/span> (<span class=\"hljs-string\">'Cambridge'<\/span>, <span class=\"hljs-number\">102<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The issue is that the new row inserted is not visible in the&nbsp;view. It may pose a security issue because we may grant the permission to the users to update the cities in the United States, not the&nbsp;United Kingdom.<\/p>\n\n\n\n<p>To prevent users from the&nbsp;insert or update a row that not visible through the view, you use the <code>WITH CHECK OPTION<\/code> clause when creating the view.<\/p>\n\n\n\n<p>Let\u2019s change the <code>usa_city<\/code> view to include the <code>WITH CHECK OPTION<\/code> clause<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span>\n<span class=\"hljs-keyword\">OR<\/span> <span class=\"hljs-keyword\">REPLACE<\/span> <span class=\"hljs-keyword\">VIEW<\/span> usa_city <span class=\"hljs-keyword\">AS<\/span> <span class=\"hljs-keyword\">SELECT<\/span>\n\tcity_id,\n\tcity,\n\tcountry_id\n<span class=\"hljs-keyword\">FROM<\/span>\n\tcity\n<span class=\"hljs-keyword\">WHERE<\/span>\n\tcountry_id = <span class=\"hljs-number\">103<\/span>\n<span class=\"hljs-keyword\">ORDER<\/span> <span class=\"hljs-keyword\">BY<\/span>\n\tcity <span class=\"hljs-keyword\">WITH<\/span> <span class=\"hljs-keyword\">CHECK<\/span> <span class=\"hljs-keyword\">OPTION<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Now, run the following statement to insert another city for the <code>United Kingdom<\/code> country.<\/p>\n\n\n\n<p>PostgreSQL rejected the insert and issued an error.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">ERROR:\u00a0 new row violates <span class=\"hljs-keyword\">check<\/span> <span class=\"hljs-keyword\">option<\/span> <span class=\"hljs-keyword\">for<\/span> <span class=\"hljs-keyword\">view<\/span> <span class=\"hljs-string\">\"usa_city\"<\/span>\nDETAIL:\u00a0 Failing <span class=\"hljs-keyword\">row<\/span> contains (<span class=\"hljs-number\">604<\/span>, Cambridge, <span class=\"hljs-number\">102<\/span>, <span class=\"hljs-number\">2016<\/span><span class=\"hljs-number\">-07<\/span><span class=\"hljs-number\">-02<\/span> <span class=\"hljs-number\">08<\/span>:<span class=\"hljs-number\">41<\/span>:<span class=\"hljs-number\">01.828561<\/span>).<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>It works as expected.<\/p>\n\n\n\n<p>The following statement <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-update\/\">updates<\/a> the country of the city id 135 to the <code>United Kingdom<\/code>.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">UPDATE<\/span> usa_city\n<span class=\"hljs-keyword\">SET<\/span> country_id = <span class=\"hljs-number\">102<\/span>\n<span class=\"hljs-keyword\">WHERE<\/span>\n\tcity_id = <span class=\"hljs-number\">135<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>PostgreSQL rejected the update and issued an error.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">ERROR:  new row violates <span class=\"hljs-keyword\">check<\/span> <span class=\"hljs-keyword\">option<\/span> <span class=\"hljs-keyword\">for<\/span> <span class=\"hljs-keyword\">view<\/span> <span class=\"hljs-string\">\"usa_city\"<\/span>\nDETAIL:  Failing <span class=\"hljs-keyword\">row<\/span> contains (<span class=\"hljs-number\">135<\/span>, Dallas, <span class=\"hljs-number\">102<\/span>, <span class=\"hljs-number\">2016<\/span><span class=\"hljs-number\">-07<\/span><span class=\"hljs-number\">-02<\/span> <span class=\"hljs-number\">10<\/span>:<span class=\"hljs-number\">37<\/span>:<span class=\"hljs-number\">27.466176<\/span>).<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This is because the <a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-update\/\">UPDATE<\/a> statement causes the row that is being updated not visible through the <code>usa_city<\/code> view.<\/p>\n\n\n\n<h2>The scope of check with LOCAL and CASCADED<\/h2>\n\n\n\n<p>First, create a view that returns all cities with the name starting with the letter A.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">VIEW<\/span> city_a <span class=\"hljs-keyword\">AS<\/span> <span class=\"hljs-keyword\">SELECT<\/span>\n\tcity_id,\n\tcity,\n\tcountry_id\n<span class=\"hljs-keyword\">FROM<\/span>\n\tcity\n<span class=\"hljs-keyword\">WHERE<\/span>\n\tcity <span class=\"hljs-keyword\">LIKE<\/span> <span class=\"hljs-string\">'A%'<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>city_a<\/code> view does not have the <code>WITH CHECK OPTION<\/code> clause.<\/p>\n\n\n\n<p>Second, create another view that returns the cities whose name starts with the letter A and locate in the <code>United States<\/code>. This <code>city_a_usa<\/code> view is based on the <code>city_a<\/code> view.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span>\n<span class=\"hljs-keyword\">OR<\/span> <span class=\"hljs-keyword\">REPLACE<\/span> <span class=\"hljs-keyword\">VIEW<\/span> city_a_usa <span class=\"hljs-keyword\">AS<\/span> <span class=\"hljs-keyword\">SELECT<\/span>\n\tcity_id,\n\tcity,\n\tcountry_id\n<span class=\"hljs-keyword\">FROM<\/span>\n\tcity_a\n<span class=\"hljs-keyword\">WHERE<\/span>\n\tcountry_id = <span class=\"hljs-number\">103<\/span> \n<span class=\"hljs-keyword\">WITH<\/span> <span class=\"hljs-keyword\">CASCADED<\/span> <span class=\"hljs-keyword\">CHECK<\/span> <span class=\"hljs-keyword\">OPTION<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>city_a_usa<\/code> view has the&nbsp;<code>WITH CASCADED CHECK OPTION<\/code> clause. Notice the <code>CASCADED<\/code> option.<\/p>\n\n\n\n<p>The following statement&nbsp;<a href=\"https:\/\/www.postgresqltutorial.com\/postgresql-insert\/\">inserts a row<\/a> into the <code>city<\/code> table through the <code>city_a_usa<\/code> table.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> city_a_usa (city, country_id)\n<span class=\"hljs-keyword\">VALUES<\/span>\n\t(<span class=\"hljs-string\">'Houston'<\/span>, <span class=\"hljs-number\">103<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>PostgreSQL rejected the insert and issued the following error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\">ERROR: new row violates <span class=\"hljs-keyword\">check<\/span> <span class=\"hljs-keyword\">option<\/span> <span class=\"hljs-keyword\">for<\/span> <span class=\"hljs-keyword\">view<\/span> <span class=\"hljs-string\">\"city_a\"<\/span>\n<span class=\"hljs-keyword\">SQL<\/span> state: <span class=\"hljs-number\">44000<\/span>\nDetail: Failing <span class=\"hljs-keyword\">row<\/span> contains (<span class=\"hljs-number\">605<\/span>, Houston, <span class=\"hljs-number\">103<\/span>, <span class=\"hljs-number\">2016<\/span><span class=\"hljs-number\">-07<\/span><span class=\"hljs-number\">-02<\/span> <span class=\"hljs-number\">09<\/span>:<span class=\"hljs-number\">51<\/span>:<span class=\"hljs-number\">40.916855<\/span>).<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The error message indicates that the view-defining condition for the <code>city_a<\/code> view was violated even&nbsp;though the city_a view does not have the <code>WITH CHECK OPTION<\/code> clause.<\/p>\n\n\n\n<p>This is because when we used the <code>WITH CASCADED CHECK OPTION<\/code> for the <code>city_a_usa<\/code> view, PostgreSQL checked the view-defining condition of the <code>city_a_usa<\/code> view and also all the underlying views, in this case, it is the city_a view.<\/p>\n\n\n\n<p>To check the view-defining condition of the view that you insert or update, you use the <code>WITH LOCAL CHECK OPTION<\/code> as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE<\/span> <span class=\"hljs-keyword\">OR<\/span> <span class=\"hljs-keyword\">REPLACE<\/span> <span class=\"hljs-keyword\">VIEW<\/span> city_a_usa <span class=\"hljs-keyword\">AS<\/span> <span class=\"hljs-keyword\">SELECT<\/span>\n\tcity_id,\n\tcity,\n\tcountry_id\n<span class=\"hljs-keyword\">FROM<\/span>\n\tcity_a\n<span class=\"hljs-keyword\">WHERE<\/span>\n\tcountry_id = <span class=\"hljs-number\">103<\/span> \n<span class=\"hljs-keyword\">WITH<\/span> <span class=\"hljs-keyword\">LOCAL<\/span> <span class=\"hljs-keyword\">CHECK<\/span> <span class=\"hljs-keyword\">OPTION<\/span>;<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Let&#8217;s insert a new row into city table via the city_a_usa view again.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"SQL (Structured Query Language)\" data-shcb-language-slug=\"sql\"><div><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT<\/span> <span class=\"hljs-keyword\">INTO<\/span> city_a_usa (city, country_id)\n<span class=\"hljs-keyword\">VALUES<\/span>\n\t(<span class=\"hljs-string\">'Houston'<\/span>, <span class=\"hljs-number\">103<\/span>);<\/code><\/div><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">SQL (Structured Query Language)<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">sql<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>It succeeded this time because the new row satisfies the view-defining condition of the <code>city_a_usa<\/code> view.&nbsp;PostgreSQL did not check the view-defining conditions of the base views.<\/p>\n\n\n\n<p>In this tutorial, you have learned how to create updatable views using the <code>WITH CHECK OPTION<\/code> clause for checking the view-defining condition when making the changes to the underlying table through the view.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Was this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2376\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-views-with-check-option\/\"\n\t\t\t\tdata-post-title=\"Creating Updatable Views Using the WITH CHECK OPTION Clause\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2376\"\n\t\t\t\tdata-post-url=\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/postgresql-views-with-check-option\/\"\n\t\t\t\tdata-post-title=\"Creating Updatable Views Using the WITH CHECK OPTION Clause\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, we will show you how to create an updatable view using the WITH CHECK OPTION clause to ensure that the changes to the base tables through the view satisfy the view-defining condition. Introduction to the WITH CHECK OPTION clause In the creating updatable view tutorial, you have learned how to create [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":1041,"menu_order":4,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.0 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Creating PostgreSQL Views WITH CHECK OPTION<\/title>\n<meta name=\"description\" content=\"This tutorial shows you create updatable views using the WITH CHECK OPTION to ensure that the changes to the base table satisfy the view-defining condition.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.postgresqltutorial.com\/postgresql-views-with-check-option\/\" \/>\n<meta name=\"twitter:label1\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data1\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\",\"url\":\"https:\/\/www.postgresqltutorial.com\/\",\"name\":\"PostgreSQL Tutorial\",\"description\":\"Comprehensive Postgresql Tutorial\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-views-with-check-option\/#webpage\",\"url\":\"https:\/\/www.postgresqltutorial.com\/postgresql-views-with-check-option\/\",\"name\":\"Creating PostgreSQL Views WITH CHECK OPTION\",\"isPartOf\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/#website\"},\"datePublished\":\"2016-07-02T03:50:51+00:00\",\"dateModified\":\"2020-04-11T10:53:25+00:00\",\"description\":\"This tutorial shows you create updatable views using the WITH CHECK OPTION to ensure that the changes to the base table satisfy the view-defining condition.\",\"breadcrumb\":{\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-views-with-check-option\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.postgresqltutorial.com\/postgresql-views-with-check-option\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/www.postgresqltutorial.com\/postgresql-views-with-check-option\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/www.postgresqltutorial.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"PostgreSQL Views\",\"item\":\"https:\/\/www.postgresqltutorial.com\/postgresql-views\/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Creating Updatable Views Using the WITH CHECK OPTION Clause\"}]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Creating PostgreSQL Views WITH CHECK OPTION","description":"This tutorial shows you create updatable views using the WITH CHECK OPTION to ensure that the changes to the base table satisfy the view-defining condition.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/www.postgresqltutorial.com\/postgresql-views-with-check-option\/","twitter_misc":{"Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/www.postgresqltutorial.com\/#website","url":"https:\/\/www.postgresqltutorial.com\/","name":"PostgreSQL Tutorial","description":"Comprehensive Postgresql Tutorial","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/www.postgresqltutorial.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-views-with-check-option\/#webpage","url":"https:\/\/www.postgresqltutorial.com\/postgresql-views-with-check-option\/","name":"Creating PostgreSQL Views WITH CHECK OPTION","isPartOf":{"@id":"https:\/\/www.postgresqltutorial.com\/#website"},"datePublished":"2016-07-02T03:50:51+00:00","dateModified":"2020-04-11T10:53:25+00:00","description":"This tutorial shows you create updatable views using the WITH CHECK OPTION to ensure that the changes to the base table satisfy the view-defining condition.","breadcrumb":{"@id":"https:\/\/www.postgresqltutorial.com\/postgresql-views-with-check-option\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/www.postgresqltutorial.com\/postgresql-views-with-check-option\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/www.postgresqltutorial.com\/postgresql-views-with-check-option\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/www.postgresqltutorial.com\/"},{"@type":"ListItem","position":2,"name":"PostgreSQL Views","item":"https:\/\/www.postgresqltutorial.com\/postgresql-views\/"},{"@type":"ListItem","position":3,"name":"Creating Updatable Views Using the WITH CHECK OPTION Clause"}]}]}},"_links":{"self":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2376"}],"collection":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/comments?post=2376"}],"version-history":[{"count":1,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2376\/revisions"}],"predecessor-version":[{"id":5765,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/2376\/revisions\/5765"}],"up":[{"embeddable":true,"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/pages\/1041"}],"wp:attachment":[{"href":"https:\/\/www.postgresqltutorial.com\/wp-json\/wp\/v2\/media?parent=2376"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}